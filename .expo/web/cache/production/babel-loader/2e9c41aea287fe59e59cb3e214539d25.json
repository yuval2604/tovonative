{"ast":null,"code":"function getSceneIndicesForInterpolationInputRange(props){var scene=props.scene,scenes=props.scenes;var index=scene.index;var lastSceneIndexInScenes=scenes.length-1;var isBack=!scenes[lastSceneIndexInScenes].isActive;if(isBack){var currentSceneIndexInScenes=scenes.findIndex(function(item){return item===scene;});var targetSceneIndexInScenes=scenes.findIndex(function(item){return item.isActive;});var targetSceneIndex=scenes[targetSceneIndexInScenes].index;var lastSceneIndex=scenes[lastSceneIndexInScenes].index;if(index!==targetSceneIndex&&currentSceneIndexInScenes===lastSceneIndexInScenes){return{first:Math.min(targetSceneIndex,index-1),last:index+1};}else if(index===targetSceneIndex&&currentSceneIndexInScenes===targetSceneIndexInScenes){return{first:index-1,last:Math.max(lastSceneIndex,index+1)};}else if(index===targetSceneIndex||currentSceneIndexInScenes>targetSceneIndexInScenes){return null;}else{return{first:index-1,last:index+1};}}else{return{first:index-1,last:index+1};}}export default getSceneIndicesForInterpolationInputRange;","map":{"version":3,"sources":["getSceneIndicesForInterpolationInputRange.tsx"],"names":["scene","scenes","props","index","lastSceneIndexInScenes","isBack","currentSceneIndexInScenes","item","targetSceneIndexInScenes","targetSceneIndex","lastSceneIndex","first","Math","last"],"mappings":"AAOA,QAAA,CAAA,yCAAA,CAAA,KAAA,CAAiE,CAAA,GACvDA,CAAAA,KADuD,CACrCE,KADqC,CAAA,KAAA,CAChDD,MADgD,CACrCC,KADqC,CAAA,MAAA,CAE/D,GAAMC,CAAAA,KAAK,CAAGH,KAAK,CAAnB,KAAA,CACA,GAAMI,CAAAA,sBAAsB,CAAGH,MAAM,CAANA,MAAAA,CAA/B,CAAA,CACA,GAAMI,CAAAA,MAAM,CAAG,CAACJ,MAAM,CAANA,sBAAM,CAANA,CAAhB,QAAA,CAEA,GAAA,MAAA,CAAY,CACV,GAAMK,CAAAA,yBAAyB,CAAGL,MAAM,CAANA,SAAAA,CAAiB,SAAA,IAAA,CAAI,CAAA,MAAIM,CAAAA,IAAI,GAAR,KAAA,CAAvD,CAAkCN,CAAlC,CACA,GAAMO,CAAAA,wBAAwB,CAAGP,MAAM,CAANA,SAAAA,CAAiB,SAAA,IAAA,CAAI,CAAA,MAAIM,CAAAA,IAAI,CAAR,QAAA,CAAtD,CAAiCN,CAAjC,CACA,GAAMQ,CAAAA,gBAAgB,CAAGR,MAAM,CAANA,wBAAM,CAANA,CAAzB,KAAA,CACA,GAAMS,CAAAA,cAAc,CAAGT,MAAM,CAANA,sBAAM,CAANA,CAAvB,KAAA,CAEA,GACEE,KAAK,GAALA,gBAAAA,EACAG,yBAAyB,GAF3B,sBAAA,CAGE,CACA,MAAO,CACLK,KAAK,CAAEC,IAAI,CAAJA,GAAAA,CAAAA,gBAAAA,CAA2BT,KAAK,CADlC,CACES,CADF,CAELC,IAAI,CAAEV,KAAK,CAFb,CAAO,CAAP,CAJF,CAAA,IAQO,IACLA,KAAK,GAALA,gBAAAA,EACAG,yBAAyB,GAFpB,wBAAA,CAGL,CACA,MAAO,CACLK,KAAK,CAAER,KAAK,CADP,CAAA,CAELU,IAAI,CAAED,IAAI,CAAJA,GAAAA,CAAAA,cAAAA,CAAyBT,KAAK,CAFtC,CAEQS,CAFD,CAAP,CAJK,CAAA,IAQA,IACLT,KAAK,GAALA,gBAAAA,EACAG,yBAAyB,CAFpB,wBAAA,CAGL,CACA,MAAA,KAAA,CAJK,CAAA,IAKA,CACL,MAAO,CAAEK,KAAK,CAAER,KAAK,CAAd,CAAA,CAAoBU,IAAI,CAAEV,KAAK,CAAtC,CAAO,CAAP,CAEH,CA9BD,CAAA,IA8BO,CACL,MAAO,CAAEQ,KAAK,CAAER,KAAK,CAAd,CAAA,CAAoBU,IAAI,CAAEV,KAAK,CAAtC,CAAO,CAAP,CAEH,CAED,eAAA,CAAA,yCAAA","sourcesContent":["import { Scene } from '../types';\n\ntype Props = {\n  scene: Scene;\n  scenes: Scene[];\n};\n\nfunction getSceneIndicesForInterpolationInputRange(props: Props) {\n  const { scene, scenes } = props;\n  const index = scene.index;\n  const lastSceneIndexInScenes = scenes.length - 1;\n  const isBack = !scenes[lastSceneIndexInScenes].isActive;\n\n  if (isBack) {\n    const currentSceneIndexInScenes = scenes.findIndex(item => item === scene);\n    const targetSceneIndexInScenes = scenes.findIndex(item => item.isActive);\n    const targetSceneIndex = scenes[targetSceneIndexInScenes].index;\n    const lastSceneIndex = scenes[lastSceneIndexInScenes].index;\n\n    if (\n      index !== targetSceneIndex &&\n      currentSceneIndexInScenes === lastSceneIndexInScenes\n    ) {\n      return {\n        first: Math.min(targetSceneIndex, index - 1),\n        last: index + 1,\n      };\n    } else if (\n      index === targetSceneIndex &&\n      currentSceneIndexInScenes === targetSceneIndexInScenes\n    ) {\n      return {\n        first: index - 1,\n        last: Math.max(lastSceneIndex, index + 1),\n      };\n    } else if (\n      index === targetSceneIndex ||\n      currentSceneIndexInScenes > targetSceneIndexInScenes\n    ) {\n      return null;\n    } else {\n      return { first: index - 1, last: index + 1 };\n    }\n  } else {\n    return { first: index - 1, last: index + 1 };\n  }\n}\n\nexport default getSceneIndicesForInterpolationInputRange;\n"]},"metadata":{},"sourceType":"module"}