{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _jsxFileName=\"/Users/brentvatne/coding/react-navigation-core/src/navigators/createNavigator.js\";import React from'react';import invariant from\"../utils/invariant\";function createNavigator(NavigatorView,router,navigationConfig){var Navigator=function(_React$Component){_inherits(Navigator,_React$Component);function Navigator(){var _getPrototypeOf2;var _this;_classCallCheck(this,Navigator);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Navigator)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={descriptors:{},screenProps:_this.props.screenProps};return _this;}_createClass(Navigator,[{key:\"render\",value:function render(){return React.createElement(NavigatorView,_extends({},this.props,{screenProps:this.state.screenProps,navigation:this.props.navigation,navigationConfig:navigationConfig,descriptors:this.state.descriptors,__source:{fileName:_jsxFileName,lineNumber:61}}));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(nextProps,prevState){var prevDescriptors=prevState.descriptors;var navigation=nextProps.navigation,screenProps=nextProps.screenProps;invariant(navigation!=null,'The navigation prop is missing for this navigator. In react-navigation 3 you must set up your app container directly. More info: https://reactnavigation.org/docs/en/app-containers.html');var state=navigation.state;var routes=state.routes;if(typeof routes==='undefined'){throw new TypeError('No \"routes\" found in navigation state. Did you try to pass the navigation prop of a React component to a Navigator child? See https://reactnavigation.org/docs/en/custom-navigators.html#navigator-navigation-prop');}var descriptors={};routes.forEach(function(route){if(prevDescriptors&&prevDescriptors[route.key]&&route===prevDescriptors[route.key].state&&screenProps===prevState.screenProps){descriptors[route.key]=prevDescriptors[route.key];return;}var getComponent=router.getComponentForRouteName.bind(null,route.routeName);var childNavigation=navigation.getChildNavigation(route.key);var options=router.getScreenOptions(childNavigation,screenProps);descriptors[route.key]={key:route.key,getComponent:getComponent,options:options,state:route,navigation:childNavigation};});return{descriptors:descriptors,screenProps:screenProps};}}]);return Navigator;}(React.Component);Navigator.router=router;Navigator.navigationOptions=navigationConfig.navigationOptions;return Navigator;}export default createNavigator;","map":{"version":3,"sources":["createNavigator.js"],"names":["Navigator","React","navigationConfig","descriptors","screenProps","prevDescriptors","prevState","navigation","nextProps","invariant","state","routes","route","getComponent","router","childNavigation","options","key"],"mappings":"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","sourcesContent":["import React from 'react';\nimport invariant from '../utils/invariant';\n\nfunction createNavigator(NavigatorView, router, navigationConfig) {\n  class Navigator extends React.Component {\n    static router = router;\n    static navigationOptions = navigationConfig.navigationOptions;\n\n    state = {\n      descriptors: {},\n      screenProps: this.props.screenProps,\n    };\n\n    static getDerivedStateFromProps(nextProps, prevState) {\n      const prevDescriptors = prevState.descriptors;\n      const { navigation, screenProps } = nextProps;\n      invariant(\n        navigation != null,\n        'The navigation prop is missing for this navigator. In react-navigation 3 you must set up your app container directly. More info: https://reactnavigation.org/docs/en/app-containers.html'\n      );\n      const { state } = navigation;\n      const { routes } = state;\n      if (typeof routes === 'undefined') {\n        throw new TypeError(\n          'No \"routes\" found in navigation state. Did you try to pass the navigation prop of a React component to a Navigator child? See https://reactnavigation.org/docs/en/custom-navigators.html#navigator-navigation-prop'\n        );\n      }\n\n      const descriptors = {};\n\n      routes.forEach(route => {\n        if (\n          prevDescriptors &&\n          prevDescriptors[route.key] &&\n          route === prevDescriptors[route.key].state &&\n          screenProps === prevState.screenProps\n        ) {\n          descriptors[route.key] = prevDescriptors[route.key];\n          return;\n        }\n        const getComponent = router.getComponentForRouteName.bind(\n          null,\n          route.routeName\n        );\n        const childNavigation = navigation.getChildNavigation(route.key);\n        const options = router.getScreenOptions(childNavigation, screenProps);\n        descriptors[route.key] = {\n          key: route.key,\n          getComponent,\n          options,\n          state: route,\n          navigation: childNavigation,\n        };\n      });\n\n      return { descriptors, screenProps };\n    }\n\n    render() {\n      return (\n        <NavigatorView\n          {...this.props}\n          screenProps={this.state.screenProps}\n          navigation={this.props.navigation}\n          navigationConfig={navigationConfig}\n          descriptors={this.state.descriptors}\n        />\n      );\n    }\n  }\n\n  return Navigator;\n}\n\nexport default createNavigator;\n"]},"metadata":{},"sourceType":"module"}