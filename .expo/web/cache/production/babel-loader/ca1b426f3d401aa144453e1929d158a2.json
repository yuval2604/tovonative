{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import*as React from'react';import PropTypes from'prop-types';import TouchableNativeFeedback from\"react-native-web/dist/exports/TouchableNativeFeedback\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Platform from\"react-native-web/dist/exports/Platform\";import View from\"react-native-web/dist/exports/View\";var LOLLIPOP=21;var TouchableItem=function(_React$Component){_inherits(TouchableItem,_React$Component);function TouchableItem(){_classCallCheck(this,TouchableItem);return _possibleConstructorReturn(this,_getPrototypeOf(TouchableItem).apply(this,arguments));}_createClass(TouchableItem,[{key:\"render\",value:function render(){var _this$props=this.props,style=_this$props.style,pressOpacity=_this$props.pressOpacity,pressColor=_this$props.pressColor,borderless=_this$props.borderless,rest=_objectWithoutProperties(_this$props,[\"style\",\"pressOpacity\",\"pressColor\",\"borderless\"]);if(Platform.OS==='android'&&Platform.Version>=LOLLIPOP){return React.createElement(TouchableNativeFeedback,_extends({},rest,{background:TouchableNativeFeedback.Ripple(pressColor,borderless)}),React.createElement(View,{style:style},React.Children.only(this.props.children)));}else{return React.createElement(TouchableOpacity,_extends({},rest,{rejectResponderTermination:true,style:style,activeOpacity:pressOpacity}),this.props.children);}}}]);return TouchableItem;}(React.Component);TouchableItem.propTypes={onPress:PropTypes.func.isRequired,delayPressIn:PropTypes.number,borderless:PropTypes.bool,pressColor:PropTypes.string,pressOpacity:PropTypes.number,children:PropTypes.node.isRequired};TouchableItem.defaultProps={pressColor:'rgba(255, 255, 255, .4)'};export{TouchableItem as default};","map":{"version":3,"sources":["/Users/yuvalbeiser/Downloads/codecanyon-B1UUUVLW-harrier-react-native-ecommerce-ui-kit-template/eCommerce2/node_modules/react-native-tab-view/src/TouchableItem.js"],"names":["React","PropTypes","LOLLIPOP","TouchableItem","props","style","pressOpacity","pressColor","borderless","rest","Platform","OS","Version","TouchableNativeFeedback","Ripple","Children","only","children","Component","propTypes","onPress","func","isRequired","delayPressIn","number","bool","string","node","defaultProps"],"mappings":"6dAEA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,YAAtB,C,0RASA,GAAMC,CAAAA,QAAQ,CAAG,EAAjB,C,GAYqBC,CAAAA,a,kSAcV,iBAC0D,KAAKC,KAD/D,CACCC,KADD,aACCA,KADD,CACQC,YADR,aACQA,YADR,CACsBC,UADtB,aACsBA,UADtB,CACkCC,UADlC,aACkCA,UADlC,CACiDC,IADjD,0FAGP,GAAIC,QAAQ,CAACC,EAAT,GAAgB,SAAhB,EAA6BD,QAAQ,CAACE,OAAT,EAAoBV,QAArD,CAA+D,CAC7D,MACE,qBAAC,uBAAD,aACMO,IADN,EAEE,UAAU,CAAEI,uBAAuB,CAACC,MAAxB,CAA+BP,UAA/B,CAA2CC,UAA3C,CAFd,GAIE,oBAAC,IAAD,EAAM,KAAK,CAAEH,KAAb,EAAqBL,KAAK,CAACe,QAAN,CAAeC,IAAf,CAAoB,KAAKZ,KAAL,CAAWa,QAA/B,CAArB,CAJF,CADF,CAQD,CATD,IASO,CACL,MACE,qBAAC,gBAAD,aACMR,IADN,EAEE,0BAA0B,KAF5B,CAGE,KAAK,CAAEJ,KAHT,CAIE,aAAa,CAAEC,YAJjB,GAMG,KAAKF,KAAL,CAAWa,QANd,CADF,CAUD,CACF,C,2BAtCwCjB,KAAK,CAACkB,S,EAA5Bf,a,CACZgB,S,CAAY,CACjBC,OAAO,CAAEnB,SAAS,CAACoB,IAAV,CAAeC,UADP,CAEjBC,YAAY,CAAEtB,SAAS,CAACuB,MAFP,CAGjBhB,UAAU,CAAEP,SAAS,CAACwB,IAHL,CAIjBlB,UAAU,CAAEN,SAAS,CAACyB,MAJL,CAKjBpB,YAAY,CAAEL,SAAS,CAACuB,MALP,CAMjBP,QAAQ,CAAEhB,SAAS,CAAC0B,IAAV,CAAeL,UANR,C,CADAnB,a,CAUZyB,Y,CAAe,CACpBrB,UAAU,CAAE,yBADQ,C,QAVHJ,a","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  TouchableNativeFeedback,\n  TouchableOpacity,\n  Platform,\n  View,\n} from 'react-native';\nimport type { ViewStyleProp } from 'react-native/Libraries/StyleSheet/StyleSheet';\n\nconst LOLLIPOP = 21;\n\ntype Props = {\n  onPress: () => mixed,\n  delayPressIn?: number,\n  borderless?: boolean,\n  pressColor?: string,\n  pressOpacity?: number,\n  children?: React.Node,\n  style?: ViewStyleProp,\n};\n\nexport default class TouchableItem extends React.Component<Props> {\n  static propTypes = {\n    onPress: PropTypes.func.isRequired,\n    delayPressIn: PropTypes.number,\n    borderless: PropTypes.bool,\n    pressColor: PropTypes.string,\n    pressOpacity: PropTypes.number,\n    children: PropTypes.node.isRequired,\n  };\n\n  static defaultProps = {\n    pressColor: 'rgba(255, 255, 255, .4)',\n  };\n\n  render() {\n    const { style, pressOpacity, pressColor, borderless, ...rest } = this.props;\n\n    if (Platform.OS === 'android' && Platform.Version >= LOLLIPOP) {\n      return (\n        <TouchableNativeFeedback\n          {...rest}\n          background={TouchableNativeFeedback.Ripple(pressColor, borderless)}\n        >\n          <View style={style}>{React.Children.only(this.props.children)}</View>\n        </TouchableNativeFeedback>\n      );\n    } else {\n      return (\n        <TouchableOpacity\n          {...rest}\n          rejectResponderTermination\n          style={style}\n          activeOpacity={pressOpacity}\n        >\n          {this.props.children}\n        </TouchableOpacity>\n      );\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}