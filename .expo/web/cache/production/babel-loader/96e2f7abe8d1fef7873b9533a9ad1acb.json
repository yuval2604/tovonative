{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.SwipeRow=undefined;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _jsxFileName='src/basic/SwipeRow.js';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=require('react');var _react2=_interopRequireDefault(_react);var _propTypes=require('prop-types');var _propTypes2=_interopRequireDefault(_propTypes);var _reactNative=require(\"react-native-web/dist/index\");var _nativeBaseShoutemTheme=require('native-base-shoutem-theme');var _mapPropsToStyleNames=require(\"../utils/mapPropsToStyleNames\");var _mapPropsToStyleNames2=_interopRequireDefault(_mapPropsToStyleNames);var _Left=require(\"./Left\");var _Right=require(\"./Right\");var _Body=require(\"./Body\");var _ListItem=require(\"./ListItem\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var PREVIEW_OPEN_DELAY=700;var PREVIEW_CLOSE_DELAY=300;var SwipeRow=function(_Component){_inherits(SwipeRow,_Component);function SwipeRow(props){_classCallCheck(this,SwipeRow);var _this=_possibleConstructorReturn(this,(SwipeRow.__proto__||Object.getPrototypeOf(SwipeRow)).call(this,props));_this.horizontalSwipeGestureBegan=false;_this.swipeInitialX=null;_this.parentScrollEnabled=true;_this.ranPreview=false;_this.state={dimensionsSet:false,hiddenHeight:0,hiddenWidth:0};_this._translateX=new _reactNative.Animated.Value(0);return _this;}_createClass(SwipeRow,[{key:'componentDidMount',value:function componentDidMount(){var _this2=this;this._panResponder=_reactNative.PanResponder.create({onMoveShouldSetPanResponder:function onMoveShouldSetPanResponder(e,gs){return _this2.handleOnMoveShouldSetPanResponder(e,gs);},onPanResponderMove:function onPanResponderMove(e,gs){return _this2.handlePanResponderMove(e,gs);},onPanResponderRelease:function onPanResponderRelease(e,gs){return _this2.handlePanResponderEnd(e,gs);},onPanResponderTerminate:function onPanResponderTerminate(e,gs){return _this2.handlePanResponderEnd(e,gs);},onShouldBlockNativeResponder:function onShouldBlockNativeResponder(_){return false;}});}},{key:'getPreviewAnimation',value:function getPreviewAnimation(toValue,delay){return _reactNative.Animated.timing(this._translateX,{duration:this.props.previewDuration,toValue:toValue,delay:delay,useNativeDriver:true});}},{key:'onContentLayout',value:function onContentLayout(e){var _this3=this;this.setState({dimensionsSet:!this.props.recalculateHiddenLayout,hiddenHeight:e.nativeEvent.layout.height,hiddenWidth:e.nativeEvent.layout.width});if(this.props.preview&&!this.ranPreview){this.ranPreview=true;var previewOpenValue=this.props.previewOpenValue||this.props.rightOpenValue*0.5;this.getPreviewAnimation(previewOpenValue,PREVIEW_OPEN_DELAY).start(function(_){_this3.getPreviewAnimation(0,PREVIEW_CLOSE_DELAY).start();});}}},{key:'handleOnMoveShouldSetPanResponder',value:function handleOnMoveShouldSetPanResponder(e,gs){var dx=gs.dx;return Math.abs(dx)>this.props.directionalDistanceChangeThreshold;}},{key:'handlePanResponderMove',value:function handlePanResponderMove(e,gestureState){var dx=gestureState.dx,dy=gestureState.dy;var absDx=Math.abs(dx);var absDy=Math.abs(dy);if(absDx>this.props.directionalDistanceChangeThreshold||absDy>this.props.directionalDistanceChangeThreshold){if(absDy>absDx&&!this.horizontalSwipeGestureBegan){return;}if(this.parentScrollEnabled){this.parentScrollEnabled=false;this.props.setScrollEnabled&&this.props.setScrollEnabled(false);}if(this.swipeInitialX===null){this.swipeInitialX=this._translateX._value;}if(!this.horizontalSwipeGestureBegan){this.horizontalSwipeGestureBegan=true;this.props.swipeGestureBegan&&this.props.swipeGestureBegan();}var newDX=this.swipeInitialX+dx;if(this.props.disableLeftSwipe&&newDX<0){newDX=0;}if(this.props.disableRightSwipe&&newDX>0){newDX=0;}if(this.props.stopLeftSwipe&&newDX>this.props.stopLeftSwipe){newDX=this.props.stopLeftSwipe;}if(this.props.stopRightSwipe&&newDX<this.props.stopRightSwipe){newDX=this.props.stopRightSwipe;}this._translateX.setValue(newDX);}}},{key:'handlePanResponderEnd',value:function handlePanResponderEnd(e,gestureState){if(!this.parentScrollEnabled){this.parentScrollEnabled=true;this.props.setScrollEnabled&&this.props.setScrollEnabled(true);}var toValue=0;if(this._translateX._value>=0){if(this._translateX._value>this.props.leftOpenValue*(this.props.swipeToOpenPercent/100)){toValue=this.props.leftOpenValue;}}else{if(this._translateX._value<this.props.rightOpenValue*(this.props.swipeToOpenPercent/100)){toValue=this.props.rightOpenValue;}}this.manuallySwipeRow(toValue);}},{key:'closeRow',value:function closeRow(){this.manuallySwipeRow(0);}},{key:'openLeftRow',value:function openLeftRow(){this.manuallySwipeRow(this.props.leftOpenValue);}},{key:'openRightRow',value:function openRightRow(){this.manuallySwipeRow(this.props.rightOpenValue);}},{key:'manuallySwipeRow',value:function manuallySwipeRow(toValue){var _this4=this;_reactNative.Animated.spring(this._translateX,{toValue:toValue,friction:this.props.friction,tension:this.props.tension,useNativeDriver:true}).start(function(_){if(toValue===0){_this4.props.onRowDidClose&&_this4.props.onRowDidClose();}else{_this4.props.onRowDidOpen&&_this4.props.onRowDidOpen();}});if(toValue===0){this.props.onRowClose&&this.props.onRowClose();}else{this.props.onRowOpen&&this.props.onRowOpen(toValue);}this.swipeInitialX=null;this.horizontalSwipeGestureBegan=false;}},{key:'renderMainContent',value:function renderMainContent(){var _this5=this;if(this.state.dimensionsSet){return _react2.default.createElement(_reactNative.Animated.View,_extends({},this._panResponder.panHandlers,{style:{transform:[{translateX:this._translateX}],zIndex:2},__source:{fileName:_jsxFileName,lineNumber:216}}),!this.props.list?_react2.default.createElement(_ListItem.ListItem,{list:true,style:this.props.style,__source:{fileName:_jsxFileName,lineNumber:224}},this.props.body):_react2.default.createElement(_reactNative.View,{style:[{backgroundColor:'#FFF'},this.props.style],__source:{fileName:_jsxFileName,lineNumber:228}},this.props.body));}return _react2.default.createElement(_reactNative.Animated.View,_extends({},this._panResponder.panHandlers,{onLayout:function onLayout(e){return _this5.onContentLayout(e);},style:{transform:[{translateX:this._translateX}],zIndex:2},__source:{fileName:_jsxFileName,lineNumber:236}}),!this.props.list?_react2.default.createElement(_ListItem.ListItem,{list:true,style:this.props.style,__source:{fileName:_jsxFileName,lineNumber:245}},this.props.body):_react2.default.createElement(_reactNative.View,{style:[{backgroundColor:'#FFF'},this.props.style],__source:{fileName:_jsxFileName,lineNumber:249}},this.props.body));}},{key:'render',value:function render(){return _react2.default.createElement(_reactNative.View,{style:this.props.style?this.props.style:undefined,__source:{fileName:_jsxFileName,lineNumber:259}},_react2.default.createElement(_reactNative.View,{style:[styles.hidden,{height:this.state.hiddenHeight,flex:1,flexDirection:'row',justifyContent:'space-between'}],__source:{fileName:_jsxFileName,lineNumber:260}},_react2.default.createElement(_Left.Left,{style:{width:this.props.leftOpenValue,zIndex:1},__source:{fileName:_jsxFileName,lineNumber:271}},this.props.left),_react2.default.createElement(_Body.Body,{style:{flex:0},__source:{fileName:_jsxFileName,lineNumber:274}}),_react2.default.createElement(_Right.Right,{style:{width:-this.props.rightOpenValue,zIndex:1},__source:{fileName:_jsxFileName,lineNumber:275}},this.props.right)),this.renderMainContent());}}]);return SwipeRow;}(_react.Component);SwipeRow.defaultProps={leftOpenValue:0,rightOpenValue:0,closeOnRowPress:true,disableLeftSwipe:false,disableRightSwipe:false,recalculateHiddenLayout:false,preview:false,previewDuration:300,directionalDistanceChangeThreshold:2,swipeToOpenPercent:50};var styles={container:{},hidden:{bottom:0,left:0,overflow:'hidden',position:'absolute',right:0,top:0}};var StyledSwipeRow=(0,_nativeBaseShoutemTheme.connectStyle)('NativeBase.SwipeRow',{},_mapPropsToStyleNames2.default)(SwipeRow);exports.SwipeRow=StyledSwipeRow;","map":{"version":3,"sources":["../../../src/basic/SwipeRow.js"],"names":["PREVIEW_OPEN_DELAY","PREVIEW_CLOSE_DELAY","SwipeRow","Component","defaultProps","leftOpenValue","rightOpenValue","closeOnRowPress","disableLeftSwipe","disableRightSwipe","recalculateHiddenLayout","preview","previewDuration","directionalDistanceChangeThreshold","swipeToOpenPercent","dimensionsSet","hiddenHeight","hiddenWidth","Animated","PanResponder","onMoveShouldSetPanResponder","onPanResponderMove","onPanResponderRelease","onPanResponderTerminate","onShouldBlockNativeResponder","toValue","delay","duration","useNativeDriver","e","previewOpenValue","gs","dx","Math","gestureState","dy","absDx","absDy","newDX","friction","tension","transform","translateX","zIndex","backgroundColor","styles","height","flex","flexDirection","justifyContent","width","container","hidden","bottom","left","overflow","position","right","top","StyledSwipeRow","mapPropsToStyleNames"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Animated, PanResponder, View } from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\n\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\n\nimport { Left } from './Left';\nimport { Right } from './Right';\nimport { Body } from './Body';\nimport { ListItem } from './ListItem';\n\nconst PREVIEW_OPEN_DELAY = 700;\nconst PREVIEW_CLOSE_DELAY = 300;\n\nclass SwipeRow extends Component {\n  static defaultProps = {\n    leftOpenValue: 0,\n    rightOpenValue: 0,\n    closeOnRowPress: true,\n    disableLeftSwipe: false,\n    disableRightSwipe: false,\n    recalculateHiddenLayout: false,\n    preview: false,\n    previewDuration: 300,\n    directionalDistanceChangeThreshold: 2,\n    swipeToOpenPercent: 50\n  };\n  constructor(props) {\n    super(props);\n    this.horizontalSwipeGestureBegan = false;\n    this.swipeInitialX = null;\n    this.parentScrollEnabled = true;\n    this.ranPreview = false;\n    this.state = {\n      dimensionsSet: false,\n      hiddenHeight: 0,\n      hiddenWidth: 0\n    };\n    this._translateX = new Animated.Value(0);\n  }\n\n  componentDidMount() {\n    this._panResponder = PanResponder.create({\n      onMoveShouldSetPanResponder: (e, gs) =>\n        this.handleOnMoveShouldSetPanResponder(e, gs),\n      onPanResponderMove: (e, gs) => this.handlePanResponderMove(e, gs),\n      onPanResponderRelease: (e, gs) => this.handlePanResponderEnd(e, gs),\n      onPanResponderTerminate: (e, gs) => this.handlePanResponderEnd(e, gs),\n      onShouldBlockNativeResponder: _ => false\n    });\n  }\n\n  getPreviewAnimation(toValue, delay) {\n    return Animated.timing(this._translateX, {\n      duration: this.props.previewDuration,\n      toValue,\n      delay,\n      useNativeDriver: true\n    });\n  }\n\n  onContentLayout(e) {\n    this.setState({\n      dimensionsSet: !this.props.recalculateHiddenLayout,\n      hiddenHeight: e.nativeEvent.layout.height,\n      hiddenWidth: e.nativeEvent.layout.width\n    });\n\n    if (this.props.preview && !this.ranPreview) {\n      this.ranPreview = true;\n      const previewOpenValue =\n        this.props.previewOpenValue || this.props.rightOpenValue * 0.5;\n      this.getPreviewAnimation(previewOpenValue, PREVIEW_OPEN_DELAY).start(\n        _ => {\n          this.getPreviewAnimation(0, PREVIEW_CLOSE_DELAY).start();\n        }\n      );\n    }\n  }\n\n  handleOnMoveShouldSetPanResponder(e, gs) {\n    const { dx } = gs;\n    return Math.abs(dx) > this.props.directionalDistanceChangeThreshold;\n  }\n\n  handlePanResponderMove(e, gestureState) {\n    const { dx, dy } = gestureState;\n    const absDx = Math.abs(dx);\n    const absDy = Math.abs(dy);\n\n    // this check may not be necessary because we don't capture the move until we pass the threshold\n    // just being extra safe here\n    if (\n      absDx > this.props.directionalDistanceChangeThreshold ||\n      absDy > this.props.directionalDistanceChangeThreshold\n    ) {\n      // we have enough to determine direction\n      if (absDy > absDx && !this.horizontalSwipeGestureBegan) {\n        // user is moving vertically, do nothing, listView will handle\n        return;\n      }\n\n      // user is moving horizontally\n      if (this.parentScrollEnabled) {\n        // disable scrolling on the listView parent\n        this.parentScrollEnabled = false;\n        this.props.setScrollEnabled && this.props.setScrollEnabled(false);\n      }\n\n      if (this.swipeInitialX === null) {\n        // set tranlateX value when user started swiping\n        this.swipeInitialX = this._translateX._value;\n      }\n      if (!this.horizontalSwipeGestureBegan) {\n        this.horizontalSwipeGestureBegan = true;\n        this.props.swipeGestureBegan && this.props.swipeGestureBegan();\n      }\n\n      let newDX = this.swipeInitialX + dx;\n      if (this.props.disableLeftSwipe && newDX < 0) {\n        newDX = 0;\n      }\n      if (this.props.disableRightSwipe && newDX > 0) {\n        newDX = 0;\n      }\n\n      if (this.props.stopLeftSwipe && newDX > this.props.stopLeftSwipe) {\n        newDX = this.props.stopLeftSwipe;\n      }\n      if (this.props.stopRightSwipe && newDX < this.props.stopRightSwipe) {\n        newDX = this.props.stopRightSwipe;\n      }\n\n      this._translateX.setValue(newDX);\n    }\n  }\n\n  handlePanResponderEnd(e, gestureState) {\n    // re-enable scrolling on listView parent\n    if (!this.parentScrollEnabled) {\n      this.parentScrollEnabled = true;\n      this.props.setScrollEnabled && this.props.setScrollEnabled(true);\n    }\n\n    // finish up the animation\n    let toValue = 0;\n    if (this._translateX._value >= 0) {\n      // trying to open right\n      if (\n        this._translateX._value >\n        this.props.leftOpenValue * (this.props.swipeToOpenPercent / 100)\n      ) {\n        // we're more than halfway\n        toValue = this.props.leftOpenValue;\n      }\n    } else {\n      // trying to open left\n      if (\n        this._translateX._value <\n        this.props.rightOpenValue * (this.props.swipeToOpenPercent / 100)\n      ) {\n        // we're more than halfway\n        toValue = this.props.rightOpenValue;\n      }\n    }\n\n    this.manuallySwipeRow(toValue);\n  }\n\n  /*\n   * This method is called by SwipeListView\n   */\n  closeRow() {\n    this.manuallySwipeRow(0);\n  }\n\n  openLeftRow() {\n    this.manuallySwipeRow(this.props.leftOpenValue);\n  }\n\n  openRightRow() {\n    this.manuallySwipeRow(this.props.rightOpenValue);\n  }\n\n  manuallySwipeRow(toValue) {\n    Animated.spring(this._translateX, {\n      toValue,\n      friction: this.props.friction,\n      tension: this.props.tension,\n      useNativeDriver: true\n    }).start(_ => {\n      if (toValue === 0) {\n        this.props.onRowDidClose && this.props.onRowDidClose();\n      } else {\n        this.props.onRowDidOpen && this.props.onRowDidOpen();\n      }\n    });\n\n    if (toValue === 0) {\n      this.props.onRowClose && this.props.onRowClose();\n    } else {\n      this.props.onRowOpen && this.props.onRowOpen(toValue);\n    }\n\n    // reset everything\n    this.swipeInitialX = null;\n    this.horizontalSwipeGestureBegan = false;\n  }\n\n  renderMainContent() {\n    // We do this annoying if statement for performance.\n    // We don't want the onLayout func to run after it runs once.\n    if (this.state.dimensionsSet) {\n      return (\n        <Animated.View\n          {...this._panResponder.panHandlers}\n          style={{\n            transform: [{ translateX: this._translateX }],\n            zIndex: 2\n          }}\n        >\n          {!this.props.list ? (\n            <ListItem list style={this.props.style}>\n              {this.props.body}\n            </ListItem>\n          ) : (\n            <View style={[{ backgroundColor: '#FFF' }, this.props.style]}>\n              {this.props.body}\n            </View>\n          )}\n        </Animated.View>\n      );\n    }\n    return (\n      <Animated.View\n        {...this._panResponder.panHandlers}\n        onLayout={e => this.onContentLayout(e)}\n        style={{\n          transform: [{ translateX: this._translateX }],\n          zIndex: 2\n        }}\n      >\n        {!this.props.list ? (\n          <ListItem list style={this.props.style}>\n            {this.props.body}\n          </ListItem>\n        ) : (\n          <View style={[{ backgroundColor: '#FFF' }, this.props.style]}>\n            {this.props.body}\n          </View>\n        )}\n      </Animated.View>\n    );\n  }\n\n  render() {\n    return (\n      <View style={this.props.style ? this.props.style : undefined}>\n        <View\n          style={[\n            styles.hidden,\n            {\n              height: this.state.hiddenHeight,\n              flex: 1,\n              flexDirection: 'row',\n              justifyContent: 'space-between'\n            }\n          ]}\n        >\n          <Left style={{ width: this.props.leftOpenValue, zIndex: 1 }}>\n            {this.props.left}\n          </Left>\n          <Body style={{ flex: 0 }} />\n          <Right style={{ width: -this.props.rightOpenValue, zIndex: 1 }}>\n            {this.props.right}\n          </Right>\n        </View>\n        {this.renderMainContent()}\n      </View>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n    // As of RN 0.29 flex: 1 is causing all rows to be the same height\n    // flex: 1\n  },\n  hidden: {\n    bottom: 0,\n    left: 0,\n    overflow: 'hidden',\n    position: 'absolute',\n    right: 0,\n    top: 0\n  }\n};\n\nconst StyledSwipeRow = connectStyle(\n  'NativeBase.SwipeRow',\n  {},\n  mapPropsToStyleNames\n)(SwipeRow);\nexport { StyledSwipeRow as SwipeRow };\n"]},"metadata":{},"sourceType":"script"}