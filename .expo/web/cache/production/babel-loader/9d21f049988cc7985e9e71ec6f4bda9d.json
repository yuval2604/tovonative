{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.CheckBox=undefined;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _jsxFileName='src/basic/Checkbox.js';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=require('react');var _react2=_interopRequireDefault(_react);var _propTypes=require('prop-types');var _propTypes2=_interopRequireDefault(_propTypes);var _reactNative=require(\"react-native-web/dist/index\");var _Ionicons=require(\"@expo/vector-icons/Ionicons\");var _Ionicons2=_interopRequireDefault(_Ionicons);var _nativeBaseShoutemTheme=require('native-base-shoutem-theme');var _mapPropsToStyleNames=require(\"../utils/mapPropsToStyleNames\");var _mapPropsToStyleNames2=_interopRequireDefault(_mapPropsToStyleNames);var _platform=require(\"../theme/variables/platform\");var _platform2=_interopRequireDefault(_platform);var _commonColor=require(\"../theme/variables/commonColor\");var _computeProps=require(\"../utils/computeProps\");var _computeProps2=_interopRequireDefault(_computeProps);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var CheckBox=function(_Component){_inherits(CheckBox,_Component);function CheckBox(){_classCallCheck(this,CheckBox);return _possibleConstructorReturn(this,(CheckBox.__proto__||Object.getPrototypeOf(CheckBox)).apply(this,arguments));}_createClass(CheckBox,[{key:'getInitialStyle',value:function getInitialStyle(variables){var _props=this.props,color=_props.color,checked=_props.checked;return{checkStyle:{borderColor:color||variables.checkboxBgColor,backgroundColor:checked===true?color||variables.checkboxBgColor:variables.checkboxDefaultColor}};}},{key:'prepareRootProps',value:function prepareRootProps(variables){var defaultProps={style:this.getInitialStyle(variables).checkStyle};return(0,_computeProps2.default)(this.props,defaultProps);}},{key:'render',value:function render(){var _this2=this;var checked=this.props.checked;var variables=this.context.theme?this.context.theme['@@shoutem.theme/themeStyle'].variables:_platform2.default;var platformStyle=variables.platformStyle;var platform=variables.platform;return _react2.default.createElement(_reactNative.TouchableOpacity,_extends({ref:function ref(c){return _this2._root=c;}},this.prepareRootProps(variables),{__source:{fileName:_jsxFileName,lineNumber:45}}),_react2.default.createElement(_Ionicons2.default,{style:{color:checked===true?variables.checkboxTickColor:variables.checkboxDefaultColor,fontSize:variables.CheckboxFontSize,lineHeight:variables.CheckboxIconSize,marginTop:variables.CheckboxIconMarginTop,textShadowRadius:variables.checkboxTextShadowRadius},name:platform===_commonColor.PLATFORM.IOS&&platformStyle!==_commonColor.PLATFORM.MATERIAL?'ios-checkmark':'md-checkmark',__source:{fileName:_jsxFileName,lineNumber:49}}));}}]);return CheckBox;}(_react.Component);CheckBox.contextTypes={theme:_propTypes2.default.object};CheckBox.propTypes=_extends({},_reactNative.TouchableOpacity.propTypes,{style:_propTypes2.default.oneOfType([_propTypes2.default.object,_propTypes2.default.number,_propTypes2.default.array]),checked:_propTypes2.default.bool,onPress:_propTypes2.default.func});var StyledCheckBox=(0,_nativeBaseShoutemTheme.connectStyle)('NativeBase.CheckBox',{},_mapPropsToStyleNames2.default)(CheckBox);exports.CheckBox=StyledCheckBox;","map":{"version":3,"sources":["../../../src/basic/Checkbox.js"],"names":["CheckBox","Component","contextTypes","theme","PropTypes","variables","color","checked","checkStyle","borderColor","backgroundColor","defaultProps","style","variable","platformStyle","platform","fontSize","lineHeight","marginTop","textShadowRadius","PLATFORM","TouchableOpacity","onPress","StyledCheckBox","mapPropsToStyleNames"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { TouchableOpacity } from 'react-native';\nimport IconNB from 'react-native-vector-icons/Ionicons';\nimport { connectStyle } from 'native-base-shoutem-theme';\n\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\nimport variable from '../theme/variables/platform';\nimport { PLATFORM } from '../theme/variables/commonColor';\nimport computeProps from '../utils/computeProps';\n\nclass CheckBox extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n\n  getInitialStyle(variables) {\n    const { color, checked } = this.props;\n    return {\n      checkStyle: {\n        borderColor: color || variables.checkboxBgColor,\n        backgroundColor:\n          checked === true\n            ? color || variables.checkboxBgColor\n            : variables.checkboxDefaultColor\n      }\n    };\n  }\n\n  prepareRootProps(variables) {\n    const defaultProps = {\n      style: this.getInitialStyle(variables).checkStyle\n    };\n\n    return computeProps(this.props, defaultProps);\n  }\n  render() {\n    const { checked } = this.props;\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n    const platformStyle = variables.platformStyle;\n    const platform = variables.platform;\n    return (\n      <TouchableOpacity\n        ref={c => (this._root = c)}\n        {...this.prepareRootProps(variables)}\n      >\n        <IconNB\n          style={{\n            color:\n              checked === true\n                ? variables.checkboxTickColor\n                : variables.checkboxDefaultColor,\n            fontSize: variables.CheckboxFontSize,\n            lineHeight: variables.CheckboxIconSize,\n            marginTop: variables.CheckboxIconMarginTop,\n            textShadowRadius: variables.checkboxTextShadowRadius\n          }}\n          name={\n            platform === PLATFORM.IOS && platformStyle !== PLATFORM.MATERIAL\n              ? 'ios-checkmark'\n              : 'md-checkmark'\n          }\n        />\n      </TouchableOpacity>\n    );\n  }\n}\n\nCheckBox.propTypes = {\n  ...TouchableOpacity.propTypes,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ]),\n  checked: PropTypes.bool,\n  onPress: PropTypes.func\n};\n\nconst StyledCheckBox = connectStyle(\n  'NativeBase.CheckBox',\n  {},\n  mapPropsToStyleNames\n)(CheckBox);\n\nexport { StyledCheckBox as CheckBox };\n"]},"metadata":{},"sourceType":"script"}