{"ast":null,"code":"import _defineProperty from\"@babel/runtime/helpers/defineProperty\";function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter(function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable;});keys.push.apply(keys,symbols);}return keys;}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach(function(key){_defineProperty(target,key,source[key]);});}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source));}else{ownKeys(Object(source)).forEach(function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key));});}}return target;}import React from'react';import Dimensions from\"react-native-web/dist/exports/Dimensions\";import Platform from\"react-native-web/dist/exports/Platform\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import{createNavigator}from'@react-navigation/core';import{SafeAreaView}from'@react-navigation/native';import DrawerRouter from\"../routers/DrawerRouter\";import DrawerView from\"../views/DrawerView\";import DrawerItems from\"../views/DrawerNavigatorItems\";var defaultContentComponent=function defaultContentComponent(props){return React.createElement(ScrollView,{alwaysBounceVertical:false},React.createElement(SafeAreaView,{forceInset:{top:'always',horizontal:'never'}},React.createElement(DrawerItems,props)));};var DefaultDrawerConfig={drawerWidth:function drawerWidth(){var _Dimensions$get=Dimensions.get('window'),height=_Dimensions$get.height,width=_Dimensions$get.width;var smallerAxisSize=Math.min(height,width);var isLandscape=width>height;var isTablet=smallerAxisSize>=600;var appBarHeight=Platform.OS==='ios'?isLandscape?32:44:56;var maxWidth=isTablet?320:280;return Math.min(smallerAxisSize-appBarHeight,maxWidth);},contentComponent:defaultContentComponent,drawerPosition:'left',keyboardDismissMode:'on-drag',drawerBackgroundColor:'white',useNativeAnimations:true,drawerType:'front',hideStatusBar:false,statusBarAnimation:'slide',overlayColor:'black'};var DrawerNavigator=function DrawerNavigator(routeConfigs){var config=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var mergedConfig=_objectSpread({},DefaultDrawerConfig,{},config);var drawerRouter=DrawerRouter(routeConfigs,mergedConfig);var navigator=createNavigator(DrawerView,drawerRouter,mergedConfig);return navigator;};export default DrawerNavigator;","map":{"version":3,"sources":["/Users/yuvalbeiser/Downloads/codecanyon-B1UUUVLW-harrier-react-native-ecommerce-ui-kit-template/eCommerce2/node_modules/react-navigation-drawer/dist/navigators/createDrawerNavigator.js"],"names":["React","createNavigator","SafeAreaView","DrawerRouter","DrawerView","DrawerItems","defaultContentComponent","props","top","horizontal","DefaultDrawerConfig","drawerWidth","Dimensions","get","height","width","smallerAxisSize","Math","min","isLandscape","isTablet","appBarHeight","Platform","OS","maxWidth","contentComponent","drawerPosition","keyboardDismissMode","drawerBackgroundColor","useNativeAnimations","drawerType","hideStatusBar","statusBarAnimation","overlayColor","DrawerNavigator","routeConfigs","config","mergedConfig","drawerRouter","navigator"],"mappings":"+1BAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,+LAEA,OAASC,eAAT,KAAgC,wBAAhC,CACA,OAASC,YAAT,KAA6B,0BAA7B,CACA,MAAOC,CAAAA,YAAP,+BACA,MAAOC,CAAAA,UAAP,2BACA,MAAOC,CAAAA,WAAP,qCAMA,GAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAAAC,KAAK,QAAI,qBAAC,UAAD,EAAY,oBAAoB,CAAE,KAAlC,EACrC,oBAAC,YAAD,EAAc,UAAU,CAAE,CAAEC,GAAG,CAAE,QAAP,CAAiBC,UAAU,CAAE,OAA7B,CAA1B,EACE,oBAAC,WAAD,CAAiBF,KAAjB,CADF,CADqC,CAAJ,EAArC,CAMA,GAAMG,CAAAA,mBAAmB,CAAG,CAC1BC,WAAW,CAAE,sBAAM,qBAMSC,UAAU,CAACC,GAAX,CAAe,QAAf,CANT,CAMTC,MANS,iBAMTA,MANS,CAMDC,KANC,iBAMDA,KANC,CAOjB,GAAMC,CAAAA,eAAe,CAAGC,IAAI,CAACC,GAAL,CAASJ,MAAT,CAAiBC,KAAjB,CAAxB,CACA,GAAMI,CAAAA,WAAW,CAAGJ,KAAK,CAAGD,MAA5B,CACA,GAAMM,CAAAA,QAAQ,CAAGJ,eAAe,EAAI,GAApC,CACA,GAAMK,CAAAA,YAAY,CAAGC,QAAQ,CAACC,EAAT,GAAgB,KAAhB,CAAwBJ,WAAW,CAAG,EAAH,CAAQ,EAA3C,CAAgD,EAArE,CACA,GAAMK,CAAAA,QAAQ,CAAGJ,QAAQ,CAAG,GAAH,CAAS,GAAlC,CAEA,MAAOH,CAAAA,IAAI,CAACC,GAAL,CAASF,eAAe,CAAGK,YAA3B,CAAyCG,QAAzC,CAAP,CACD,CAfyB,CAgB1BC,gBAAgB,CAAEnB,uBAhBQ,CAiB1BoB,cAAc,CAAE,MAjBU,CAkB1BC,mBAAmB,CAAE,SAlBK,CAmB1BC,qBAAqB,CAAE,OAnBG,CAoB1BC,mBAAmB,CAAE,IApBK,CAqB1BC,UAAU,CAAE,OArBc,CAsB1BC,aAAa,CAAE,KAtBW,CAuB1BC,kBAAkB,CAAE,OAvBM,CAwB1BC,YAAY,CAAE,OAxBY,CAA5B,CA2BA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,YAAD,CAA+B,IAAhBC,CAAAA,MAAgB,2DAAP,EAAO,CACrD,GAAMC,CAAAA,YAAY,kBAAQ3B,mBAAR,IAAgC0B,MAAhC,CAAlB,CACA,GAAME,CAAAA,YAAY,CAAGnC,YAAY,CAACgC,YAAD,CAAeE,YAAf,CAAjC,CACA,GAAME,CAAAA,SAAS,CAAGtC,eAAe,CAACG,UAAD,CAAakC,YAAb,CAA2BD,YAA3B,CAAjC,CACA,MAAOE,CAAAA,SAAP,CACD,CALD,CAOA,cAAeL,CAAAA,eAAf","sourcesContent":["import React from 'react';\nimport { Dimensions, Platform, ScrollView } from 'react-native';\nimport { createNavigator } from '@react-navigation/core';\nimport { SafeAreaView } from '@react-navigation/native';\nimport DrawerRouter from '../routers/DrawerRouter';\nimport DrawerView from '../views/DrawerView';\nimport DrawerItems from '../views/DrawerNavigatorItems';\n\n// A stack navigators props are the intersection between\n// the base navigator props (navgiation, screenProps, etc)\n// and the view's props\n\nconst defaultContentComponent = props => <ScrollView alwaysBounceVertical={false}>\n    <SafeAreaView forceInset={{ top: 'always', horizontal: 'never' }}>\n      <DrawerItems {...props} />\n    </SafeAreaView>\n  </ScrollView>;\n\nconst DefaultDrawerConfig = {\n  drawerWidth: () => {\n    /*\n     * Default drawer width is screen width - header height\n     * with a max width of 280 on mobile and 320 on tablet\n     * https://material.io/guidelines/patterns/navigation-drawer.html\n     */\n    const { height, width } = Dimensions.get('window');\n    const smallerAxisSize = Math.min(height, width);\n    const isLandscape = width > height;\n    const isTablet = smallerAxisSize >= 600;\n    const appBarHeight = Platform.OS === 'ios' ? isLandscape ? 32 : 44 : 56;\n    const maxWidth = isTablet ? 320 : 280;\n\n    return Math.min(smallerAxisSize - appBarHeight, maxWidth);\n  },\n  contentComponent: defaultContentComponent,\n  drawerPosition: 'left',\n  keyboardDismissMode: 'on-drag',\n  drawerBackgroundColor: 'white',\n  useNativeAnimations: true,\n  drawerType: 'front',\n  hideStatusBar: false,\n  statusBarAnimation: 'slide',\n  overlayColor: 'black'\n};\n\nconst DrawerNavigator = (routeConfigs, config = {}) => {\n  const mergedConfig = { ...DefaultDrawerConfig, ...config };\n  const drawerRouter = DrawerRouter(routeConfigs, mergedConfig);\n  const navigator = createNavigator(DrawerView, drawerRouter, mergedConfig);\n  return navigator;\n};\n\nexport default DrawerNavigator;"]},"metadata":{},"sourceType":"module"}