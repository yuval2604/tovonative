{"ast":null,"code":"import _objectSpread from\"@babel/runtime/helpers/objectSpread\";import Animated from\"react-native-web/dist/exports/Animated\";import Easing from\"react-native-web/dist/exports/Easing\";import Platform from\"react-native-web/dist/exports/Platform\";import StyleInterpolator from\"./StackViewStyleInterpolator\";import{supportsImprovedSpringAnimation}from\"../../utils/ReactNativeFeatures\";var IOSTransitionSpec;if(supportsImprovedSpringAnimation()){IOSTransitionSpec={timing:Animated.spring,stiffness:1000,damping:500,mass:3,overshootClamping:true,restDisplacementThreshold:0.01,restSpeedThreshold:0.01};}else{IOSTransitionSpec={duration:500,easing:Easing.bezier(0.2833,0.99,0.31833,0.99),timing:Animated.timing};}var SlideFromRightIOS={transitionSpec:IOSTransitionSpec,screenInterpolator:StyleInterpolator.forHorizontal,containerStyle:{backgroundColor:'#eee'}};var ModalSlideFromBottomIOS={transitionSpec:IOSTransitionSpec,screenInterpolator:StyleInterpolator.forVertical,containerStyle:{backgroundColor:'#eee'}};var FadeInFromBottomAndroid={transitionSpec:{duration:350,easing:Easing.out(Easing.poly(5)),timing:Animated.timing},screenInterpolator:StyleInterpolator.forFadeFromBottomAndroid};var FadeOutToBottomAndroid={transitionSpec:{duration:150,easing:Easing.in(Easing.linear),timing:Animated.timing},screenInterpolator:StyleInterpolator.forFadeToBottomAndroid};var NoAnimation={transitionSpec:{duration:0,timing:Animated.timing},screenInterpolator:StyleInterpolator.forNoAnimation,containerStyle:{backgroundColor:'#eee'}};function defaultTransitionConfig(transitionProps,prevTransitionProps,isModal){if(Platform.OS!=='ios'){if(prevTransitionProps&&transitionProps.index<prevTransitionProps.index){return FadeOutToBottomAndroid;}return FadeInFromBottomAndroid;}if(isModal){return ModalSlideFromBottomIOS;}return SlideFromRightIOS;}function getTransitionConfig(transitionConfigurer,transitionProps,prevTransitionProps,isModal){var defaultConfig=defaultTransitionConfig(transitionProps,prevTransitionProps,isModal);if(transitionConfigurer){return _objectSpread({},defaultConfig,transitionConfigurer(transitionProps,prevTransitionProps,isModal));}return defaultConfig;}export default{defaultTransitionConfig:defaultTransitionConfig,getTransitionConfig:getTransitionConfig,SlideFromRightIOS:SlideFromRightIOS,ModalSlideFromBottomIOS:ModalSlideFromBottomIOS,FadeInFromBottomAndroid:FadeInFromBottomAndroid,FadeOutToBottomAndroid:FadeOutToBottomAndroid,NoAnimation:NoAnimation};","map":{"version":3,"sources":["StackViewTransitionConfigs.tsx"],"names":["supportsImprovedSpringAnimation","IOSTransitionSpec","timing","Animated","stiffness","damping","mass","overshootClamping","restDisplacementThreshold","restSpeedThreshold","duration","easing","Easing","SlideFromRightIOS","transitionSpec","screenInterpolator","StyleInterpolator","containerStyle","backgroundColor","ModalSlideFromBottomIOS","FadeInFromBottomAndroid","FadeOutToBottomAndroid","NoAnimation","Platform","prevTransitionProps","transitionProps","defaultConfig","defaultTransitionConfig","transitionConfigurer","getTransitionConfig"],"mappings":"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","sourcesContent":["import { Animated, Easing, Platform } from 'react-native';\nimport StyleInterpolator from './StackViewStyleInterpolator';\nimport { supportsImprovedSpringAnimation } from '../../utils/ReactNativeFeatures';\nimport { TransitionProps, TransitionConfig } from '../../types';\n\nlet IOSTransitionSpec;\nif (supportsImprovedSpringAnimation()) {\n  // These are the exact values from UINavigationController's animation configuration\n  IOSTransitionSpec = {\n    timing: Animated.spring,\n    stiffness: 1000,\n    damping: 500,\n    mass: 3,\n    overshootClamping: true,\n    restDisplacementThreshold: 0.01,\n    restSpeedThreshold: 0.01,\n  };\n} else {\n  // This is an approximation of the IOS spring animation using a derived bezier curve\n  IOSTransitionSpec = {\n    duration: 500,\n    easing: Easing.bezier(0.2833, 0.99, 0.31833, 0.99),\n    timing: Animated.timing,\n  };\n}\n\n// Standard iOS navigation transition\nconst SlideFromRightIOS = {\n  transitionSpec: IOSTransitionSpec,\n  screenInterpolator: StyleInterpolator.forHorizontal,\n  containerStyle: {\n    backgroundColor: '#eee',\n  },\n};\n\n// Standard iOS navigation transition for modals\nconst ModalSlideFromBottomIOS = {\n  transitionSpec: IOSTransitionSpec,\n  screenInterpolator: StyleInterpolator.forVertical,\n  containerStyle: {\n    backgroundColor: '#eee',\n  },\n};\n\n// Standard Android navigation transition when opening an Activity\nconst FadeInFromBottomAndroid = {\n  // See http://androidxref.com/7.1.1_r6/xref/frameworks/base/core/res/res/anim/activity_open_enter.xml\n  transitionSpec: {\n    duration: 350,\n    easing: Easing.out(Easing.poly(5)), // decelerate\n    timing: Animated.timing,\n  },\n  screenInterpolator: StyleInterpolator.forFadeFromBottomAndroid,\n};\n\n// Standard Android navigation transition when closing an Activity\nconst FadeOutToBottomAndroid = {\n  // See http://androidxref.com/7.1.1_r6/xref/frameworks/base/core/res/res/anim/activity_close_exit.xml\n  transitionSpec: {\n    duration: 150,\n    easing: Easing.in(Easing.linear), // accelerate\n    timing: Animated.timing,\n  },\n  screenInterpolator: StyleInterpolator.forFadeToBottomAndroid,\n};\n\nconst NoAnimation = {\n  transitionSpec: {\n    duration: 0,\n    timing: Animated.timing,\n  },\n  screenInterpolator: StyleInterpolator.forNoAnimation,\n  containerStyle: {\n    backgroundColor: '#eee',\n  },\n};\n\nfunction defaultTransitionConfig(\n  transitionProps: TransitionProps,\n  prevTransitionProps?: TransitionProps,\n  isModal?: boolean\n): TransitionConfig {\n  if (Platform.OS !== 'ios') {\n    // Use the default Android animation no matter if the screen is a modal.\n    // Android doesn't have full-screen modals like iOS does, it has dialogs.\n    if (\n      prevTransitionProps &&\n      transitionProps.index < prevTransitionProps.index\n    ) {\n      // Navigating back to the previous screen\n      return FadeOutToBottomAndroid;\n    }\n    return FadeInFromBottomAndroid;\n  }\n  // iOS and other platforms\n  if (isModal) {\n    return ModalSlideFromBottomIOS;\n  }\n  return SlideFromRightIOS;\n}\n\nfunction getTransitionConfig<T = {}>(\n  transitionConfigurer:\n    | undefined\n    | ((\n        transitionProps: TransitionProps,\n        prevTransitionProps?: TransitionProps,\n        isModal?: boolean\n      ) => T),\n  transitionProps: TransitionProps,\n  prevTransitionProps?: TransitionProps,\n  isModal?: boolean\n): TransitionConfig & T {\n  const defaultConfig = defaultTransitionConfig(\n    transitionProps,\n    prevTransitionProps,\n    isModal\n  );\n  if (transitionConfigurer) {\n    return {\n      ...defaultConfig,\n      ...transitionConfigurer(transitionProps, prevTransitionProps, isModal),\n    };\n  }\n\n  return defaultConfig as any;\n}\n\nexport default {\n  defaultTransitionConfig,\n  getTransitionConfig,\n  SlideFromRightIOS,\n  ModalSlideFromBottomIOS,\n  FadeInFromBottomAndroid,\n  FadeOutToBottomAndroid,\n  NoAnimation,\n};\n"]},"metadata":{},"sourceType":"module"}