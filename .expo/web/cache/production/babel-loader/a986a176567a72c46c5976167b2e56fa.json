{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import*as React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import{Screen,screensEnabled}from'react-native-screens';var FAR_FAR_AWAY=3000;var ResourceSavingScene=function(_React$Component){_inherits(ResourceSavingScene,_React$Component);function ResourceSavingScene(){_classCallCheck(this,ResourceSavingScene);return _possibleConstructorReturn(this,_getPrototypeOf(ResourceSavingScene).apply(this,arguments));}_createClass(ResourceSavingScene,[{key:\"render\",value:function render(){if(screensEnabled&&screensEnabled()){var _this$props=this.props,_isVisible=_this$props.isVisible,_rest=_objectWithoutProperties(_this$props,[\"isVisible\"]);return React.createElement(Screen,_extends({active:_isVisible?1:0},_rest));}var _this$props2=this.props,isVisible=_this$props2.isVisible,children=_this$props2.children,style=_this$props2.style,rest=_objectWithoutProperties(_this$props2,[\"isVisible\",\"children\",\"style\"]);return React.createElement(View,_extends({style:[styles.container,style],collapsable:false,removeClippedSubviews:Platform.OS==='ios'?!isVisible:true,pointerEvents:isVisible?'auto':'none'},rest),React.createElement(View,{style:isVisible?styles.attached:styles.detached},children));}}]);return ResourceSavingScene;}(React.Component);export{ResourceSavingScene as default};var styles=StyleSheet.create({container:{flex:1,overflow:'hidden'},attached:{flex:1},detached:{flex:1,top:FAR_FAR_AWAY}});","map":{"version":3,"sources":["/Users/user/Documents/codecanyon-B1UUUVLW-harrier-react-native-ecommerce-ui-kit-template/eCommerce2/node_modules/react-navigation-drawer/dist/views/ResourceSavingScene.js"],"names":["React","Screen","screensEnabled","FAR_FAR_AWAY","ResourceSavingScene","props","isVisible","rest","children","style","styles","container","Platform","OS","attached","detached","Component","StyleSheet","create","flex","overflow","top"],"mappings":"6dAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,C,mLAGA,OAASC,MAAT,CAAiBC,cAAjB,KAAuC,sBAAvC,CAEA,GAAMC,CAAAA,YAAY,CAAG,IAArB,C,GAEqBC,CAAAA,mB,gUACV,CACP,GAAIF,cAAc,EAAIA,cAAc,EAApC,CAAwC,iBACP,KAAKG,KADE,CAC9BC,UAD8B,aAC9BA,SAD8B,CAChBC,KADgB,qDAEtC,MAAO,qBAAC,MAAD,WAAQ,MAAM,CAAED,UAAS,CAAG,CAAH,CAAO,CAAhC,EAAuCC,KAAvC,EAAP,CACD,CAJM,iBAKyC,KAAKF,KAL9C,CAKCC,SALD,cAKCA,SALD,CAKYE,QALZ,cAKYA,QALZ,CAKsBC,KALtB,cAKsBA,KALtB,CAKgCF,IALhC,yEAOP,MAAO,qBAAC,IAAD,WAAM,KAAK,CAAE,CAACG,MAAM,CAACC,SAAR,CAAmBF,KAAnB,CAAb,CAAwC,WAAW,CAAE,KAArD,CAA4D,qBAAqB,CAGxFG,QAAQ,CAACC,EAAT,GAAgB,KAAhB,CAAwB,CAACP,SAAzB,CAAqC,IAH9B,CAGoC,aAAa,CAAEA,SAAS,CAAG,MAAH,CAAY,MAHxE,EAGoFC,IAHpF,EAIH,oBAAC,IAAD,EAAM,KAAK,CAAED,SAAS,CAAGI,MAAM,CAACI,QAAV,CAAqBJ,MAAM,CAACK,QAAlD,EACGP,QADH,CAJG,CAAP,CAQD,C,iCAhB8CR,KAAK,CAACgB,S,SAAlCZ,mB,aAmBrB,GAAMM,CAAAA,MAAM,CAAGO,UAAU,CAACC,MAAX,CAAkB,CAC/BP,SAAS,CAAE,CACTQ,IAAI,CAAE,CADG,CAETC,QAAQ,CAAE,QAFD,CADoB,CAK/BN,QAAQ,CAAE,CACRK,IAAI,CAAE,CADE,CALqB,CAQ/BJ,QAAQ,CAAE,CACRI,IAAI,CAAE,CADE,CAERE,GAAG,CAAElB,YAFG,CARqB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\n\nimport { Screen, screensEnabled } from 'react-native-screens';\n\nconst FAR_FAR_AWAY = 3000; // this should be big enough to move the whole view out of its container\n\nexport default class ResourceSavingScene extends React.Component {\n  render() {\n    if (screensEnabled && screensEnabled()) {\n      const { isVisible, ...rest } = this.props;\n      return <Screen active={isVisible ? 1 : 0} {...rest} />;\n    }\n    const { isVisible, children, style, ...rest } = this.props;\n\n    return <View style={[styles.container, style]} collapsable={false} removeClippedSubviews={\n    // On iOS, set removeClippedSubviews to true only when not focused\n    // This is an workaround for a bug where the clipped view never re-appears\n    Platform.OS === 'ios' ? !isVisible : true} pointerEvents={isVisible ? 'auto' : 'none'} {...rest}>\n        <View style={isVisible ? styles.attached : styles.detached}>\n          {children}\n        </View>\n      </View>;\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  },\n  attached: {\n    flex: 1\n  },\n  detached: {\n    flex: 1,\n    top: FAR_FAR_AWAY\n  }\n});"]},"metadata":{},"sourceType":"module"}