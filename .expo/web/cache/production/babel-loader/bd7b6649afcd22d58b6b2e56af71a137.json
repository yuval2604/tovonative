{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import View from\"react-native-web/dist/exports/View\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";var TabBarIcon=function(_React$Component){_inherits(TabBarIcon,_React$Component);function TabBarIcon(){_classCallCheck(this,TabBarIcon);return _possibleConstructorReturn(this,_getPrototypeOf(TabBarIcon).apply(this,arguments));}_createClass(TabBarIcon,[{key:\"render\",value:function render(){var _this$props=this.props,route=_this$props.route,activeOpacity=_this$props.activeOpacity,inactiveOpacity=_this$props.inactiveOpacity,activeTintColor=_this$props.activeTintColor,inactiveTintColor=_this$props.inactiveTintColor,renderIcon=_this$props.renderIcon,horizontal=_this$props.horizontal,style=_this$props.style;return React.createElement(View,{style:style},React.createElement(Animated.View,{style:[styles.icon,{opacity:activeOpacity}]},renderIcon({route:route,focused:true,horizontal:horizontal,tintColor:activeTintColor})),React.createElement(Animated.View,{style:[styles.icon,{opacity:inactiveOpacity}]},renderIcon({route:route,focused:false,horizontal:horizontal,tintColor:inactiveTintColor})));}}]);return TabBarIcon;}(React.Component);export{TabBarIcon as default};var styles=StyleSheet.create({icon:{position:'absolute',alignSelf:'center',alignItems:'center',justifyContent:'center',height:'100%',width:'100%',minWidth:25}});","map":{"version":3,"sources":["/Users/yuvalbeiser/Downloads/codecanyon-B1UUUVLW-harrier-react-native-ecommerce-ui-kit-template/eCommerce2/node_modules/react-navigation-tabs/src/views/CrossFadeIcon.js"],"names":["React","TabBarIcon","props","route","activeOpacity","inactiveOpacity","activeTintColor","inactiveTintColor","renderIcon","horizontal","style","styles","icon","opacity","focused","tintColor","Component","StyleSheet","create","position","alignSelf","alignItems","justifyContent","height","width","minWidth"],"mappings":"mVAEA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,sLAcqBC,CAAAA,U,mRACV,iBAUH,KAAKC,KAVF,CAELC,KAFK,aAELA,KAFK,CAGLC,aAHK,aAGLA,aAHK,CAILC,eAJK,aAILA,eAJK,CAKLC,eALK,aAKLA,eALK,CAMLC,iBANK,aAMLA,iBANK,CAOLC,UAPK,aAOLA,UAPK,CAQLC,UARK,aAQLA,UARK,CASLC,KATK,aASLA,KATK,CAcP,MACE,qBAAC,IAAD,EAAM,KAAK,CAAEA,KAAb,EACE,oBAAC,QAAD,CAAU,IAAV,EAAe,KAAK,CAAE,CAACC,MAAM,CAACC,IAAR,CAAc,CAAEC,OAAO,CAAET,aAAX,CAAd,CAAtB,EACGI,UAAU,CAAC,CACVL,KAAK,CAALA,KADU,CAEVW,OAAO,CAAE,IAFC,CAGVL,UAAU,CAAVA,UAHU,CAIVM,SAAS,CAAET,eAJD,CAAD,CADb,CADF,CASE,oBAAC,QAAD,CAAU,IAAV,EAAe,KAAK,CAAE,CAACK,MAAM,CAACC,IAAR,CAAc,CAAEC,OAAO,CAAER,eAAX,CAAd,CAAtB,EACGG,UAAU,CAAC,CACVL,KAAK,CAALA,KADU,CAEVW,OAAO,CAAE,KAFC,CAGVL,UAAU,CAAVA,UAHU,CAIVM,SAAS,CAAER,iBAJD,CAAD,CADb,CATF,CADF,CAoBD,C,wBAnCqCP,KAAK,CAACgB,S,SAAzBf,U,aAsCrB,GAAMU,CAAAA,MAAM,CAAGM,UAAU,CAACC,MAAX,CAAkB,CAC/BN,IAAI,CAAE,CAIJO,QAAQ,CAAE,UAJN,CAKJC,SAAS,CAAE,QALP,CAMJC,UAAU,CAAE,QANR,CAOJC,cAAc,CAAE,QAPZ,CAQJC,MAAM,CAAE,MARJ,CASJC,KAAK,CAAE,MATH,CAWJC,QAAQ,CAAE,EAXN,CADyB,CAAlB,CAAf","sourcesContent":["/* @flow */\n\nimport React from 'react';\nimport { Animated, View, StyleSheet } from 'react-native';\n\ntype Props = {\n  route: any,\n  horizontal?: boolean,\n  activeOpacity: any,\n  inactiveOpacity: any,\n  activeTintColor: any,\n  inactiveTintColor: any,\n  renderIcon: any,\n  style: any,\n};\n\nexport default class TabBarIcon extends React.Component<Props> {\n  render() {\n    const {\n      route,\n      activeOpacity,\n      inactiveOpacity,\n      activeTintColor,\n      inactiveTintColor,\n      renderIcon,\n      horizontal,\n      style,\n    } = this.props;\n\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them.\n    return (\n      <View style={style}>\n        <Animated.View style={[styles.icon, { opacity: activeOpacity }]}>\n          {renderIcon({\n            route,\n            focused: true,\n            horizontal,\n            tintColor: activeTintColor,\n          })}\n        </Animated.View>\n        <Animated.View style={[styles.icon, { opacity: inactiveOpacity }]}>\n          {renderIcon({\n            route,\n            focused: false,\n            horizontal,\n            tintColor: inactiveTintColor,\n          })}\n        </Animated.View>\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  icon: {\n    // We render the icon twice at the same position on top of each other:\n    // active and inactive one, so we can fade between them:\n    // Cover the whole iconContainer:\n    position: 'absolute',\n    alignSelf: 'center',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: '100%',\n    width: '100%',\n    // Workaround for react-native >= 0.54 layout bug\n    minWidth: 25,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}