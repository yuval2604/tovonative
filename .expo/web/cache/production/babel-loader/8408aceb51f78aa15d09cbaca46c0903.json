{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _assertThisInitialized from\"@babel/runtime/helpers/assertThisInitialized\";import _inherits from\"@babel/runtime/helpers/inherits\";import React from'react';import PropTypes from'prop-types';import hoistStatics from'hoist-non-react-statics';import*as _ from'lodash';import normalizeStyle from\"./StyleNormalizer/normalizeStyle\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import Theme,{ThemeShape}from\"./Theme\";import{resolveComponentStyle}from\"./resolveComponentStyle\";var themeCache={};export function clearThemeCache(){themeCache={};}function throwConnectStyleError(errorMessage,componentDisplayName){throw Error(errorMessage+\" - when connecting \"+componentDisplayName+\" component to style.\");}function getTheme(context){return context.theme||Theme.getDefaultTheme();}function isStyleVariant(propertyName){return /^\\./.test(propertyName);}function isChildStyle(propertyName){return /(^[^\\.].*\\.)|^\\*$/.test(propertyName);}function getConcreteStyle(style){return _.pickBy(style,function(value,key){return!isStyleVariant(key)&&!isChildStyle(key);});}export default(function(componentStyleName){var componentStyle=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var mapPropsToStyleNames=arguments.length>2?arguments[2]:undefined;var options=arguments.length>3&&arguments[3]!==undefined?arguments[3]:{};function getComponentDisplayName(WrappedComponent){return WrappedComponent.displayName||WrappedComponent.name||\"Component\";}return function wrapWithStyledComponent(WrappedComponent){var componentDisplayName=getComponentDisplayName(WrappedComponent);if(!_.isPlainObject(componentStyle)){throwConnectStyleError(\"Component style must be plain object\",componentDisplayName);}if(!_.isString(componentStyleName)){throwConnectStyleError(\"Component Style Name must be string\",componentDisplayName);}var StyledComponent=function(_React$Component){_inherits(StyledComponent,_React$Component);function StyledComponent(props,context){var _this;_classCallCheck(this,StyledComponent);_this=_possibleConstructorReturn(this,_getPrototypeOf(StyledComponent).call(this,props,context));var styleNames=_this.getStyleNames(props);var style=props.style;var finalStyle=_this.getFinalStyle(props,context,style,styleNames);_this.setWrappedInstance=_this.setWrappedInstance.bind(_assertThisInitialized(_this));_this.resolveConnectedComponentStyle=_this.resolveConnectedComponentStyle.bind(_assertThisInitialized(_this));_this.state={style:finalStyle,addedProps:_this.resolveAddedProps(),styleNames:styleNames};return _this;}_createClass(StyledComponent,[{key:\"getFinalStyle\",value:function getFinalStyle(props,context,style,styleNames){var resolvedStyle={};if(context.parentPath){resolvedStyle=this.getOrSetStylesInCache(context,props,styleNames,[].concat(_toConsumableArray(context.parentPath),[componentStyleName],_toConsumableArray(styleNames)));}else{resolvedStyle=this.resolveStyle(context,props,styleNames);themeCache[componentStyleName]=resolvedStyle;}var concreteStyle=getConcreteStyle(_.merge({},resolvedStyle));if(_.isArray(style)){return[concreteStyle].concat(_toConsumableArray(style));}if(typeof style==\"number\"||typeof style==\"object\"){return[concreteStyle,style];}return concreteStyle;}},{key:\"getStyleNames\",value:function getStyleNames(props){var styleNamesArr=_.map(props,function(value,key){if(typeof value!==\"object\"&&value===true){return\".\"+key;}else{return false;}});_.remove(styleNamesArr,function(value,index){return value===false;});return styleNamesArr;}},{key:\"getParentPath\",value:function getParentPath(){if(!this.context.parentPath){return[componentStyleName];}else{return[].concat(_toConsumableArray(this.context.parentPath),[componentStyleName],_toConsumableArray(this.getStyleNames(this.props)));}}},{key:\"getChildContext\",value:function getChildContext(){return{parentPath:this.getParentPath()};}},{key:\"UNSAFE_componentWillReceiveProps\",value:function UNSAFE_componentWillReceiveProps(nextProps,nextContext){var styleNames=this.getStyleNames(nextProps);var style=nextProps.style;if(this.shouldRebuildStyle(nextProps,nextContext,styleNames)){var finalStyle=this.getFinalStyle(nextProps,nextContext,style,styleNames);this.setState({style:finalStyle,styleNames:styleNames});}}},{key:\"setNativeProps\",value:function setNativeProps(nativeProps){if(this.wrappedInstance.setNativeProps){this.wrappedInstance.setNativeProps(nativeProps);}}},{key:\"setWrappedInstance\",value:function setWrappedInstance(component){if(component&&component._root){this._root=component._root;}else{this._root=component;}this.wrappedInstance=this._root;}},{key:\"hasStyleNameChanged\",value:function hasStyleNameChanged(nextProps,styleNames){return mapPropsToStyleNames&&this.props!==nextProps&&!_.isEqual(this.state.styleNames,styleNames);}},{key:\"shouldRebuildStyle\",value:function shouldRebuildStyle(nextProps,nextContext,styleNames){return nextProps.style!==this.props.style||nextProps.styleName!==this.props.styleName||nextContext.theme!==this.context.theme||!_.isEqual(nextContext.parentPath,this.context.parentPath)||this.hasStyleNameChanged(nextProps,styleNames);}},{key:\"resolveStyleNames\",value:function resolveStyleNames(props){var styleName=props.styleName;var styleNames=styleName?styleName.split(/\\s/g):[];if(!mapPropsToStyleNames){return styleNames;}return _.uniq(mapPropsToStyleNames(styleNames,props));}},{key:\"resolveAddedProps\",value:function resolveAddedProps(){var addedProps={};if(options.withRef){addedProps.ref=\"wrappedInstance\";}return addedProps;}},{key:\"getOrSetStylesInCache\",value:function getOrSetStylesInCache(context,props,styleNames,path){if(themeCache&&themeCache[path.join(\">\")]){return themeCache[path.join(\">\")];}else{var resolvedStyle=this.resolveStyle(context,props,styleNames);if(Object.keys(themeCache).length<10000){themeCache[path.join(\">\")]=resolvedStyle;}return resolvedStyle;}}},{key:\"resolveStyle\",value:function resolveStyle(context,props,styleNames){var parentStyle={};var theme=getTheme(context);var themeStyle=theme.createComponentStyle(componentStyleName,componentStyle);if(context.parentPath){parentStyle=themeCache[context.parentPath.join(\">\")];}else{parentStyle=resolveComponentStyle(componentStyleName,styleNames,themeStyle,parentStyle);}return resolveComponentStyle(componentStyleName,styleNames,themeStyle,parentStyle);}},{key:\"resolveConnectedComponentStyle\",value:function resolveConnectedComponentStyle(props){var styleNames=this.resolveStyleNames(props);return this.resolveStyle(this.context,props,styleNames).componentStyle;}},{key:\"render\",value:function render(){var _this$state=this.state,addedProps=_this$state.addedProps,style=_this$state.style;return React.createElement(WrappedComponent,_extends({},this.props,addedProps,{style:style,ref:this.setWrappedInstance}));}}]);return StyledComponent;}(React.Component);StyledComponent.contextTypes={theme:ThemeShape,parentPath:PropTypes.array};StyledComponent.childContextTypes={parentPath:PropTypes.array};StyledComponent.propTypes={style:PropTypes.oneOfType([PropTypes.object,PropTypes.number,PropTypes.array]),styleName:PropTypes.string,virtual:PropTypes.bool};StyledComponent.defaultProps={virtual:options.virtual};StyledComponent.displayName=\"Styled(\"+componentDisplayName+\")\";StyledComponent.WrappedComponent=WrappedComponent;return hoistStatics(StyledComponent,WrappedComponent);};});","map":{"version":3,"sources":["/Users/yuvalbeiser/Downloads/codecanyon-B1UUUVLW-harrier-react-native-ecommerce-ui-kit-template/eCommerce2/node_modules/native-base-shoutem-theme/src/connectStyle.js"],"names":["React","PropTypes","hoistStatics","_","normalizeStyle","Theme","ThemeShape","resolveComponentStyle","themeCache","clearThemeCache","throwConnectStyleError","errorMessage","componentDisplayName","Error","getTheme","context","theme","getDefaultTheme","isStyleVariant","propertyName","test","isChildStyle","getConcreteStyle","style","pickBy","value","key","componentStyleName","componentStyle","mapPropsToStyleNames","options","getComponentDisplayName","WrappedComponent","displayName","name","wrapWithStyledComponent","isPlainObject","isString","StyledComponent","props","styleNames","getStyleNames","finalStyle","getFinalStyle","setWrappedInstance","bind","resolveConnectedComponentStyle","state","addedProps","resolveAddedProps","resolvedStyle","parentPath","getOrSetStylesInCache","resolveStyle","concreteStyle","merge","isArray","styleNamesArr","map","remove","index","getParentPath","nextProps","nextContext","shouldRebuildStyle","setState","nativeProps","wrappedInstance","setNativeProps","component","_root","isEqual","styleName","hasStyleNameChanged","split","uniq","withRef","ref","path","join","Object","keys","length","parentStyle","themeStyle","createComponentStyle","resolveStyleNames","Component","contextTypes","array","childContextTypes","propTypes","oneOfType","object","number","string","virtual","bool","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport hoistStatics from 'hoist-non-react-statics';\nimport * as _ from 'lodash';\nimport normalizeStyle from './StyleNormalizer/normalizeStyle';\nimport { StyleSheet } from \"react-native\";\n\nimport Theme, { ThemeShape } from \"./Theme\";\nimport { resolveComponentStyle } from \"./resolveComponentStyle\";\n\nlet themeCache = {};\n\n/**\n * clear theme cache\n * @export\n */\nexport function clearThemeCache() {\n  themeCache = {};\n}\n\n/**\n * Formats and throws an error when connecting component style with the theme.\n *\n * @param errorMessage The error message.\n * @param componentDisplayName The name of the component that is being connected.\n */\nfunction throwConnectStyleError(errorMessage, componentDisplayName) {\n  throw Error(\n    `${errorMessage} - when connecting ${componentDisplayName} component to style.`\n  );\n}\n\n/**\n * Returns the theme object from the provided context,\n * or an empty theme if the context doesn't contain a theme.\n *\n * @param context The React component context.\n * @returns {Theme} The Theme object.\n */\nfunction getTheme(context) {\n  // Fallback to a default theme if the component isn't\n  // rendered in a StyleProvider.\n  return context.theme || Theme.getDefaultTheme();\n}\n\n/**\n * Matches any style properties that represent component style variants.\n * Those styles can be applied to the component by using the styleName\n * prop. All style variant property names must start with a single '.'\n * character, e.g., '.variant'.\n *\n * @param propertyName The style property name.\n * @returns {boolean} True if the style property represents a component variant, false otherwise.\n */\nfunction isStyleVariant(propertyName) {\n  return /^\\./.test(propertyName);\n}\n\n/**\n * Matches any style properties that represent style rules that target the\n * component children. Those styles can have two formats, they can either\n * target the components by component name ('shoutem.ui.Text'), or by component\n * name and variant ('shoutem.ui.Text.line-through'). Beside specifying the\n * component name, those styles can also target any component by using the\n * '*' wildcard ('*', or '*.line-through'). The rule to identify those styles is\n * that they have to contain a '.' character in their name or be a '*'.\n *\n * @param propertyName The style property name.\n * @returns {boolean} True if the style property represents a child style, false otherwise.\n */\nfunction isChildStyle(propertyName) {\n  return /(^[^\\.].*\\.)|^\\*$/.test(propertyName);\n}\n\nfunction getConcreteStyle(style) {\n  return _.pickBy(style, (value, key) => {\n    return !isStyleVariant(key) && !isChildStyle(key);\n  });\n}\n\n/**\n * Resolves the final component style by using the theme style, if available and\n * merging it with the style provided directly through the style prop, and style\n * variants applied through the styleName prop.\n *\n * @param componentStyleName The component name that will be used\n * to target this component in style rules.\n * @param componentStyle The default component style.\n * @param mapPropsToStyleNames Pure function to customize styleNames depending on props.\n * @param options The additional connectStyle options\n * @param options.virtual The default value of the virtual prop\n * @param options.withRef Create component ref with addedProps; if true, ref name is wrappedInstance\n * @returns {StyledComponent} The new component that will handle\n * the styling of the wrapped component.\n */\nexport default (\n  componentStyleName,\n  componentStyle = {},\n  mapPropsToStyleNames,\n  options = {}\n) => {\n  function getComponentDisplayName(WrappedComponent) {\n    return WrappedComponent.displayName || WrappedComponent.name || \"Component\";\n  }\n\n  return function wrapWithStyledComponent(WrappedComponent) {\n    const componentDisplayName = getComponentDisplayName(WrappedComponent);\n\n    if (!_.isPlainObject(componentStyle)) {\n      throwConnectStyleError(\n        \"Component style must be plain object\",\n        componentDisplayName\n      );\n    }\n\n    if (!_.isString(componentStyleName)) {\n      throwConnectStyleError(\n        \"Component Style Name must be string\",\n        componentDisplayName\n      );\n    }\n\n    class StyledComponent extends React.Component {\n      static contextTypes = {\n        theme: ThemeShape,\n        // The style inherited from the parent\n        // parentStyle: PropTypes.object,\n        parentPath: PropTypes.array\n      };\n\n      static childContextTypes = {\n        // Provide the parent style to child components\n        // parentStyle: PropTypes.object,\n        // resolveStyle: PropTypes.func,\n        parentPath: PropTypes.array\n      };\n\n      static propTypes = {\n        // Element style that overrides any other style of the component\n        style: PropTypes.oneOfType([\n          PropTypes.object,\n          PropTypes.number,\n          PropTypes.array\n        ]),\n        // The style variant names to apply to this component,\n        // multiple variants may be separated with a space character\n        styleName: PropTypes.string,\n        // Virtual elements will propagate the parent\n        // style to their children, i.e., the children\n        // will behave as they are placed directly below\n        // the parent of a virtual element.\n        virtual: PropTypes.bool\n      };\n\n      static defaultProps = {\n        virtual: options.virtual\n      };\n\n      static displayName = `Styled(${componentDisplayName})`;\n      static WrappedComponent = WrappedComponent;\n\n      constructor(props, context) {\n        super(props, context);\n        // console.log(context.parentPath);\n        const styleNames = this.getStyleNames(props);\n        const style = props.style;\n\n        const finalStyle = this.getFinalStyle(\n          props,\n          context,\n          style,\n          styleNames\n        );\n\n        this.setWrappedInstance = this.setWrappedInstance.bind(this);\n        this.resolveConnectedComponentStyle = this.resolveConnectedComponentStyle.bind(\n          this\n        );\n        this.state = {\n          style: finalStyle,\n          // AddedProps are additional WrappedComponent props\n          // Usually they are set trough alternative ways,\n          // such as theme style, or trough options\n          addedProps: this.resolveAddedProps(),\n          styleNames\n        };\n      }\n\n      getFinalStyle(props, context, style, styleNames) {\n        let resolvedStyle = {};\n        if (context.parentPath) {\n          resolvedStyle = this.getOrSetStylesInCache(\n            context,\n            props,\n            styleNames,\n            [...context.parentPath, componentStyleName, ...styleNames]\n          );\n        } else {\n          resolvedStyle = this.resolveStyle(context, props, styleNames);\n          themeCache[componentStyleName] = resolvedStyle;\n        }\n\n        const concreteStyle = getConcreteStyle(_.merge({}, resolvedStyle));\n\n        if (_.isArray(style)) {\n          return [concreteStyle, ...style];\n        }\n\n        if (typeof style == \"number\" || typeof style == \"object\") {\n          return [concreteStyle, style];\n        }\n\n        return concreteStyle;\n      }\n\n      getStyleNames(props) {\n        const styleNamesArr = _.map(props, (value, key) => {\n          if (typeof value !== \"object\" && value === true) {\n            return \".\" + key;\n          } else {\n            return false;\n          }\n        });\n        _.remove(styleNamesArr, (value, index) => {\n          return value === false;\n        });\n\n        return styleNamesArr;\n      }\n\n      getParentPath() {\n        if (!this.context.parentPath) {\n          return [componentStyleName];\n        } else {\n          return [\n            ...this.context.parentPath,\n            componentStyleName,\n            ...this.getStyleNames(this.props)\n          ];\n        }\n      }\n\n      getChildContext() {\n        return {\n          // parentStyle: this.props.virtual ?\n          //   this.context.parentStyle :\n          //   this.state.childrenStyle,\n          // resolveStyle: this.resolveConnectedComponentStyle,\n          parentPath: this.getParentPath()\n        };\n      }\n\n      UNSAFE_componentWillReceiveProps(nextProps, nextContext) {\n        const styleNames = this.getStyleNames(nextProps);\n        const style = nextProps.style;\n        if (this.shouldRebuildStyle(nextProps, nextContext, styleNames)) {\n          const finalStyle = this.getFinalStyle(\n            nextProps,\n            nextContext,\n            style,\n            styleNames\n          );\n\n          this.setState({\n            style: finalStyle,\n            // childrenStyle: resolvedStyle.childrenStyle,\n            styleNames\n          });\n        }\n      }\n\n      setNativeProps(nativeProps) {\n        if (this.wrappedInstance.setNativeProps) {\n          this.wrappedInstance.setNativeProps(nativeProps);\n        }\n      }\n\n      setWrappedInstance(component) {\n        if (component && component._root) {\n          this._root = component._root;\n        } else {\n          this._root = component;\n        }\n        this.wrappedInstance = this._root;\n      }\n\n      hasStyleNameChanged(nextProps, styleNames) {\n        return (\n          mapPropsToStyleNames &&\n          this.props !== nextProps &&\n          // Even though props did change here,\n          // it doesn't necessary means changed props are those which affect styleName\n          !_.isEqual(this.state.styleNames, styleNames)\n        );\n      }\n\n      shouldRebuildStyle(nextProps, nextContext, styleNames) {\n        return (\n          nextProps.style !== this.props.style ||\n          nextProps.styleName !== this.props.styleName ||\n          nextContext.theme !== this.context.theme ||\n          !_.isEqual(nextContext.parentPath, this.context.parentPath) ||\n          this.hasStyleNameChanged(nextProps, styleNames)\n        );\n      }\n\n      resolveStyleNames(props) {\n        const { styleName } = props;\n        const styleNames = styleName ? styleName.split(/\\s/g) : [];\n\n        if (!mapPropsToStyleNames) {\n          return styleNames;\n        }\n\n        // We only want to keep the unique style names\n        return _.uniq(mapPropsToStyleNames(styleNames, props));\n      }\n\n      resolveAddedProps() {\n        const addedProps = {};\n        if (options.withRef) {\n          addedProps.ref = \"wrappedInstance\";\n        }\n        return addedProps;\n      }\n\n      getOrSetStylesInCache(context, props, styleNames, path) {\n        if (themeCache && themeCache[path.join(\">\")]) {\n          // console.log('**************');\n\n          return themeCache[path.join(\">\")];\n        } else {\n          const resolvedStyle = this.resolveStyle(context, props, styleNames);\n          if (Object.keys(themeCache).length < 10000) {\n            themeCache[path.join(\">\")] = resolvedStyle;\n          }\n          return resolvedStyle;\n        }\n      }\n\n      resolveStyle(context, props, styleNames) {\n        let parentStyle = {};\n\n        const theme = getTheme(context);\n        const themeStyle = theme.createComponentStyle(\n          componentStyleName,\n          componentStyle\n        );\n\n        if (context.parentPath) {\n          parentStyle = themeCache[context.parentPath.join(\">\")];\n        } else {\n          parentStyle = resolveComponentStyle(\n            componentStyleName,\n            styleNames,\n            themeStyle,\n            parentStyle\n          );\n        }\n\n        return resolveComponentStyle(\n          componentStyleName,\n          styleNames,\n          themeStyle,\n          parentStyle\n        );\n      }\n\n      /**\n       * A helper function provided to child components that enables\n       * them to resolve their style for any set of prop values.\n       *\n       * @param props The component props to use to resolve the style values.\n       * @returns {*} The resolved component style.\n       */\n      resolveConnectedComponentStyle(props) {\n        const styleNames = this.resolveStyleNames(props);\n        return this.resolveStyle(this.context, props, styleNames)\n          .componentStyle;\n      }\n\n      render() {\n        // console.log('themeCache', themeCache);\n\n        // if(componentStyleName == 'NativeBase.Text') {\n        //   console.log(this.state.style);\n        //   console.log(themeCache);\n        // }\n\n        const { addedProps, style } = this.state;\n        return (\n          <WrappedComponent\n            {...this.props}\n            {...addedProps}\n            style={style}\n            ref={this.setWrappedInstance}\n          />\n        );\n      }\n    }\n\n    return hoistStatics(StyledComponent, WrappedComponent);\n  };\n};\n"]},"metadata":{},"sourceType":"module"}