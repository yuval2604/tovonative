{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import*as React from'react';import Dimensions from\"react-native-web/dist/exports/Dimensions\";import hoistNonReactStatic from'hoist-non-react-statics';export var isOrientationLandscape=function isOrientationLandscape(_ref){var width=_ref.width,height=_ref.height;return width>height;};export default function withDimensions(WrappedComponent){var _Dimensions$get=Dimensions.get('window'),width=_Dimensions$get.width,height=_Dimensions$get.height;var EnhancedComponent=function(_React$Component){_inherits(EnhancedComponent,_React$Component);function EnhancedComponent(){var _getPrototypeOf2;var _this;_classCallCheck(this,EnhancedComponent);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(EnhancedComponent)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={dimensions:{width:width,height:height},isLandscape:isOrientationLandscape({width:width,height:height})};_this.handleOrientationChange=function(_ref2){var window=_ref2.window;var isLandscape=isOrientationLandscape(window);_this.setState({isLandscape:isLandscape});};return _this;}_createClass(EnhancedComponent,[{key:\"componentDidMount\",value:function componentDidMount(){Dimensions.addEventListener('change',this.handleOrientationChange);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){Dimensions.removeEventListener('change',this.handleOrientationChange);}},{key:\"render\",value:function render(){return React.createElement(WrappedComponent,_extends({},this.props,this.state));}}]);return EnhancedComponent;}(React.Component);EnhancedComponent.displayName=\"withDimensions(\"+WrappedComponent.displayName+\")\";return hoistNonReactStatic(EnhancedComponent,WrappedComponent);}","map":{"version":3,"sources":["/Users/user/Documents/codecanyon-B1UUUVLW-harrier-react-native-ecommerce-ui-kit-template/eCommerce2/node_modules/react-navigation-tabs/src/utils/withDimensions.js"],"names":["React","hoistNonReactStatic","isOrientationLandscape","width","height","withDimensions","WrappedComponent","Dimensions","get","EnhancedComponent","state","dimensions","isLandscape","handleOrientationChange","window","setState","addEventListener","removeEventListener","props","Component","displayName"],"mappings":"wYAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,C,iEAEA,MAAOC,CAAAA,mBAAP,KAAgC,yBAAhC,CAEA,MAAO,IAAMC,CAAAA,sBAAsB,CAAG,QAAzBA,CAAAA,sBAAyB,UAAGC,CAAAA,KAAH,MAAGA,KAAH,CAAUC,MAAV,MAAUA,MAAV,OAAuBD,CAAAA,KAAK,CAAGC,MAA/B,EAA/B,CAEP,cAAe,SAASC,CAAAA,cAAT,CAAwBC,gBAAxB,CAA0C,qBAC7BC,UAAU,CAACC,GAAX,CAAe,QAAf,CAD6B,CAC/CL,KAD+C,iBAC/CA,KAD+C,CACxCC,MADwC,iBACxCA,MADwC,IAGjDK,CAAAA,iBAHiD,0aAMrDC,KANqD,CAM7C,CACNC,UAAU,CAAE,CAAER,KAAK,CAALA,KAAF,CAASC,MAAM,CAANA,MAAT,CADN,CAENQ,WAAW,CAAEV,sBAAsB,CAAC,CAAEC,KAAK,CAALA,KAAF,CAASC,MAAM,CAANA,MAAT,CAAD,CAF7B,CAN6C,OAmBrDS,uBAnBqD,CAmB3B,eAAgB,IAAbC,CAAAA,MAAa,OAAbA,MAAa,CACxC,GAAMF,CAAAA,WAAW,CAAGV,sBAAsB,CAACY,MAAD,CAA1C,CACA,MAAKC,QAAL,CAAc,CAAEH,WAAW,CAAXA,WAAF,CAAd,EACD,CAtBoD,0GAWjC,CAClBL,UAAU,CAACS,gBAAX,CAA4B,QAA5B,CAAsC,KAAKH,uBAA3C,EACD,CAboD,mEAe9B,CACrBN,UAAU,CAACU,mBAAX,CAA+B,QAA/B,CAAyC,KAAKJ,uBAA9C,EACD,CAjBoD,uCAwB5C,CACP,MAAO,qBAAC,gBAAD,aAAsB,KAAKK,KAA3B,CAAsC,KAAKR,KAA3C,EAAP,CACD,CA1BoD,+BAGvBV,KAAK,CAACmB,SAHiB,EAGjDV,iBAHiD,CAI9CW,WAJ8C,mBAIdd,gBAAgB,CAACc,WAJH,KA6BvD,MAAOnB,CAAAA,mBAAmB,CAACQ,iBAAD,CAAoBH,gBAApB,CAA1B,CACD","sourcesContent":["import * as React from 'react';\nimport { Dimensions } from 'react-native';\nimport hoistNonReactStatic from 'hoist-non-react-statics';\n\nexport const isOrientationLandscape = ({ width, height }) => width > height;\n\nexport default function withDimensions(WrappedComponent) {\n  const { width, height } = Dimensions.get('window');\n\n  class EnhancedComponent extends React.Component {\n    static displayName = `withDimensions(${WrappedComponent.displayName})`;\n\n    state = {\n      dimensions: { width, height },\n      isLandscape: isOrientationLandscape({ width, height }),\n    };\n\n    componentDidMount() {\n      Dimensions.addEventListener('change', this.handleOrientationChange);\n    }\n\n    componentWillUnmount() {\n      Dimensions.removeEventListener('change', this.handleOrientationChange);\n    }\n\n    handleOrientationChange = ({ window }) => {\n      const isLandscape = isOrientationLandscape(window);\n      this.setState({ isLandscape });\n    };\n\n    render() {\n      return <WrappedComponent {...this.props} {...this.state} />;\n    }\n  }\n\n  return hoistNonReactStatic(EnhancedComponent, WrappedComponent);\n}\n"]},"metadata":{},"sourceType":"module"}