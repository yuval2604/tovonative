{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import Constants from'expo-constants';import Linking from\"react-native-web/dist/exports/Linking\";import Platform from\"react-native-web/dist/exports/Platform\";import ExponentStoreReview from\"./ExponentStoreReview\";export function isSupported(){return ExponentStoreReview&&ExponentStoreReview.isSupported;}export function requestReview(){var url,supported;return _regeneratorRuntime.async(function requestReview$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(ExponentStoreReview&&ExponentStoreReview.requestReview)){_context.next=5;break;}_context.next=3;return _regeneratorRuntime.awrap(ExponentStoreReview.requestReview());case 3:_context.next=20;break;case 5:url=storeUrl();if(!url){_context.next=19;break;}_context.next=9;return _regeneratorRuntime.awrap(Linking.canOpenURL(url));case 9:supported=_context.sent;if(supported){_context.next=14;break;}console.log(\"Expo.StoreReview.requestReview(): Can't open store url: \",url);_context.next=17;break;case 14:_context.next=16;return _regeneratorRuntime.awrap(Linking.openURL(url));case 16:return _context.abrupt(\"return\");case 17:_context.next=20;break;case 19:console.log(\"Expo.StoreReview.requestReview(): Couldn't link to store, please make sure the `android.playStoreUrl` & `ios.appStoreUrl` fields are filled out in your `app.json`\");case 20:case\"end\":return _context.stop();}}});}export function storeUrl(){var manifest=Constants.manifest;if(Platform.OS==='ios'&&manifest.ios){return manifest.ios.appStoreUrl;}else if(Platform.OS==='android'&&manifest.android){return manifest.android.playStoreUrl;}else{return null;}}export function hasAction(){return!!storeUrl()||isSupported();}","map":{"version":3,"sources":["../../src/StoreReview/StoreReview.ts"],"names":[],"mappings":"4DAAA,MAAO,CAAA,SAAP,KAAsB,gBAAtB,C,wHAGA,MAAO,CAAA,mBAAP,6BAOA,MAAM,SAAU,CAAA,WAAV,EAAqB,CACzB,MAAO,CAAA,mBAAmB,EAAI,mBAAmB,CAAC,WAAlD,CACD,CAKD,MAAO,SAAe,CAAA,aAAf,iJACD,mBAAmB,EAAI,mBAAmB,CAAC,aAD1C,2EAEG,mBAAmB,CAAC,aAApB,EAFH,uCAOG,GAPH,CAOS,QAAQ,EAPjB,KAQC,GARD,2EASuB,OAAO,CAAC,UAAR,CAAmB,GAAnB,CATvB,SASK,SATL,kBAUI,SAVJ,0BAWC,OAAO,CAAC,GAAR,CAAY,0DAAZ,CAAwE,GAAxE,EAXD,iFAaO,OAAO,CAAC,OAAR,CAAgB,GAAhB,CAbP,kFAkBD,OAAO,CAAC,GAAR,CACE,oKADF,EAlBC,+CA8BP,MAAM,SAAU,CAAA,QAAV,EAAkB,IACd,CAAA,QADc,CACD,SADC,CACd,QADc,CAEtB,GAAI,QAAQ,CAAC,EAAT,GAAgB,KAAhB,EAAyB,QAAQ,CAAC,GAAtC,CAA2C,CACzC,MAAO,CAAA,QAAQ,CAAC,GAAT,CAAa,WAApB,CACD,CAFD,IAEO,IAAI,QAAQ,CAAC,EAAT,GAAgB,SAAhB,EAA6B,QAAQ,CAAC,OAA1C,CAAmD,CACxD,MAAO,CAAA,QAAQ,CAAC,OAAT,CAAiB,YAAxB,CACD,CAFM,IAEA,CACL,MAAO,KAAP,CACD,CACF,CAKD,MAAM,SAAU,CAAA,SAAV,EAAmB,CACvB,MAAO,CAAC,CAAC,QAAQ,EAAV,EAAgB,WAAW,EAAlC,CACD","sourcesContent":["import Constants from 'expo-constants';\nimport { Linking, Platform } from 'react-native';\n\nimport ExponentStoreReview from './ExponentStoreReview';\n\n/*\n * Platform must be iOS\n * iOS 10.3 or greater\n * `SKStoreReviewController` class is available\n */\nexport function isSupported(): boolean {\n  return ExponentStoreReview && ExponentStoreReview.isSupported;\n}\n\n/*\n * Use the iOS `SKStoreReviewController` API to prompt a user rating without leaving the app.\n */\nexport async function requestReview(): Promise<void> {\n  if (ExponentStoreReview && ExponentStoreReview.requestReview) {\n    await ExponentStoreReview.requestReview();\n  } else {\n    /*\n     * If StoreReview is unavailable then get the store URL from the `app.json` and open to the store.\n     */\n    const url = storeUrl();\n    if (url) {\n      const supported = await Linking.canOpenURL(url);\n      if (!supported) {\n        console.log(\"Expo.StoreReview.requestReview(): Can't open store url: \", url);\n      } else {\n        await Linking.openURL(url);\n        return; \n      }\n    } else {\n      // If the store URL is missing, let the dev know.\n      console.log(\n        \"Expo.StoreReview.requestReview(): Couldn't link to store, please make sure the `android.playStoreUrl` & `ios.appStoreUrl` fields are filled out in your `app.json`\"\n      );\n    }\n  }\n}\n\n/*\n * Get your app's store URLs from the `app.json`\n * iOS: https://docs.expo.io/versions/latest/workflow/configuration#appstoreurlurl-to-your-app-on-the-apple-app-store-if-you-have-deployed-it-there-this-is-used-to-link-to-your-store-page-from-your-expo-project-page-if-your-app-is-public\n * Android: https://docs.expo.io/versions/latest/workflow/configuration#playstoreurlurl-to-your-app-on-the-google-play-store-if-you-have-deployed-it-there-this-is-used-to-link-to-your-store-page-from-your-expo-project-page-if-your-app-is-public\n */\nexport function storeUrl(): string | null {\n  const { manifest } = Constants;\n  if (Platform.OS === 'ios' && manifest.ios) {\n    return manifest.ios.appStoreUrl;\n  } else if (Platform.OS === 'android' && manifest.android) {\n    return manifest.android.playStoreUrl;\n  } else {\n    return null;\n  }\n}\n\n/*\n * A flag to detect if this module can do anything\n */\nexport function hasAction(): boolean {\n  return !!storeUrl() || isSupported();\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}