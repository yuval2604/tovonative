{"ast":null,"code":"import I18nManager from\"react-native-web/dist/exports/I18nManager\";import getSceneIndicesForInterpolationInputRange from\"../../utils/getSceneIndicesForInterpolationInputRange\";var EPS=1e-5;function forInitial(props){var navigation=props.navigation,scene=props.scene;var focused=navigation.state.index===scene.index;var opacity=focused?1:0;var translate=focused?0:1000000;return{opacity:opacity,transform:[{translateX:translate},{translateY:translate}]};}function forHorizontal(props){var layout=props.layout,position=props.position,scene=props.scene;if(!layout.isMeasured){return forInitial(props);}var interpolate=getSceneIndicesForInterpolationInputRange(props);if(!interpolate)return{opacity:0};var first=interpolate.first,last=interpolate.last;var index=scene.index;var width=layout.initWidth;var translateX=position.interpolate({inputRange:[first,index,last],outputRange:I18nManager.isRTL?[-width,0,width*0.3]:[width,0,width*-0.3],extrapolate:'clamp'});var shadowOpacity=props.shadowEnabled?position.interpolate({inputRange:[first,index,last],outputRange:[0,0.7,0],extrapolate:'clamp'}):null;var overlayOpacity=props.cardOverlayEnabled?position.interpolate({inputRange:[index,last-0.5,last,last+EPS],outputRange:[0,0.07,0.07,0],extrapolate:'clamp'}):null;return{transform:[{translateX:translateX}],overlayOpacity:overlayOpacity,shadowOpacity:shadowOpacity};}function forVertical(props){var layout=props.layout,position=props.position,scene=props.scene;if(!layout.isMeasured){return forInitial(props);}var interpolate=getSceneIndicesForInterpolationInputRange(props);if(!interpolate)return{opacity:0};var first=interpolate.first,last=interpolate.last;var index=scene.index;var height=layout.initHeight;var translateY=position.interpolate({inputRange:[first,index,last],outputRange:[height,0,0],extrapolate:'clamp'});return{transform:[{translateY:translateY}]};}function forFadeFromBottomAndroid(props){var layout=props.layout,position=props.position,scene=props.scene;if(!layout.isMeasured){return forInitial(props);}var interpolate=getSceneIndicesForInterpolationInputRange(props);if(!interpolate)return{opacity:0};var first=interpolate.first,last=interpolate.last;var index=scene.index;var opacity=position.interpolate({inputRange:[first,first+0.5,first+0.9,index,last-1e-5,last],outputRange:[0,0.25,0.7,1,1,0],extrapolate:'clamp'});var height=layout.initHeight;var maxTranslation=height*0.08;var translateY=position.interpolate({inputRange:[first,index,last],outputRange:[maxTranslation,0,0],extrapolate:'clamp'});return{opacity:opacity,transform:[{translateY:translateY}]};}function forFadeToBottomAndroid(props){var layout=props.layout,position=props.position,scene=props.scene;if(!layout.isMeasured){return forInitial(props);}var interpolate=getSceneIndicesForInterpolationInputRange(props);if(!interpolate)return{opacity:0};var first=interpolate.first,last=interpolate.last;var index=scene.index;var inputRange=[first,index,last];var opacity=position.interpolate({inputRange:inputRange,outputRange:[0,1,1],extrapolate:'clamp'});var height=layout.initHeight;var maxTranslation=height*0.08;var translateY=position.interpolate({inputRange:inputRange,outputRange:[maxTranslation,0,0],extrapolate:'clamp'});return{opacity:opacity,transform:[{translateY:translateY}]};}function forFade(props){var layout=props.layout,position=props.position,scene=props.scene;if(!layout.isMeasured){return forInitial(props);}var interpolate=getSceneIndicesForInterpolationInputRange(props);if(!interpolate)return{opacity:0};var first=interpolate.first,last=interpolate.last;var index=scene.index;var opacity=position.interpolate({inputRange:[first,index,last],outputRange:[0,1,1],extrapolate:'clamp'});return{opacity:opacity};}function forNoAnimation(){return{};}export default{forHorizontal:forHorizontal,forVertical:forVertical,forFadeFromBottomAndroid:forFadeFromBottomAndroid,forFadeToBottomAndroid:forFadeToBottomAndroid,forFade:forFade,forNoAnimation:forNoAnimation};","map":{"version":3,"sources":["StackViewStyleInterpolator.tsx"],"names":["EPS","navigation","scene","props","focused","opacity","translate","transform","translateX","translateY","layout","position","forInitial","interpolate","getSceneIndicesForInterpolationInputRange","first","last","index","width","inputRange","outputRange","I18nManager","extrapolate","shadowOpacity","overlayOpacity","height","maxTranslation","forHorizontal","forVertical","forFadeFromBottomAndroid","forFadeToBottomAndroid","forFade","forNoAnimation"],"mappings":"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","sourcesContent":["import { I18nManager } from 'react-native';\nimport getSceneIndicesForInterpolationInputRange from '../../utils/getSceneIndicesForInterpolationInputRange';\nimport { SceneInterpolatorProps } from '../../types';\n\nconst EPS = 1e-5;\n\n/**\n * Utility that builds the style for the card in the cards stack.\n *\n *     +------------+\n *   +-+            |\n * +-+ |            |\n * | | |            |\n * | | |  Focused   |\n * | | |   Card     |\n * | | |            |\n * +-+ |            |\n *   +-+            |\n *     +------------+\n */\n\n/**\n * Render the initial style when the initial layout isn't measured yet.\n */\nfunction forInitial(props: SceneInterpolatorProps) {\n  const { navigation, scene } = props;\n\n  const focused = navigation.state.index === scene.index;\n  const opacity = focused ? 1 : 0;\n  // If not focused, move the scene far away.\n  const translate = focused ? 0 : 1000000;\n  return {\n    opacity,\n    transform: [{ translateX: translate }, { translateY: translate }],\n  };\n}\n\n/**\n * Standard iOS-style slide in from the right.\n */\nfunction forHorizontal(props: SceneInterpolatorProps) {\n  const { layout, position, scene } = props;\n\n  if (!layout.isMeasured) {\n    return forInitial(props);\n  }\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n\n  if (!interpolate) return { opacity: 0 };\n\n  const { first, last } = interpolate;\n  const index = scene.index;\n\n  const width = layout.initWidth;\n  const translateX = position.interpolate({\n    inputRange: [first, index, last],\n    outputRange: I18nManager.isRTL\n      ? [-width, 0, width * 0.3]\n      : [width, 0, width * -0.3],\n    extrapolate: 'clamp',\n  });\n\n  const shadowOpacity = props.shadowEnabled\n    ? position.interpolate({\n        inputRange: [first, index, last],\n        outputRange: [0, 0.7, 0],\n        extrapolate: 'clamp',\n      })\n    : null;\n\n  let overlayOpacity = props.cardOverlayEnabled\n    ? position.interpolate({\n        inputRange: [index, last - 0.5, last, last + EPS],\n        outputRange: [0, 0.07, 0.07, 0],\n        extrapolate: 'clamp',\n      })\n    : null;\n\n  return {\n    transform: [{ translateX }],\n    overlayOpacity,\n    shadowOpacity,\n  };\n}\n\n/**\n * Standard iOS-style slide in from the bottom (used for modals).\n */\nfunction forVertical(props: SceneInterpolatorProps) {\n  const { layout, position, scene } = props;\n\n  if (!layout.isMeasured) {\n    return forInitial(props);\n  }\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n\n  if (!interpolate) return { opacity: 0 };\n\n  const { first, last } = interpolate;\n  const index = scene.index;\n  const height = layout.initHeight;\n  const translateY = position.interpolate({\n    inputRange: [first, index, last],\n    outputRange: [height, 0, 0],\n    extrapolate: 'clamp',\n  });\n\n  return {\n    transform: [{ translateY }],\n  };\n}\n\n/**\n * Standard Android-style fade in from the bottom.\n */\nfunction forFadeFromBottomAndroid(props: SceneInterpolatorProps) {\n  const { layout, position, scene } = props;\n\n  if (!layout.isMeasured) {\n    return forInitial(props);\n  }\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n\n  if (!interpolate) return { opacity: 0 };\n\n  const { first, last } = interpolate;\n  const index = scene.index;\n  const opacity = position.interpolate({\n    inputRange: [first, first + 0.5, first + 0.9, index, last - 1e-5, last],\n    outputRange: [0, 0.25, 0.7, 1, 1, 0],\n    extrapolate: 'clamp',\n  });\n\n  const height = layout.initHeight;\n  const maxTranslation = height * 0.08;\n  const translateY = position.interpolate({\n    inputRange: [first, index, last],\n    outputRange: [maxTranslation, 0, 0],\n    extrapolate: 'clamp',\n  });\n\n  return {\n    opacity,\n    transform: [{ translateY }],\n  };\n}\n\nfunction forFadeToBottomAndroid(props: SceneInterpolatorProps) {\n  const { layout, position, scene } = props;\n\n  if (!layout.isMeasured) {\n    return forInitial(props);\n  }\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n\n  if (!interpolate) return { opacity: 0 };\n\n  const { first, last } = interpolate;\n  const index = scene.index;\n  const inputRange = [first, index, last];\n\n  const opacity = position.interpolate({\n    inputRange,\n    outputRange: [0, 1, 1],\n    extrapolate: 'clamp',\n  });\n\n  const height = layout.initHeight;\n  const maxTranslation = height * 0.08;\n\n  const translateY = position.interpolate({\n    inputRange,\n    outputRange: [maxTranslation, 0, 0],\n    extrapolate: 'clamp',\n  });\n\n  return {\n    opacity,\n    transform: [{ translateY }],\n  };\n}\n\n/**\n *  fadeIn and fadeOut\n */\nfunction forFade(props: SceneInterpolatorProps) {\n  const { layout, position, scene } = props;\n\n  if (!layout.isMeasured) {\n    return forInitial(props);\n  }\n  const interpolate = getSceneIndicesForInterpolationInputRange(props);\n\n  if (!interpolate) return { opacity: 0 };\n\n  const { first, last } = interpolate;\n  const index = scene.index;\n  const opacity = position.interpolate({\n    inputRange: [first, index, last],\n    outputRange: [0, 1, 1],\n    extrapolate: 'clamp',\n  });\n\n  return {\n    opacity,\n  };\n}\n\nfunction forNoAnimation() {\n  return {};\n}\n\nexport default {\n  forHorizontal,\n  forVertical,\n  forFadeFromBottomAndroid,\n  forFadeToBottomAndroid,\n  forFade,\n  forNoAnimation,\n};\n"]},"metadata":{},"sourceType":"module"}