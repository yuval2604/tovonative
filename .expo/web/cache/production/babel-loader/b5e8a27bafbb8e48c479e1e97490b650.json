{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import React from'react';import Platform from\"react-native-web/dist/exports/Platform\";import TouchableNativeFeedback from\"react-native-web/dist/exports/TouchableNativeFeedback\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import View from\"react-native-web/dist/exports/View\";var ANDROID_VERSION_LOLLIPOP=21;var TouchableItem=function(_React$Component){_inherits(TouchableItem,_React$Component);function TouchableItem(){_classCallCheck(this,TouchableItem);return _possibleConstructorReturn(this,_getPrototypeOf(TouchableItem).apply(this,arguments));}_createClass(TouchableItem,[{key:\"render\",value:function render(){if(Platform.OS==='android'&&Platform.Version>=ANDROID_VERSION_LOLLIPOP){var _this$props=this.props,style=_this$props.style,rest=_objectWithoutProperties(_this$props,[\"style\"]);return React.createElement(TouchableNativeFeedback,_extends({},rest,{style:null,background:TouchableNativeFeedback.Ripple(this.props.pressColor,this.props.borderless)}),React.createElement(View,{style:style},React.Children.only(this.props.children)));}return React.createElement(TouchableOpacity,this.props,this.props.children);}}]);return TouchableItem;}(React.Component);TouchableItem.defaultProps={borderless:false,pressColor:'rgba(0, 0, 0, .32)'};export{TouchableItem as default};","map":{"version":3,"sources":["/Users/yuvalbeiser/Downloads/codecanyon-B1UUUVLW-harrier-react-native-ecommerce-ui-kit-template/eCommerce2/node_modules/react-navigation-drawer/dist/views/TouchableItem.js"],"names":["React","ANDROID_VERSION_LOLLIPOP","TouchableItem","Platform","OS","Version","props","style","rest","TouchableNativeFeedback","Ripple","pressColor","borderless","Children","only","children","Component","defaultProps"],"mappings":"6dASA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,0RAGA,GAAMC,CAAAA,wBAAwB,CAAG,EAAjC,C,GAEqBC,CAAAA,a,kSAMV,CASP,GAAIC,QAAQ,CAACC,EAAT,GAAgB,SAAhB,EAA6BD,QAAQ,CAACE,OAAT,EAAoBJ,wBAArD,CAA+E,iBAClD,KAAKK,KAD6C,CACrEC,KADqE,aACrEA,KADqE,CAC3DC,IAD2D,iDAE7E,MAAO,qBAAC,uBAAD,aAA6BA,IAA7B,EAAmC,KAAK,CAAE,IAA1C,CAAgD,UAAU,CAAEC,uBAAuB,CAACC,MAAxB,CAA+B,KAAKJ,KAAL,CAAWK,UAA1C,CAAsD,KAAKL,KAAL,CAAWM,UAAjE,CAA5D,GACH,oBAAC,IAAD,EAAM,KAAK,CAAEL,KAAb,EAAqBP,KAAK,CAACa,QAAN,CAAeC,IAAf,CAAoB,KAAKR,KAAL,CAAWS,QAA/B,CAArB,CADG,CAAP,CAGD,CAED,MAAO,qBAAC,gBAAD,CAAsB,KAAKT,KAA3B,CAAmC,KAAKA,KAAL,CAAWS,QAA9C,CAAP,CACD,C,2BAvBwCf,KAAK,CAACgB,S,EAA5Bd,a,CACZe,Y,CAAe,CACpBL,UAAU,CAAE,KADQ,CAEpBD,UAAU,CAAE,oBAFQ,C,QADHT,a","sourcesContent":["/**\n * TouchableItem renders a touchable that looks native on both iOS and Android.\n *\n * It provides an abstraction on top of TouchableNativeFeedback and\n * TouchableOpacity.\n *\n * On iOS you can pass the props of TouchableOpacity, on Android pass the props\n * of TouchableNativeFeedback.\n */\nimport React from 'react';\nimport { Platform, TouchableNativeFeedback, TouchableOpacity, View } from 'react-native';\n\nconst ANDROID_VERSION_LOLLIPOP = 21;\n\nexport default class TouchableItem extends React.Component {\n  static defaultProps = {\n    borderless: false,\n    pressColor: 'rgba(0, 0, 0, .32)'\n  };\n\n  render() {\n    /*\n     * TouchableNativeFeedback.Ripple causes a crash on old Android versions,\n     * therefore only enable it on Android Lollipop and above.\n     *\n     * All touchables on Android should have the ripple effect according to\n     * platform design guidelines.\n     * We need to pass the background prop to specify a borderless ripple effect.\n     */\n    if (Platform.OS === 'android' && Platform.Version >= ANDROID_VERSION_LOLLIPOP) {\n      const { style, ...rest } = this.props;\n      return <TouchableNativeFeedback {...rest} style={null} background={TouchableNativeFeedback.Ripple(this.props.pressColor, this.props.borderless)}>\n          <View style={style}>{React.Children.only(this.props.children)}</View>\n        </TouchableNativeFeedback>;\n    }\n\n    return <TouchableOpacity {...this.props}>{this.props.children}</TouchableOpacity>;\n  }\n}"]},"metadata":{},"sourceType":"module"}