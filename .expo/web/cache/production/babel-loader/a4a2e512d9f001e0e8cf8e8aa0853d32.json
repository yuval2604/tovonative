{"ast":null,"code":"import _objectWithoutProperties from\"@babel/runtime/helpers/objectWithoutProperties\";import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";import*as React from'react';import View from\"react-native-web/dist/exports/View\";import Platform from\"react-native-web/dist/exports/Platform\";import{polyfill}from'react-lifecycles-compat';import{TabView,PagerPan}from'react-native-tab-view';import createTabNavigator from\"../utils/createTabNavigator\";import MaterialTopTabBar from\"../views/MaterialTopTabBar\";import ResourceSavingScene from\"../views/ResourceSavingScene\";var MaterialTabView=function(_React$PureComponent){_inherits(MaterialTabView,_React$PureComponent);function MaterialTabView(){var _getPrototypeOf2;var _this;_classCallCheck(this,MaterialTabView);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(MaterialTabView)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={index:0,isSwiping:false,loaded:[_this.props.navigation.state.index],transitioningFromIndex:null};_this._renderIcon=function(_ref){var focused=_ref.focused,route=_ref.route,tintColor=_ref.tintColor;var descriptors=_this.props.descriptors;var descriptor=descriptors[route.key];var options=descriptor.options;if(options.tabBarIcon){return typeof options.tabBarIcon==='function'?options.tabBarIcon({tintColor:tintColor,focused:focused}):options.tabBarIcon;}return null;};_this._renderTabBar=function(props){var state=_this.props.navigation.state;var route=state.routes[state.index];var descriptors=_this.props.descriptors;var descriptor=descriptors[route.key];var options=descriptor.options;var tabBarVisible=options.tabBarVisible==null?true:options.tabBarVisible;var _this$props=_this.props,_this$props$tabBarCom=_this$props.tabBarComponent,TabBarComponent=_this$props$tabBarCom===void 0?MaterialTopTabBar:_this$props$tabBarCom,tabBarPosition=_this$props.tabBarPosition,tabBarOptions=_this$props.tabBarOptions;if(TabBarComponent===null||!tabBarVisible){return null;}return React.createElement(TabBarComponent,_extends({},tabBarOptions,props,{tabBarPosition:tabBarPosition,screenProps:_this.props.screenProps,navigation:_this.props.navigation,getLabelText:_this.props.getLabelText,getAccessibilityLabel:_this.props.getAccessibilityLabel,getTestID:_this.props.getTestID,renderIcon:_this._renderIcon,onTabPress:_this.props.onTabPress,onTabLongPress:_this.props.onTabLongPress}));};_this._renderPanPager=function(props){return React.createElement(PagerPan,props);};_this._handleAnimationEnd=function(){var lazy=_this.props.lazy;if(lazy){_this.setState({transitioningFromIndex:null,isSwiping:false});}};_this._handleSwipeStart=function(){var _this$props2=_this.props,navigation=_this$props2.navigation,lazy=_this$props2.lazy;if(lazy){_this.setState({isSwiping:true,loaded:_toConsumableArray(new Set([].concat(_toConsumableArray(_this.state.loaded),[Math.max(navigation.state.index-1,0),Math.min(navigation.state.index+1,navigation.state.routes.length-1)])))});}};_this._handleIndexChange=function(index){var _this$props3=_this.props,animationEnabled=_this$props3.animationEnabled,navigation=_this$props3.navigation,onIndexChange=_this$props3.onIndexChange,lazy=_this$props3.lazy;if(lazy&&animationEnabled){_this.setState({transitioningFromIndex:navigation.state.index||0});}onIndexChange(index);};_this._mustBeVisible=function(_ref2){var index=_ref2.index,focused=_ref2.focused;var _this$props4=_this.props,animationEnabled=_this$props4.animationEnabled,navigation=_this$props4.navigation;var _this$state=_this.state,isSwiping=_this$state.isSwiping,transitioningFromIndex=_this$state.transitioningFromIndex;if(isSwiping){var isSibling=navigation.state.index===index-1||navigation.state.index===index+1;if(isSibling){return true;}}if(animationEnabled&&transitioningFromIndex===index){return true;}return focused;};_this._renderScene=function(_ref3){var route=_ref3.route;var _this$props5=_this.props,renderScene=_this$props5.renderScene,descriptors=_this$props5.descriptors,lazy=_this$props5.lazy,optimizationsEnabled=_this$props5.optimizationsEnabled;if(lazy){var loaded=_this.state.loaded;var routes=_this.props.navigation.state.routes;var index=routes.findIndex(function(_ref4){var key=_ref4.key;return key===route.key;});var navigation=descriptors[route.key].navigation;var mustBeVisible=_this._mustBeVisible({index:index,focused:navigation.isFocused()});if(!loaded.includes(index)&&!mustBeVisible){return React.createElement(View,null);}if(optimizationsEnabled){return React.createElement(ResourceSavingScene,{isVisible:mustBeVisible},renderScene({route:route}));}}return renderScene({route:route});};return _this;}_createClass(MaterialTabView,[{key:\"render\",value:function render(){var _this$props6=this.props,navigation=_this$props6.navigation,animationEnabled=_this$props6.animationEnabled,renderScene=_this$props6.renderScene,onIndexChange=_this$props6.onIndexChange,rest=_objectWithoutProperties(_this$props6,[\"navigation\",\"animationEnabled\",\"renderScene\",\"onIndexChange\"]);var renderPager=rest.renderPager;var state=this.props.navigation.state;var route=state.routes[state.index];var descriptors=this.props.descriptors;var descriptor=descriptors[route.key];var options=descriptor.options;var swipeEnabled=options.swipeEnabled==null?this.props.swipeEnabled:options.swipeEnabled;if(typeof swipeEnabled==='function'){swipeEnabled=swipeEnabled(state);}if(animationEnabled===false&&swipeEnabled===false){renderPager=this._renderPanPager;}return React.createElement(TabView,_extends({},rest,{navigationState:navigation.state,animationEnabled:animationEnabled,swipeEnabled:swipeEnabled,onAnimationEnd:this._handleAnimationEnd,onIndexChange:this._handleIndexChange,onSwipeStart:this._handleSwipeStart,renderPager:renderPager,renderTabBar:this._renderTabBar,renderScene:this._renderScene}));}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(nextProps,prevState){var index=nextProps.navigation.state.index;if(prevState.index===index){return null;}return{loaded:prevState.loaded.includes(index)?prevState.loaded:[].concat(_toConsumableArray(prevState.loaded),[index]),index:index};}}]);return MaterialTabView;}(React.PureComponent);MaterialTabView.defaultProps={initialLayout:Platform.select({android:{width:1,height:0}}),animationEnabled:true,lazy:false,optimizationsEnabled:false};polyfill(MaterialTabView);export default createTabNavigator(MaterialTabView);","map":{"version":3,"sources":["/Users/yuvalbeiser/Downloads/codecanyon-B1UUUVLW-harrier-react-native-ecommerce-ui-kit-template/eCommerce2/node_modules/react-navigation-tabs/src/navigators/createMaterialTopTabNavigator.js"],"names":["React","polyfill","TabView","PagerPan","createTabNavigator","MaterialTopTabBar","ResourceSavingScene","MaterialTabView","state","index","isSwiping","loaded","props","navigation","transitioningFromIndex","_renderIcon","focused","route","tintColor","descriptors","descriptor","key","options","tabBarIcon","_renderTabBar","routes","tabBarVisible","tabBarComponent","TabBarComponent","tabBarPosition","tabBarOptions","screenProps","getLabelText","getAccessibilityLabel","getTestID","onTabPress","onTabLongPress","_renderPanPager","_handleAnimationEnd","lazy","setState","_handleSwipeStart","Set","Math","max","min","length","_handleIndexChange","animationEnabled","onIndexChange","_mustBeVisible","isSibling","_renderScene","renderScene","optimizationsEnabled","findIndex","mustBeVisible","isFocused","includes","rest","renderPager","swipeEnabled","nextProps","prevState","PureComponent","defaultProps","initialLayout","Platform","select","android","width","height"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport * as React from 'react';\nimport { View, Platform } from 'react-native';\nimport { polyfill } from 'react-lifecycles-compat';\nimport { TabView, PagerPan } from 'react-native-tab-view';\nimport createTabNavigator, {\n  type InjectedProps,\n} from '../utils/createTabNavigator';\nimport MaterialTopTabBar, {\n  type TabBarOptions,\n} from '../views/MaterialTopTabBar';\nimport ResourceSavingScene from '../views/ResourceSavingScene';\n\ntype Props = InjectedProps & {\n  animationEnabled?: boolean,\n  lazy?: boolean,\n  optimizationsEnabled?: boolean,\n  swipeEnabled?: boolean,\n  renderPager?: (props: *) => React.Node,\n  tabBarComponent?: React.ComponentType<*>,\n  tabBarOptions?: TabBarOptions,\n  tabBarPosition?: 'top' | 'bottom',\n};\n\ntype State = {\n  index: number,\n  isSwiping: boolean,\n  loaded: Array<number>,\n  transitioningFromIndex: ?number,\n};\n\nclass MaterialTabView extends React.PureComponent<Props, State> {\n  static defaultProps = {\n    // fix for https://github.com/react-native-community/react-native-tab-view/issues/312\n    initialLayout: Platform.select({\n      android: { width: 1, height: 0 },\n    }),\n    animationEnabled: true,\n    lazy: false,\n    optimizationsEnabled: false,\n  };\n\n  static getDerivedStateFromProps(nextProps, prevState) {\n    const { index } = nextProps.navigation.state;\n\n    if (prevState.index === index) {\n      return null;\n    }\n\n    return {\n      loaded: prevState.loaded.includes(index)\n        ? prevState.loaded\n        : [...prevState.loaded, index],\n      index,\n    };\n  }\n\n  state = {\n    index: 0,\n    isSwiping: false,\n    loaded: [this.props.navigation.state.index],\n    transitioningFromIndex: null,\n  };\n\n  _renderIcon = ({ focused, route, tintColor }) => {\n    const { descriptors } = this.props;\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    if (options.tabBarIcon) {\n      return typeof options.tabBarIcon === 'function'\n        ? options.tabBarIcon({ tintColor, focused })\n        : options.tabBarIcon;\n    }\n\n    return null;\n  };\n\n  _renderTabBar = props => {\n    const { state } = this.props.navigation;\n    const route = state.routes[state.index];\n    const { descriptors } = this.props;\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    const tabBarVisible =\n      options.tabBarVisible == null ? true : options.tabBarVisible;\n\n    const {\n      tabBarComponent: TabBarComponent = MaterialTopTabBar,\n      tabBarPosition,\n      tabBarOptions,\n    } = this.props;\n\n    if (TabBarComponent === null || !tabBarVisible) {\n      return null;\n    }\n\n    return (\n      /* $FlowFixMe */\n      <TabBarComponent\n        {...tabBarOptions}\n        {...props}\n        tabBarPosition={tabBarPosition}\n        screenProps={this.props.screenProps}\n        navigation={this.props.navigation}\n        getLabelText={this.props.getLabelText}\n        getAccessibilityLabel={this.props.getAccessibilityLabel}\n        getTestID={this.props.getTestID}\n        renderIcon={this._renderIcon}\n        onTabPress={this.props.onTabPress}\n        onTabLongPress={this.props.onTabLongPress}\n      />\n    );\n  };\n\n  _renderPanPager = props => <PagerPan {...props} />;\n\n  _handleAnimationEnd = () => {\n    const { lazy } = this.props;\n\n    if (lazy) {\n      this.setState({\n        transitioningFromIndex: null,\n        isSwiping: false,\n      });\n    }\n  };\n\n  _handleSwipeStart = () => {\n    const { navigation, lazy } = this.props;\n\n    if (lazy) {\n      this.setState({\n        isSwiping: true,\n        loaded: [\n          ...new Set([\n            ...this.state.loaded,\n            Math.max(navigation.state.index - 1, 0),\n            Math.min(\n              navigation.state.index + 1,\n              navigation.state.routes.length - 1\n            ),\n          ]),\n        ],\n      });\n    }\n  };\n\n  _handleIndexChange = index => {\n    const { animationEnabled, navigation, onIndexChange, lazy } = this.props;\n\n    if (lazy && animationEnabled) {\n      this.setState({\n        transitioningFromIndex: navigation.state.index || 0,\n      });\n    }\n\n    onIndexChange(index);\n  };\n\n  _mustBeVisible = ({ index, focused }) => {\n    const { animationEnabled, navigation } = this.props;\n    const { isSwiping, transitioningFromIndex } = this.state;\n\n    if (isSwiping) {\n      const isSibling =\n        navigation.state.index === index - 1 ||\n        navigation.state.index === index + 1;\n\n      if (isSibling) {\n        return true;\n      }\n    }\n\n    // The previous tab should remain visible while transitioning\n    if (animationEnabled && transitioningFromIndex === index) {\n      return true;\n    }\n\n    return focused;\n  };\n\n  _renderScene = ({ route }) => {\n    const { renderScene, descriptors, lazy, optimizationsEnabled } = this.props;\n\n    if (lazy) {\n      const { loaded } = this.state;\n      const { routes } = this.props.navigation.state;\n      const index = routes.findIndex(({ key }) => key === route.key);\n      const { navigation } = descriptors[route.key];\n\n      const mustBeVisible = this._mustBeVisible({\n        index,\n        focused: navigation.isFocused(),\n      });\n\n      if (!loaded.includes(index) && !mustBeVisible) {\n        return <View />;\n      }\n\n      if (optimizationsEnabled) {\n        return (\n          <ResourceSavingScene isVisible={mustBeVisible}>\n            {renderScene({ route })}\n          </ResourceSavingScene>\n        );\n      }\n    }\n\n    return renderScene({ route });\n  };\n\n  render() {\n    const {\n      navigation,\n      animationEnabled,\n      // eslint-disable-next-line no-unused-vars\n      renderScene,\n      // eslint-disable-next-line no-unused-vars\n      onIndexChange,\n      ...rest\n    } = this.props;\n\n    let renderPager = rest.renderPager;\n\n    const { state } = this.props.navigation;\n    const route = state.routes[state.index];\n    const { descriptors } = this.props;\n    const descriptor = descriptors[route.key];\n    const options = descriptor.options;\n\n    let swipeEnabled =\n      options.swipeEnabled == null\n        ? this.props.swipeEnabled\n        : options.swipeEnabled;\n\n    if (typeof swipeEnabled === 'function') {\n      swipeEnabled = swipeEnabled(state);\n    }\n\n    if (animationEnabled === false && swipeEnabled === false) {\n      renderPager = this._renderPanPager;\n    }\n\n    return (\n      <TabView\n        {...rest}\n        navigationState={navigation.state}\n        animationEnabled={animationEnabled}\n        swipeEnabled={swipeEnabled}\n        onAnimationEnd={this._handleAnimationEnd}\n        onIndexChange={this._handleIndexChange}\n        onSwipeStart={this._handleSwipeStart}\n        renderPager={renderPager}\n        renderTabBar={this._renderTabBar}\n        renderScene={\n          /* $FlowFixMe */\n          this._renderScene\n        }\n      />\n    );\n  }\n}\n\npolyfill(MaterialTabView);\n\nexport default createTabNavigator(MaterialTabView);\n"]},"metadata":{},"sourceType":"module"}