{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.ScrollableTab=undefined;var _jsxFileName='src/basic/Tabs/ScrollableTabBar.js';var _react=require('react');var _react2=_interopRequireDefault(_react);var _propTypes=require('prop-types');var _propTypes2=_interopRequireDefault(_propTypes);var _createReactClass=require('create-react-class');var _createReactClass2=_interopRequireDefault(_createReactClass);var _lodash=require('lodash');var _nativeBaseShoutemTheme=require('native-base-shoutem-theme');var _mapPropsToStyleNames=require(\"../../utils/mapPropsToStyleNames\");var _mapPropsToStyleNames2=_interopRequireDefault(_mapPropsToStyleNames);var _platform=require(\"./../../theme/variables/platform\");var _platform2=_interopRequireDefault(_platform);var _TabHeading=require(\"../TabHeading\");var _Text=require(\"../Text\");var _TabContainer=require(\"../TabContainer\");var _utils=require(\"../../utils\");function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}var Button=require(\"./Button\");var ReactNative=require(\"react-native-web/dist/index\");var View=ReactNative.View,Animated=ReactNative.Animated,StyleSheet=ReactNative.StyleSheet,ScrollView=ReactNative.ScrollView,Platform=ReactNative.Platform,Dimensions=ReactNative.Dimensions;var WINDOW_WIDTH=Dimensions.get('window').width;var ScrollableTabBar=(0,_createReactClass2.default)({displayName:'ScrollableTabBar',propTypes:{goToPage:_propTypes2.default.func,activeTab:_propTypes2.default.number,tabs:_propTypes2.default.array,backgroundColor:_propTypes2.default.string,activeTextColor:_propTypes2.default.string,inactiveTextColor:_propTypes2.default.string,scrollOffset:_propTypes2.default.number,style:_utils.ViewPropTypes.style,tabStyle:_utils.ViewPropTypes.style,tabsContainerStyle:_utils.ViewPropTypes.style,renderTab:_propTypes2.default.func,underlineStyle:_utils.ViewPropTypes.style,onScroll:_propTypes2.default.func},contextTypes:{theme:_propTypes2.default.object},getDefaultProps:function getDefaultProps(){return{scrollOffset:52,activeTextColor:'navy',inactiveTextColor:'black',backgroundColor:_platform2.default.tabDefaultBg,style:{},tabStyle:{},tabsContainerStyle:{},underlineStyle:{},tabFontSize:_platform2.default.tabFontSize};},getInitialState:function getInitialState(){this._tabsMeasurements=[];return{_leftTabUnderline:new Animated.Value(0),_widthTabUnderline:new Animated.Value(0),_containerWidth:null};},componentDidMount:function componentDidMount(){this.props.scrollValue.addListener(this.updateView);},updateView:function updateView(offset){var position=Math.floor(offset.value);var pageOffset=offset.value%1;var tabCount=this.props.tabs.length;var lastTabPosition=tabCount-1;if(tabCount===0||offset.value<0||offset.value>lastTabPosition){return;}if(this.necessarilyMeasurementsCompleted(position,position===lastTabPosition)){this.updateTabPanel(position,pageOffset);this.updateTabUnderline(position,pageOffset,tabCount);}},necessarilyMeasurementsCompleted:function necessarilyMeasurementsCompleted(position,isLastTab){return this._tabsMeasurements[position]&&(isLastTab||this._tabsMeasurements[position+1])&&this._tabContainerMeasurements&&this._containerMeasurements;},updateTabPanel:function updateTabPanel(position,pageOffset){var containerWidth=this._containerMeasurements.width;var tabWidth=this._tabsMeasurements[position].width;var nextTabMeasurements=this._tabsMeasurements[position+1];var nextTabWidth=nextTabMeasurements&&nextTabMeasurements.width||0;var tabOffset=this._tabsMeasurements[position].left;var absolutePageOffset=pageOffset*tabWidth;var newScrollX=tabOffset+absolutePageOffset;newScrollX-=(containerWidth-(1-pageOffset)*tabWidth-pageOffset*nextTabWidth)/2;newScrollX=newScrollX>=0?newScrollX:0;if(Platform.OS==='android'){this._scrollView.scrollTo({x:newScrollX,y:0,animated:false});}else{var rightBoundScroll=this._tabContainerMeasurements.width-this._containerMeasurements.width;newScrollX=newScrollX>rightBoundScroll?rightBoundScroll:newScrollX;this._scrollView.scrollTo({x:newScrollX,y:0,animated:false});}},updateTabUnderline:function updateTabUnderline(position,pageOffset,tabCount){var lineLeft=this._tabsMeasurements[position].left;var lineRight=this._tabsMeasurements[position].right;if(position<tabCount-1){var nextTabLeft=this._tabsMeasurements[position+1].left;var nextTabRight=this._tabsMeasurements[position+1].right;var newLineLeft=pageOffset*nextTabLeft+(1-pageOffset)*lineLeft;var newLineRight=pageOffset*nextTabRight+(1-pageOffset)*lineRight;this.state._leftTabUnderline.setValue(newLineLeft);this.state._widthTabUnderline.setValue(newLineRight-newLineLeft);}else{this.state._leftTabUnderline.setValue(lineLeft);this.state._widthTabUnderline.setValue(lineRight-lineLeft);}},renderTab:function renderTab(name,page,isTabActive,onPressHandler,onLayoutHandler,tabStyle,activeTabStyle,textStyle,activeTextStyle,tabHeaderStyle,tabFontSize){var headerContent=typeof name!=='string'?name.props.children:undefined;var _props=this.props,activeTextColor=_props.activeTextColor,inactiveTextColor=_props.inactiveTextColor;var textColor=isTabActive?activeTextColor:inactiveTextColor;var fontWeight=isTabActive?'bold':'normal';if(typeof name==='string'){return _react2.default.createElement(Button,{key:name+'_'+page,onPress:function onPress(){return onPressHandler(page);},onLayout:onLayoutHandler,__source:{fileName:_jsxFileName,lineNumber:174}},_react2.default.createElement(_TabHeading.TabHeading,{scrollable:true,style:isTabActive?activeTabStyle:tabStyle,active:isTabActive,__source:{fileName:_jsxFileName,lineNumber:179}},_react2.default.createElement(_Text.Text,{style:[isTabActive?activeTextStyle:textStyle,{fontSize:tabFontSize}],__source:{fileName:_jsxFileName,lineNumber:184}},name)));}return _react2.default.createElement(Button,{key:name+'_'+page,onPress:function onPress(){return onPressHandler(page);},onLayout:onLayoutHandler,__source:{fileName:_jsxFileName,lineNumber:197}},_react2.default.createElement(_TabHeading.TabHeading,{scrollable:true,style:tabHeaderStyle,active:isTabActive,__source:{fileName:_jsxFileName,lineNumber:202}},headerContent));},measureTab:function measureTab(page,event){var _event$nativeEvent$la=event.nativeEvent.layout,x=_event$nativeEvent$la.x,width=_event$nativeEvent$la.width,height=_event$nativeEvent$la.height;this._tabsMeasurements[page]={left:x,right:x+width,width:width,height:height};this.updateView({value:this.props.scrollValue._value});},render:function render(){var _this=this;var variables=this.context.theme?this.context.theme['@@shoutem.theme/themeStyle'].variables:_platform2.default;var tabUnderlineStyle={position:'absolute',height:4,backgroundColor:variables.topTabBarActiveBorderColor,bottom:0};var dynamicTabUnderline={left:this.state._leftTabUnderline,width:this.state._widthTabUnderline};return _react2.default.createElement(View,{style:[styles.container,{backgroundColor:this.props.backgroundColor},this.props.style],onLayout:this.onContainerLayout,__source:{fileName:_jsxFileName,lineNumber:233}},_react2.default.createElement(ScrollView,{automaticallyAdjustContentInsets:false,ref:function ref(scrollView){_this._scrollView=scrollView;},horizontal:true,showsHorizontalScrollIndicator:false,showsVerticalScrollIndicator:false,directionalLockEnabled:true,onScroll:this.props.onScroll,bounces:false,scrollsToTop:false,__source:{fileName:_jsxFileName,lineNumber:241}},_react2.default.createElement(View,{style:[styles.tabs,{width:this.state._containerWidth},this.props.tabsContainerStyle],ref:'tabContainer',onLayout:this.onTabContainerLayout,__source:{fileName:_jsxFileName,lineNumber:254}},this.props.tabs.map(function(name,page){var isTabActive=_this.props.activeTab===page;var renderTab=_this.props.renderTab||_this.renderTab;return renderTab(name,page,isTabActive,_this.props.goToPage,_this.measureTab.bind(_this,page),_this.props.tabStyle[page],_this.props.activeTabStyle[page],_this.props.textStyle[page],_this.props.activeTextStyle[page],_this.props.tabHeaderStyle[page],variables.tabFontSize);}),_react2.default.createElement(Animated.View,{style:[tabUnderlineStyle,dynamicTabUnderline,this.props.underlineStyle],__source:{fileName:_jsxFileName,lineNumber:280}}))));},UNSAFE_componentWillReceiveProps:function UNSAFE_componentWillReceiveProps(nextProps){if(!(0,_lodash.isEqual)(this.props.tabs,nextProps.tabs)&&this.state._containerWidth){this.setState({_containerWidth:null});}},onTabContainerLayout:function onTabContainerLayout(e){this._tabContainerMeasurements=e.nativeEvent.layout;var width=this._tabContainerMeasurements.width;if(width<WINDOW_WIDTH){width=WINDOW_WIDTH;}this.setState({_containerWidth:width});this.updateView({value:this.props.scrollValue._value});},onContainerLayout:function onContainerLayout(e){this._containerMeasurements=e.nativeEvent.layout;this.updateView({value:this.props.scrollValue._value});}});var StyledTab=(0,_nativeBaseShoutemTheme.connectStyle)('NativeBase.ScrollableTab',{},_mapPropsToStyleNames2.default)(ScrollableTabBar);exports.ScrollableTab=StyledTab;var styles=StyleSheet.create({tab:{height:49,alignItems:'center',justifyContent:'center',paddingLeft:20,paddingRight:20},container:{height:50,borderWidth:1,borderTopWidth:0,borderLeftWidth:0,borderRightWidth:0,borderColor:'#ccc'},tabs:{flexDirection:'row',justifyContent:'space-around'}});","map":{"version":3,"sources":["../../../../src/basic/Tabs/ScrollableTabBar.js"],"names":["Button","require","View","Animated","StyleSheet","ScrollView","Platform","Dimensions","ReactNative","WINDOW_WIDTH","ScrollableTabBar","propTypes","goToPage","PropTypes","activeTab","tabs","backgroundColor","activeTextColor","inactiveTextColor","scrollOffset","style","ViewPropTypes","tabStyle","tabsContainerStyle","renderTab","underlineStyle","onScroll","contextTypes","theme","getDefaultProps","variable","tabFontSize","getInitialState","_leftTabUnderline","_widthTabUnderline","_containerWidth","componentDidMount","updateView","position","Math","offset","pageOffset","tabCount","lastTabPosition","necessarilyMeasurementsCompleted","isLastTab","updateTabPanel","containerWidth","tabWidth","nextTabMeasurements","nextTabWidth","tabOffset","absolutePageOffset","newScrollX","x","y","animated","rightBoundScroll","updateTabUnderline","lineLeft","lineRight","nextTabLeft","nextTabRight","newLineLeft","newLineRight","headerContent","name","textColor","isTabActive","fontWeight","onPressHandler","fontSize","measureTab","width","height","event","left","right","value","render","variables","tabUnderlineStyle","bottom","dynamicTabUnderline","styles","UNSAFE_componentWillReceiveProps","nextProps","onTabContainerLayout","e","onContainerLayout","StyledTab","mapPropsToStyleNames","ScrollableTab","tab","alignItems","justifyContent","paddingLeft","paddingRight","container","borderWidth","borderTopWidth","borderLeftWidth","borderRightWidth","borderColor","flexDirection"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport createReactClass from 'create-react-class';\nimport { isEqual } from 'lodash';\nimport { connectStyle, StyleProvider } from 'native-base-shoutem-theme';\nimport mapPropsToStyleNames from '../../utils/mapPropsToStyleNames';\nimport variable from './../../theme/variables/platform';\nimport { TabHeading } from '../TabHeading';\nimport { Text } from '../Text';\nimport { TabContainer } from '../TabContainer';\nimport { ViewPropTypes } from '../../utils';\nconst Button = require('./Button');\nconst ReactNative = require('react-native');\nconst {\n  View,\n  Animated,\n  StyleSheet,\n  ScrollView,\n  Platform,\n  Dimensions\n} = ReactNative;\n\nconst WINDOW_WIDTH = Dimensions.get('window').width;\n\nconst ScrollableTabBar = createReactClass({\n  propTypes: {\n    goToPage: PropTypes.func,\n    activeTab: PropTypes.number,\n    tabs: PropTypes.array,\n    backgroundColor: PropTypes.string,\n    activeTextColor: PropTypes.string,\n    inactiveTextColor: PropTypes.string,\n    scrollOffset: PropTypes.number,\n    style: ViewPropTypes.style,\n    tabStyle: ViewPropTypes.style,\n    tabsContainerStyle: ViewPropTypes.style,\n    renderTab: PropTypes.func,\n    underlineStyle: ViewPropTypes.style,\n    onScroll: PropTypes.func\n  },\n  contextTypes: {\n    theme: PropTypes.object\n  },\n\n  getDefaultProps() {\n    return {\n      scrollOffset: 52,\n      activeTextColor: 'navy',\n      inactiveTextColor: 'black',\n      backgroundColor: variable.tabDefaultBg,\n      style: {},\n      tabStyle: {},\n      tabsContainerStyle: {},\n      underlineStyle: {},\n      tabFontSize: variable.tabFontSize\n    };\n  },\n\n  getInitialState() {\n    this._tabsMeasurements = [];\n    return {\n      _leftTabUnderline: new Animated.Value(0),\n      _widthTabUnderline: new Animated.Value(0),\n      _containerWidth: null\n    };\n  },\n\n  componentDidMount() {\n    this.props.scrollValue.addListener(this.updateView);\n  },\n\n  updateView(offset) {\n    const position = Math.floor(offset.value);\n    const pageOffset = offset.value % 1;\n    const tabCount = this.props.tabs.length;\n    const lastTabPosition = tabCount - 1;\n\n    if (tabCount === 0 || offset.value < 0 || offset.value > lastTabPosition) {\n      return;\n    }\n\n    if (\n      this.necessarilyMeasurementsCompleted(\n        position,\n        position === lastTabPosition\n      )\n    ) {\n      this.updateTabPanel(position, pageOffset);\n      this.updateTabUnderline(position, pageOffset, tabCount);\n    }\n  },\n\n  necessarilyMeasurementsCompleted(position, isLastTab) {\n    return (\n      this._tabsMeasurements[position] &&\n      (isLastTab || this._tabsMeasurements[position + 1]) &&\n      this._tabContainerMeasurements &&\n      this._containerMeasurements\n    );\n  },\n\n  updateTabPanel(position, pageOffset) {\n    const containerWidth = this._containerMeasurements.width;\n    const tabWidth = this._tabsMeasurements[position].width;\n    const nextTabMeasurements = this._tabsMeasurements[position + 1];\n    const nextTabWidth =\n      (nextTabMeasurements && nextTabMeasurements.width) || 0;\n    const tabOffset = this._tabsMeasurements[position].left;\n    const absolutePageOffset = pageOffset * tabWidth;\n    let newScrollX = tabOffset + absolutePageOffset;\n\n    // center tab and smooth tab change (for when tabWidth changes a lot between two tabs)\n    newScrollX -=\n      (containerWidth -\n        (1 - pageOffset) * tabWidth -\n        pageOffset * nextTabWidth) /\n      2;\n    newScrollX = newScrollX >= 0 ? newScrollX : 0;\n\n    if (Platform.OS === 'android') {\n      this._scrollView.scrollTo({ x: newScrollX, y: 0, animated: false });\n    } else {\n      const rightBoundScroll =\n        this._tabContainerMeasurements.width -\n        this._containerMeasurements.width;\n      newScrollX =\n        newScrollX > rightBoundScroll ? rightBoundScroll : newScrollX;\n      this._scrollView.scrollTo({ x: newScrollX, y: 0, animated: false });\n    }\n  },\n\n  updateTabUnderline(position, pageOffset, tabCount) {\n    const lineLeft = this._tabsMeasurements[position].left;\n    const lineRight = this._tabsMeasurements[position].right;\n\n    if (position < tabCount - 1) {\n      const nextTabLeft = this._tabsMeasurements[position + 1].left;\n      const nextTabRight = this._tabsMeasurements[position + 1].right;\n\n      const newLineLeft =\n        pageOffset * nextTabLeft + (1 - pageOffset) * lineLeft;\n      const newLineRight =\n        pageOffset * nextTabRight + (1 - pageOffset) * lineRight;\n\n      this.state._leftTabUnderline.setValue(newLineLeft);\n      this.state._widthTabUnderline.setValue(newLineRight - newLineLeft);\n    } else {\n      this.state._leftTabUnderline.setValue(lineLeft);\n      this.state._widthTabUnderline.setValue(lineRight - lineLeft);\n    }\n  },\n\n  renderTab(\n    name,\n    page,\n    isTabActive,\n    onPressHandler,\n    onLayoutHandler,\n    tabStyle,\n    activeTabStyle,\n    textStyle,\n    activeTextStyle,\n    tabHeaderStyle,\n    tabFontSize\n  ) {\n    const headerContent =\n      typeof name !== 'string' ? name.props.children : undefined;\n    const { activeTextColor, inactiveTextColor } = this.props;\n    const textColor = isTabActive ? activeTextColor : inactiveTextColor;\n    const fontWeight = isTabActive ? 'bold' : 'normal';\n\n    if (typeof name === 'string') {\n      return (\n        <Button\n          key={`${name}_${page}`}\n          onPress={() => onPressHandler(page)}\n          onLayout={onLayoutHandler}\n        >\n          <TabHeading\n            scrollable\n            style={isTabActive ? activeTabStyle : tabStyle}\n            active={isTabActive}\n          >\n            <Text\n              style={[\n                isTabActive ? activeTextStyle : textStyle,\n                { fontSize: tabFontSize }\n              ]}\n            >\n              {name}\n            </Text>\n          </TabHeading>\n        </Button>\n      );\n    }\n    return (\n      <Button\n        key={`${name}_${page}`}\n        onPress={() => onPressHandler(page)}\n        onLayout={onLayoutHandler}\n      >\n        <TabHeading scrollable style={tabHeaderStyle} active={isTabActive}>\n          {headerContent}\n        </TabHeading>\n      </Button>\n    );\n    \n  },\n\n  measureTab(page, event) {\n    const { x, width, height } = event.nativeEvent.layout;\n    this._tabsMeasurements[page] = { left: x, right: x + width, width, height };\n    this.updateView({ value: this.props.scrollValue._value });\n  },\n\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n    const tabUnderlineStyle = {\n      position: 'absolute',\n      height: 4,\n      backgroundColor: variables.topTabBarActiveBorderColor,\n      bottom: 0\n    };\n\n    const dynamicTabUnderline = {\n      left: this.state._leftTabUnderline,\n      width: this.state._widthTabUnderline\n    };\n\n    return (\n      <View\n        style={[\n          styles.container,\n          { backgroundColor: this.props.backgroundColor },\n          this.props.style\n        ]}\n        onLayout={this.onContainerLayout}\n      >\n        <ScrollView\n          automaticallyAdjustContentInsets={false}\n          ref={scrollView => {\n            this._scrollView = scrollView;\n          }}\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          showsVerticalScrollIndicator={false}\n          directionalLockEnabled\n          onScroll={this.props.onScroll}\n          bounces={false}\n          scrollsToTop={false}\n        >\n          <View\n            style={[\n              styles.tabs,\n              { width: this.state._containerWidth },\n              this.props.tabsContainerStyle\n            ]}\n            ref={'tabContainer'}\n            onLayout={this.onTabContainerLayout}\n          >\n            {this.props.tabs.map((name, page) => {\n              const isTabActive = this.props.activeTab === page;\n              const renderTab = this.props.renderTab || this.renderTab;\n              return renderTab(\n                name,\n                page,\n                isTabActive,\n                this.props.goToPage,\n                this.measureTab.bind(this, page),\n                this.props.tabStyle[page],\n                this.props.activeTabStyle[page],\n                this.props.textStyle[page],\n                this.props.activeTextStyle[page],\n                this.props.tabHeaderStyle[page],\n                variables.tabFontSize\n              );\n            })}\n            <Animated.View\n              style={[\n                tabUnderlineStyle,\n                dynamicTabUnderline,\n                this.props.underlineStyle\n              ]}\n            />\n          </View>\n        </ScrollView>\n      </View>\n    );\n  },\n\n  UNSAFE_componentWillReceiveProps(nextProps) {\n    // If the tabs change, force the width of the tabs container to be recalculated\n    if (\n      !isEqual(this.props.tabs, nextProps.tabs) &&\n      this.state._containerWidth\n    ) {\n      this.setState({ _containerWidth: null });\n    }\n  },\n\n  onTabContainerLayout(e) {\n    this._tabContainerMeasurements = e.nativeEvent.layout;\n    let width = this._tabContainerMeasurements.width;\n    if (width < WINDOW_WIDTH) {\n      width = WINDOW_WIDTH;\n    }\n    this.setState({ _containerWidth: width });\n    this.updateView({ value: this.props.scrollValue._value });\n  },\n\n  onContainerLayout(e) {\n    this._containerMeasurements = e.nativeEvent.layout;\n    this.updateView({ value: this.props.scrollValue._value });\n  }\n});\n\n// module.exports = ScrollableTabBar;\nconst StyledTab = connectStyle(\n  'NativeBase.ScrollableTab',\n  {},\n  mapPropsToStyleNames\n)(ScrollableTabBar);\nexport { StyledTab as ScrollableTab };\nconst styles = StyleSheet.create({\n  tab: {\n    height: 49,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingLeft: 20,\n    paddingRight: 20\n  },\n  container: {\n    height: 50,\n    borderWidth: 1,\n    borderTopWidth: 0,\n    borderLeftWidth: 0,\n    borderRightWidth: 0,\n    borderColor: '#ccc'\n  },\n  tabs: {\n    flexDirection: 'row',\n    justifyContent: 'space-around'\n  }\n});\n"]},"metadata":{},"sourceType":"script"}