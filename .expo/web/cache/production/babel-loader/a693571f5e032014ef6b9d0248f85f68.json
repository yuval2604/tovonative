{"ast":null,"code":"import _regeneratorRuntime from\"@babel/runtime/regenerator\";import _objectSpread from\"@babel/runtime/helpers/objectSpread\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _jsxFileName=\"/Users/brentvatne/coding/react-navigation-stack/src/views/Transitioner.tsx\";import*as React from'react';import Animated from\"react-native-web/dist/exports/Animated\";import Easing from\"react-native-web/dist/exports/Easing\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import View from\"react-native-web/dist/exports/View\";import NavigationScenesReducer from\"./ScenesReducer\";var DefaultTransitionSpec={duration:250,easing:Easing.inOut(Easing.ease),timing:Animated.timing};var Transitioner=function(_React$Component){_inherits(Transitioner,_React$Component);function Transitioner(_props){var _this;_classCallCheck(this,Transitioner);_this=_possibleConstructorReturn(this,_getPrototypeOf(Transitioner).call(this,_props));_this.computeScenes=function(props,nextProps){var nextScenes=NavigationScenesReducer(_this.state.scenes,nextProps.navigation.state,props.navigation.state,nextProps.descriptors);if(!nextProps.navigation.state.isTransitioning){nextScenes=filterStale(nextScenes);}if(nextProps.screenProps!==_this.props.screenProps){_this.setState({nextScenes:nextScenes});}if(nextScenes===_this.state.scenes){return;}return nextScenes;};_this.handleLayout=function(event){var _event$nativeEvent$la=event.nativeEvent.layout,height=_event$nativeEvent$la.height,width=_event$nativeEvent$la.width;if(_this.state.layout.initWidth===width&&_this.state.layout.initHeight===height){return;}var layout=_objectSpread({},_this.state.layout,{initHeight:height,initWidth:width,isMeasured:true});layout.height.setValue(height);layout.width.setValue(width);var nextState=_objectSpread({},_this.state,{layout:layout});_this.transitionProps=buildTransitionProps(_this.props,nextState);_this.setState(nextState);};_this.handleTransitionEnd=function(){if(!_this.isComponentMounted){return;}var prevTransitionProps=_this.prevTransitionProps;_this.prevTransitionProps=undefined;var scenes=filterStale(_this.state.scenes);var nextState=_objectSpread({},_this.state,{scenes:scenes});_this.transitionProps=buildTransitionProps(_this.props,nextState);_this.setState(nextState,function _callee(){var result,prevProps;return _regeneratorRuntime.async(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!_this.props.onTransitionEnd){_context.next=5;break;}result=_this.props.onTransitionEnd(_this.transitionProps,prevTransitionProps);if(!(result instanceof Promise)){_context.next=5;break;}_context.next=5;return _regeneratorRuntime.awrap(result);case 5:if(_this.queuedTransition){prevProps=_this.queuedTransition.prevProps;_this.queuedTransition=null;_this.startTransition(prevProps,_this.props);}else{_this.isTransitionRunning=false;}case 6:case\"end\":return _context.stop();}}});});};var _layout={height:new Animated.Value(0),initHeight:0,initWidth:0,isMeasured:false,width:new Animated.Value(0)};var position=new Animated.Value(_this.props.navigation.state.index);_this.positionListener=position.addListener(function(){});_this.state={layout:_layout,position:position,scenes:NavigationScenesReducer([],_this.props.navigation.state,null,_this.props.descriptors)};_this.prevTransitionProps=undefined;_this.transitionProps=buildTransitionProps(_props,_this.state);_this.isComponentMounted=false;_this.isTransitionRunning=false;_this.queuedTransition=null;return _this;}_createClass(Transitioner,[{key:\"componentDidMount\",value:function componentDidMount(){this.isComponentMounted=true;}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.isComponentMounted=false;this.positionListener&&this.state.position.removeListener(this.positionListener);}},{key:\"UNSAFE_componentWillReceiveProps\",value:function UNSAFE_componentWillReceiveProps(nextProps){if(this.isTransitionRunning){if(!this.queuedTransition){this.queuedTransition={prevProps:this.props};}return;}this.startTransition(this.props,nextProps);}},{key:\"startTransition\",value:function startTransition(props,nextProps){var _this2=this;var indexHasChanged=props.navigation.state.index!==nextProps.navigation.state.index;var nextScenes=this.computeScenes(props,nextProps);if(!nextScenes){this.prevTransitionProps=this.transitionProps;this.state.position.setValue(props.navigation.state.index);this.handleTransitionEnd();return;}var nextState=_objectSpread({},this.state,{scenes:nextScenes});var position=nextState.position;var toValue=nextProps.navigation.state.index;this.prevTransitionProps=this.transitionProps;this.transitionProps=buildTransitionProps(nextProps,nextState);var isTransitioning=this.transitionProps.navigation.state.isTransitioning;if(!isTransitioning||!indexHasChanged){this.setState(nextState,function _callee2(){var result;return _regeneratorRuntime.async(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:if(!nextProps.onTransitionStart){_context2.next=5;break;}result=nextProps.onTransitionStart(_this2.transitionProps,_this2.prevTransitionProps);if(!(result instanceof Promise)){_context2.next=5;break;}_context2.next=5;return _regeneratorRuntime.awrap(result);case 5:indexHasChanged&&position.setValue(toValue);_this2.handleTransitionEnd();case 7:case\"end\":return _context2.stop();}}});});}else if(isTransitioning){this.isTransitionRunning=true;this.setState(nextState,function _callee3(){var result,transitionUserSpec,transitionSpec,timing,positionHasChanged;return _regeneratorRuntime.async(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(!nextProps.onTransitionStart){_context3.next=5;break;}result=nextProps.onTransitionStart(_this2.transitionProps,_this2.prevTransitionProps);if(!(result instanceof Promise)){_context3.next=5;break;}_context3.next=5;return _regeneratorRuntime.awrap(result);case 5:transitionUserSpec=nextProps.configureTransition?nextProps.configureTransition(_this2.transitionProps,_this2.prevTransitionProps):null;transitionSpec=_objectSpread({},DefaultTransitionSpec,transitionUserSpec);timing=transitionSpec.timing;delete transitionSpec.timing;positionHasChanged=position.__getValue()!==toValue;if(indexHasChanged&&positionHasChanged){timing(position,_objectSpread({},transitionSpec,{toValue:nextProps.navigation.state.index})).start(function(){requestAnimationFrame(_this2.handleTransitionEnd);});}else{_this2.handleTransitionEnd();}case 11:case\"end\":return _context3.stop();}}});});}}},{key:\"render\",value:function render(){return React.createElement(View,{onLayout:this.handleLayout,style:styles.main,__source:{fileName:_jsxFileName,lineNumber:267}},this.props.render(this.transitionProps,this.prevTransitionProps));}}]);return Transitioner;}(React.Component);function buildTransitionProps(props,state){var navigation=props.navigation;var layout=state.layout,position=state.position,scenes=state.scenes;var scene=scenes.find(isSceneActive);if(!scene){throw new Error('Could not find active scene');}return{layout:layout,navigation:navigation,position:position,scenes:scenes,scene:scene,index:scene.index};}function isSceneNotStale(scene){return!scene.isStale;}function filterStale(scenes){var filtered=scenes.filter(isSceneNotStale);if(filtered.length===scenes.length){return scenes;}return filtered;}function isSceneActive(scene){return scene.isActive;}var styles=StyleSheet.create({main:{flex:1}});export default Transitioner;","map":{"version":3,"sources":["Transitioner.tsx"],"names":["DefaultTransitionSpec","duration","easing","Easing","timing","Animated","Transitioner","React","Component","layout","height","initHeight","initWidth","isMeasured","width","position","scenes","NavigationScenesReducer","buildTransitionProps","nextProps","prevProps","nextScenes","props","filterStale","indexHasChanged","nextState","toValue","isTransitioning","result","transitionUserSpec","transitionSpec","positionHasChanged","requestAnimationFrame","styles","event","prevTransitionProps","navigation","state","scene","index","filtered","StyleSheet","main","flex"],"mappings":"4iBAAA,MAAO,GAAP,CAAA,KAAA,KAAA,OAAA,C,4OASA,MAAA,CAAA,uBAAA,uBAyCA,GAAMA,CAAAA,qBAAqB,CAAG,CAC5BC,QAAQ,CADoB,GAAA,CAE5BC,MAAM,CAAEC,MAAM,CAANA,KAAAA,CAAaA,MAAM,CAFC,IAEpBA,CAFoB,CAG5BC,MAAM,CAAEC,QAAQ,CAHlB,MAA8B,CAA9B,CAMMC,GAAAA,CAAAA,Y,qEAUJ,QAAA,CAAA,YAAA,CAAA,MAAA,CAA0B,CAAA,GAAA,CAAA,KAAA,CAAA,eAAA,CAAA,IAAA,CAAA,YAAA,CAAA,CACxB,KAAA,CAAA,0BAAA,CAAA,IAAA,CAAA,eAAA,CAAA,YAAA,CAAA,CAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CAAA,CAAA,CADwB,KAAA,CAAA,aAAA,CAgEF,SAAA,KAAA,CAAA,SAAA,CAAoC,CAC1D,GAAIe,CAAAA,UAAU,CAAGJ,uBAAuB,CACtC,KAAA,CAAA,KAAA,CADsC,MAAA,CAEtCE,SAAS,CAATA,UAAAA,CAFsC,KAAA,CAGtCG,KAAK,CAALA,UAAAA,CAHsC,KAAA,CAItCH,SAAS,CAJX,WAAwC,CAAxC,CAOA,GAAI,CAACA,SAAS,CAATA,UAAAA,CAAAA,KAAAA,CAAL,eAAA,CAAiD,CAC/CE,UAAU,CAAGE,WAAW,CAAxBF,UAAwB,CAAxBA,CAKF,IAAIF,SAAS,CAATA,WAAAA,GAA0B,KAAA,CAAA,KAAA,CAA9B,WAAA,CAAsD,CACpD,KAAA,CAAA,QAAA,CAAc,CAAEE,UAAU,CAA1B,UAAc,CAAd,EAGF,IAAIA,UAAU,GAAK,KAAA,CAAA,KAAA,CAAnB,MAAA,CAAsC,CACpC,OAGF,OAAA,CAAA,UAAA,CAtFwB,CAAA,CAAA,KAAA,CAAA,YAAA,CA8MH,SAAA,KAAA,CAA8B,CAAA,GAAA,CAAA,qBAAA,CACzBa,KAAK,CAALA,WAAAA,CADyB,MAAA,CAC3CxB,MAD2C,CAAA,qBAAA,CAAA,MAAA,CACnCI,KADmC,CAAA,qBAAA,CAAA,KAAA,CAEnD,GACE,KAAA,CAAA,KAAA,CAAA,MAAA,CAAA,SAAA,GAAA,KAAA,EACA,KAAA,CAAA,KAAA,CAAA,MAAA,CAAA,UAAA,GAFF,MAAA,CAGE,CACA,OAEF,IAAML,CAAAA,MAA0B,CAAA,aAAA,CAAA,EAAA,CAC3B,KAAA,CAAA,KAAA,CAD2B,MAAA,CAAA,CAE9BE,UAAU,CAFoB,MAAA,CAG9BC,SAAS,CAHqB,KAAA,CAI9BC,UAAU,CAJZ,IAAgC,CAAA,CAAhC,CAOAJ,MAAM,CAANA,MAAAA,CAAAA,QAAAA,CAAAA,MAAAA,EACAA,MAAM,CAANA,KAAAA,CAAAA,QAAAA,CAAAA,KAAAA,EAEA,GAAMgB,CAAAA,SAAS,CAAA,aAAA,CAAA,EAAA,CACV,KAAA,CADU,KAAA,CAAA,CAEbhB,MAAM,CAFR,MAAe,CAAA,CAAf,CAKA,KAAA,CAAA,eAAA,CAAuBS,oBAAoB,CAAC,KAAA,CAAD,KAAA,CAA3C,SAA2C,CAA3C,CACA,KAAA,CAAA,QAAA,CAAA,SAAA,EAtOwB,CAAA,CAAA,KAAA,CAAA,mBAAA,CAyOI,UAAM,CAClC,GAAI,CAAC,KAAA,CAAL,kBAAA,CAA8B,CAC5B,OAEF,IAAMiB,CAAAA,mBAAmB,CAAG,KAAA,CAA5B,mBAAA,CACA,KAAA,CAAA,mBAAA,CAAA,SAAA,CAEA,GAAMnB,CAAAA,MAAM,CAAGO,WAAW,CAAC,KAAA,CAAA,KAAA,CAA3B,MAA0B,CAA1B,CAEA,GAAME,CAAAA,SAAS,CAAA,aAAA,CAAA,EAAA,CACV,KAAA,CADU,KAAA,CAAA,CAEbT,MAAM,CAFR,MAAe,CAAA,CAAf,CAKA,KAAA,CAAA,eAAA,CAAuBE,oBAAoB,CAAC,KAAA,CAAD,KAAA,CAA3C,SAA2C,CAA3C,CAEA,KAAA,CAAA,QAAA,CAAA,SAAA,CAAyB,QAAA,CAAA,OAAA,EAAA,CAAA,GAAA,CAAA,MAAA,CAAA,SAAA,CAAA,MAAA,CAAA,mBAAA,CAAA,KAAA,CAAA,QAAA,CAAA,QAAA,CAAA,QAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,OAAA,QAAA,CAAA,IAAA,CAAA,QAAA,CAAA,IAAA,EAAA,IAAA,EAAA,CAAA,GAAA,CACnB,KAAA,CAAA,KAAA,CADmB,eAAA,CAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAEfU,CAAAA,MAFe,CAEN,KAAA,CAAA,KAAA,CAAA,eAAA,CACb,KAAA,CADa,eAAA,CAFM,mBAEN,CAATA,CAFe,GAAA,EAOjBA,MAAM,WAPW,CAAA,OAAA,CAAA,CAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,QAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,mBAAA,CAAA,KAAA,CAAA,MAAA,CAAA,CAAA,IAAA,EAAA,CAYvB,GAAI,KAAA,CAAJ,gBAAA,CAA2B,CACnBR,SADmB,CACL,KAAA,CADK,gBACL,CADK,SACnBA,CACN,KAAA,CAAA,gBAAA,CAAA,IAAA,CACA,KAAA,CAAA,eAAA,CAAA,SAAA,CAAgC,KAAA,CAAhC,KAAA,EAHF,CAAA,IAIO,CACL,KAAA,CAAA,mBAAA,CAAA,KAAA,CAjBqB,KAAA,EAAA,CAAA,IAAA,KAAA,CAAA,MAAA,CAAA,QAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAzB,CAAA,EAzPwB,CAAA,CAKxB,GAAMX,CAAAA,OAA0B,CAAG,CACjCC,MAAM,CAAE,GAAIL,CAAAA,QAAQ,CAAZ,KAAA,CADyB,CACzB,CADyB,CAEjCM,UAAU,CAFuB,CAAA,CAGjCC,SAAS,CAHwB,CAAA,CAIjCC,UAAU,CAJuB,KAAA,CAKjCC,KAAK,CAAE,GAAIT,CAAAA,QAAQ,CAAZ,KAAA,CALT,CAKS,CAL0B,CAAnC,CAQA,GAAMU,CAAAA,QAAQ,CAAG,GAAIV,CAAAA,QAAQ,CAAZ,KAAA,CAAmB,KAAA,CAAA,KAAA,CAAA,UAAA,CAAA,KAAA,CAApC,KAAiB,CAAjB,CACA,KAAA,CAAA,gBAAA,CAAwBU,QAAQ,CAARA,WAAAA,CAAqB,UAAqB,CAAlE,CAAwBA,CAAxB,CAUA,KAAA,CAAA,KAAA,CAAa,CACXN,MAAM,CADK,OAAA,CAEXM,QAAQ,CAFG,QAAA,CAGXC,MAAM,CAAEC,uBAAuB,CAAA,EAAA,CAE7B,KAAA,CAAA,KAAA,CAAA,UAAA,CAF6B,KAAA,CAAA,IAAA,CAI7B,KAAA,CAAA,KAAA,CAPJ,WAGiC,CAHpB,CAAb,CAWA,KAAA,CAAA,mBAAA,CAAA,SAAA,CACA,KAAA,CAAA,eAAA,CAAuBC,oBAAoB,CAAA,MAAA,CAAQ,KAAA,CAAnD,KAA2C,CAA3C,CAEA,KAAA,CAAA,kBAAA,CAAA,KAAA,CACA,KAAA,CAAA,mBAAA,CAAA,KAAA,CACA,KAAA,CAAA,gBAAA,CAAA,IAAA,CAxCwB,MAAA,CAAA,KAAA,C,uFA2CN,CAClB,KAAA,kBAAA,CAAA,IAAA,C,oEAGqB,CACrB,KAAA,kBAAA,CAAA,KAAA,CACA,KAAA,gBAAA,EACE,KAAA,KAAA,CAAA,QAAA,CAAA,cAAA,CAAmC,KADrC,gBACE,CADF,C,2FAI+BC,S,CAAkB,CACjD,GAAI,KAAJ,mBAAA,CAA8B,CAC5B,GAAI,CAAC,KAAL,gBAAA,CAA4B,CAC1B,KAAA,gBAAA,CAAwB,CAAEC,SAAS,CAAE,KAArC,KAAwB,CAAxB,CAEF,QAGF,MAAA,eAAA,CAAqB,KAArB,KAAA,CAAA,SAAA,E,yDA4BsBE,K,CAAcH,S,CAAkB,CAAA,GAAA,CAAA,MAAA,CAAA,IAAA,CACtD,GAAMK,CAAAA,eAAe,CACnBF,KAAK,CAALA,UAAAA,CAAAA,KAAAA,CAAAA,KAAAA,GAAiCH,SAAS,CAATA,UAAAA,CAAAA,KAAAA,CADnC,KAAA,CAEA,GAAIE,CAAAA,UAAU,CAAG,KAAA,aAAA,CAAA,KAAA,CAAjB,SAAiB,CAAjB,CAEA,GAAI,CAAJ,UAAA,CAAiB,CAGf,KAAA,mBAAA,CAA2B,KAA3B,eAAA,CAOA,KAAA,KAAA,CAAA,QAAA,CAAA,QAAA,CAA6BC,KAAK,CAALA,UAAAA,CAAAA,KAAAA,CAA7B,KAAA,EAEA,KAAA,mBAAA,GACA,OAGF,IAAMG,CAAAA,SAAS,CAAA,aAAA,CAAA,EAAA,CACV,KADU,KAAA,CAAA,CAEbT,MAAM,CAFR,UAAe,CAAA,CAAf,CArBsD,GA2B9CD,CAAAA,QA3B8C,CA2BjCU,SA3BiC,CAAA,QAAA,CA8BtD,GAAMC,CAAAA,OAAO,CAAGP,SAAS,CAATA,UAAAA,CAAAA,KAAAA,CAAhB,KAAA,CAGA,KAAA,mBAAA,CAA2B,KAA3B,eAAA,CACA,KAAA,eAAA,CAAuBD,oBAAoB,CAAA,SAAA,CAA3C,SAA2C,CAA3C,CAlCsD,GAmChDS,CAAAA,eAnCgD,CAmC5B,KAAA,eAAA,CAAA,UAAA,CAnC4B,KAmC5B,CAnC4B,eAAA,CAyCtD,GAAI,CAAA,eAAA,EAAoB,CAAxB,eAAA,CAA0C,CACxC,KAAA,QAAA,CAAA,SAAA,CAAyB,QAAA,CAAA,QAAA,EAAA,CAAA,GAAA,CAAA,MAAA,CAAA,MAAA,CAAA,mBAAA,CAAA,KAAA,CAAA,QAAA,CAAA,SAAA,CAAA,SAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,OAAA,SAAA,CAAA,IAAA,CAAA,SAAA,CAAA,IAAA,EAAA,IAAA,EAAA,CAAA,GAAA,CACnBR,SAAS,CADU,iBAAA,CAAA,CAAA,SAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAEfS,CAAAA,MAFe,CAENT,SAAS,CAATA,iBAAAA,CACb,MAAI,CADSA,eAAAA,CAEb,MAAI,CAJe,mBAENA,CAATS,CAFe,GAAA,EAMjBA,MAAM,WANW,CAAA,OAAA,CAAA,CAAA,CAAA,SAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,SAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,mBAAA,CAAA,KAAA,CAAA,MAAA,CAAA,CAAA,IAAA,EAAA,CAYvBJ,eAAe,EAAIT,QAAQ,CAARA,QAAAA,CAAnBS,OAAmBT,CAAnBS,CAEA,MAAI,CAAJ,mBAAA,GAduB,IAAA,EAAA,CAAA,IAAA,KAAA,CAAA,MAAA,CAAA,SAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAzB,CAAA,EADF,CAAA,IAiBO,IAAA,eAAA,CAAqB,CAC1B,KAAA,mBAAA,CAAA,IAAA,CACA,KAAA,QAAA,CAAA,SAAA,CAAyB,QAAA,CAAA,QAAA,EAAA,CAAA,GAAA,CAAA,MAAA,CAAA,kBAAA,CAAA,cAAA,CAAA,MAAA,CAAA,kBAAA,CAAA,MAAA,CAAA,mBAAA,CAAA,KAAA,CAAA,QAAA,CAAA,SAAA,CAAA,SAAA,CAAA,CAAA,MAAA,CAAA,CAAA,CAAA,OAAA,SAAA,CAAA,IAAA,CAAA,SAAA,CAAA,IAAA,EAAA,IAAA,EAAA,CAAA,GAAA,CACnBL,SAAS,CADU,iBAAA,CAAA,CAAA,SAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAEfS,CAAAA,MAFe,CAENT,SAAS,CAATA,iBAAAA,CACb,MAAI,CADSA,eAAAA,CAEb,MAAI,CAJe,mBAENA,CAATS,CAFe,GAAA,EAQjBA,MAAM,WARW,CAAA,OAAA,CAAA,CAAA,CAAA,SAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,SAAA,CAAA,IAAA,CAAA,CAAA,CAAA,MAAA,CAAA,mBAAA,CAAA,KAAA,CAAA,MAAA,CAAA,CAAA,IAAA,EAAA,CAcjBC,kBAdiB,CAcIV,SAAS,CAATA,mBAAAA,CACvBA,SAAS,CAATA,mBAAAA,CACE,MAAI,CADNA,eAAAA,CAEE,MAAI,CAHiBA,mBACvBA,CADuBA,CAdJ,IAcjBU,CAOAC,cArBiB,CAAA,aAAA,CAAA,EAAA,CAAA,qBAAA,CAAA,kBAAA,CAqBjBA,CAKE1B,MA1Be,CA0BJ0B,cA1BI,CAAA,MA0Bf1B,CACR,MAAO0B,CAAAA,cAAc,CAArB,MAAA,CAIMC,kBA/BiB,CA+BIhB,QAAQ,CAARA,UAAAA,KA/BJ,OA+BjBgB,CACN,GAAIP,eAAe,EAAnB,kBAAA,CAA2C,CACzCpB,MAAM,CAAA,QAAA,CAAA,aAAA,CAAA,EAAA,CAAA,cAAA,CAAA,CAEJsB,OAAO,CAAEP,SAAS,CAATA,UAAAA,CAAAA,KAAAA,CAFXf,KAAM,CAAA,CAAA,CAANA,CAAAA,KAAAA,CAGS,UAAM,CAIb4B,qBAAqB,CAAC,MAAI,CAA1BA,mBAAqB,CAArBA,CAPF5B,CAAAA,EADF,CAAA,IAUO,CACL,MAAI,CAAJ,mBAAA,GA3CqB,KAAA,GAAA,CAAA,IAAA,KAAA,CAAA,MAAA,CAAA,SAAA,CAAA,IAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAzB,CAAA,EA+CH,C,wCAEQ,CACP,MACE,CAAA,KAAA,CAAA,aAAA,CAAA,IAAA,CAAA,CAAM,QAAQ,CAAE,KAAhB,YAAA,CAAmC,KAAK,CAAE6B,MAAM,CAAhD,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CAAA,GAAA,CAAA,CAAA,CACG,KAAA,KAAA,CAAA,MAAA,CAAkB,KAAlB,eAAA,CAAwC,KAF7C,mBAEK,CADH,CADF,C,2BAjNuB1B,KAAK,CAACC,S,CAA3BF,CA0RN,QAAA,CAAA,oBAAA,CAAA,KAAA,CAAA,KAAA,CAA2E,CAAA,GACjE8B,CAAAA,UADiE,CAClDd,KADkD,CAAA,UAAA,CAAA,GAGjEb,CAAAA,MAHiE,CAGpC4B,KAHoC,CAAA,MAAA,CAGzDtB,QAHyD,CAGpCsB,KAHoC,CAAA,QAAA,CAG/CrB,MAH+C,CAGpCqB,KAHoC,CAAA,MAAA,CAKzE,GAAMC,CAAAA,KAAK,CAAGtB,MAAM,CAANA,IAAAA,CAAd,aAAcA,CAAd,CAEA,GAAI,CAAJ,KAAA,CAAY,CACV,KAAM,IAAA,CAAA,KAAA,CAAN,6BAAM,CAAN,CAGF,OAAO,CACLP,MAAM,CADD,MAAA,CAEL2B,UAAU,CAFL,UAAA,CAGLrB,QAAQ,CAHH,QAAA,CAILC,MAAM,CAJD,MAAA,CAKLsB,KAAK,CALA,KAAA,CAMLC,KAAK,CAAED,KAAK,CANd,KAAO,CAAP,CAUF,SAAA,CAAA,eAAA,CAAA,KAAA,CAAuC,CACrC,MAAO,CAACA,KAAK,CAAb,OAAA,CAGF,SAAA,CAAA,WAAA,CAAA,MAAA,CAAsC,CACpC,GAAME,CAAAA,QAAQ,CAAGxB,MAAM,CAANA,MAAAA,CAAjB,eAAiBA,CAAjB,CACA,GAAIwB,QAAQ,CAARA,MAAAA,GAAoBxB,MAAM,CAA9B,MAAA,CAAuC,CACrC,MAAA,CAAA,MAAA,CAEF,OAAA,CAAA,QAAA,CAGF,SAAA,CAAA,aAAA,CAAA,KAAA,CAAqC,CACnC,MAAOsB,CAAAA,KAAK,CAAZ,QAAA,CAGF,IAAML,CAAAA,MAAM,CAAGQ,UAAU,CAAVA,MAAAA,CAAkB,CAC/BC,IAAI,CAAE,CACJC,IAAI,CAFR,CACQ,CADyB,CAAlBF,CAAf,CAMA,cAAA,CAAA,YAAA","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  StyleSheet,\n  View,\n  LayoutChangeEvent,\n} from 'react-native';\n\nimport NavigationScenesReducer from './ScenesReducer';\nimport {\n  NavigationProp,\n  Scene,\n  SceneDescriptor,\n  TransitionerLayout,\n  TransitionProps,\n} from '../types';\n\ntype TransitionSpec = {};\n\ntype Props = {\n  render: (\n    current: TransitionProps,\n    previous?: TransitionProps\n  ) => React.ReactNode;\n  configureTransition?: (\n    current: TransitionProps,\n    previous?: TransitionProps\n  ) => TransitionSpec;\n  onTransitionStart?: (\n    current: TransitionProps,\n    previous?: TransitionProps\n  ) => void | Promise<any>;\n  onTransitionEnd?: (\n    current: TransitionProps,\n    previous?: TransitionProps\n  ) => void | Promise<any>;\n  navigation: NavigationProp;\n  descriptors: { [key: string]: SceneDescriptor };\n  screenProps?: unknown;\n};\n\ntype State = {\n  layout: TransitionerLayout;\n  position: Animated.Value;\n  scenes: Scene[];\n  nextScenes?: Scene[];\n};\n\n// Used for all animations unless overriden\nconst DefaultTransitionSpec = {\n  duration: 250,\n  easing: Easing.inOut(Easing.ease),\n  timing: Animated.timing,\n};\n\nclass Transitioner extends React.Component<Props, State> {\n  private positionListener: string;\n\n  private prevTransitionProps: TransitionProps | undefined;\n  private transitionProps: TransitionProps;\n\n  private isComponentMounted: boolean;\n  private isTransitionRunning: boolean;\n  private queuedTransition: { prevProps: Props } | null;\n\n  constructor(props: Props) {\n    super(props);\n\n    // The initial layout isn't measured. Measured layout will be only available\n    // when the component is mounted.\n    const layout: TransitionerLayout = {\n      height: new Animated.Value(0),\n      initHeight: 0,\n      initWidth: 0,\n      isMeasured: false,\n      width: new Animated.Value(0),\n    };\n\n    const position = new Animated.Value(this.props.navigation.state.index);\n    this.positionListener = position.addListener((/* { value } */) => {\n      // This should work until we detach position from a view! so we have to be\n      // careful to not ever detach it, thus the gymnastics in _getPosition in\n      // StackViewLayout\n      // This should log each frame when releasing the gesture or when pressing\n      // the back button! If not, something has gone wrong with the animated\n      // value subscription\n      // console.log(value);\n    });\n\n    this.state = {\n      layout,\n      position,\n      scenes: NavigationScenesReducer(\n        [],\n        this.props.navigation.state,\n        null,\n        this.props.descriptors\n      ),\n    };\n\n    this.prevTransitionProps = undefined;\n    this.transitionProps = buildTransitionProps(props, this.state);\n\n    this.isComponentMounted = false;\n    this.isTransitionRunning = false;\n    this.queuedTransition = null;\n  }\n\n  componentDidMount() {\n    this.isComponentMounted = true;\n  }\n\n  componentWillUnmount() {\n    this.isComponentMounted = false;\n    this.positionListener &&\n      this.state.position.removeListener(this.positionListener);\n  }\n\n  UNSAFE_componentWillReceiveProps(nextProps: Props) {\n    if (this.isTransitionRunning) {\n      if (!this.queuedTransition) {\n        this.queuedTransition = { prevProps: this.props };\n      }\n      return;\n    }\n\n    this.startTransition(this.props, nextProps);\n  }\n\n  private computeScenes = (props: Props, nextProps: Props) => {\n    let nextScenes = NavigationScenesReducer(\n      this.state.scenes,\n      nextProps.navigation.state,\n      props.navigation.state,\n      nextProps.descriptors\n    );\n\n    if (!nextProps.navigation.state.isTransitioning) {\n      nextScenes = filterStale(nextScenes);\n    }\n\n    // Update nextScenes when we change screenProps\n    // This is a workaround for https://github.com/react-navigation/react-navigation/issues/4271\n    if (nextProps.screenProps !== this.props.screenProps) {\n      this.setState({ nextScenes });\n    }\n\n    if (nextScenes === this.state.scenes) {\n      return;\n    }\n\n    return nextScenes;\n  };\n\n  private startTransition(props: Props, nextProps: Props) {\n    const indexHasChanged =\n      props.navigation.state.index !== nextProps.navigation.state.index;\n    let nextScenes = this.computeScenes(props, nextProps);\n\n    if (!nextScenes) {\n      // prevTransitionProps are the same as transitionProps in this case\n      // because nothing changed\n      this.prevTransitionProps = this.transitionProps;\n\n      // Unsure if this is actually a good idea... Also related to\n      // https://github.com/react-navigation/react-navigation/issues/5247\n      // - the animation is interrupted before completion so this ensures\n      // that it is properly set to the final position before firing\n      // onTransitionEnd\n      this.state.position.setValue(props.navigation.state.index);\n\n      this.handleTransitionEnd();\n      return;\n    }\n\n    const nextState = {\n      ...this.state,\n      scenes: nextScenes,\n    };\n\n    // grab the position animated value\n    const { position } = nextState;\n\n    // determine where we are meant to transition to\n    const toValue = nextProps.navigation.state.index;\n\n    // compute transitionProps\n    this.prevTransitionProps = this.transitionProps;\n    this.transitionProps = buildTransitionProps(nextProps, nextState);\n    let { isTransitioning } = this.transitionProps.navigation.state;\n\n    // if the state isn't transitioning that is meant to signal that we should\n    // transition immediately to the new index. if the index hasn't changed, do\n    // the same thing here. it's not clear to me why we ever start a transition\n    // when the index hasn't changed, this requires further investigation.\n    if (!isTransitioning || !indexHasChanged) {\n      this.setState(nextState, async () => {\n        if (nextProps.onTransitionStart) {\n          const result = nextProps.onTransitionStart(\n            this.transitionProps,\n            this.prevTransitionProps\n          );\n          if (result instanceof Promise) {\n            // why do we bother awaiting the result here?\n            await result;\n          }\n        }\n        // jump immediately to the new value\n        indexHasChanged && position.setValue(toValue);\n        // end the transition\n        this.handleTransitionEnd();\n      });\n    } else if (isTransitioning) {\n      this.isTransitionRunning = true;\n      this.setState(nextState, async () => {\n        if (nextProps.onTransitionStart) {\n          const result = nextProps.onTransitionStart(\n            this.transitionProps,\n            this.prevTransitionProps\n          );\n\n          // Wait for the onTransitionStart to resolve if needed.\n          if (result instanceof Promise) {\n            await result;\n          }\n        }\n\n        // get the transition spec.\n        const transitionUserSpec = nextProps.configureTransition\n          ? nextProps.configureTransition(\n              this.transitionProps,\n              this.prevTransitionProps\n            )\n          : null;\n\n        const transitionSpec = {\n          ...DefaultTransitionSpec,\n          ...transitionUserSpec,\n        };\n\n        const { timing } = transitionSpec;\n        delete transitionSpec.timing;\n\n        // if swiped back, indexHasChanged == true && positionHasChanged == false\n        // @ts-ignore\n        const positionHasChanged = position.__getValue() !== toValue;\n        if (indexHasChanged && positionHasChanged) {\n          timing(position, {\n            ...transitionSpec,\n            toValue: nextProps.navigation.state.index,\n          }).start(() => {\n            // In case the animation is immediately interrupted for some reason,\n            // we move this to the next frame so that onTransitionStart can fire\n            // first (https://github.com/react-navigation/react-navigation/issues/5247)\n            requestAnimationFrame(this.handleTransitionEnd);\n          });\n        } else {\n          this.handleTransitionEnd();\n        }\n      });\n    }\n  }\n\n  render() {\n    return (\n      <View onLayout={this.handleLayout} style={styles.main}>\n        {this.props.render(this.transitionProps, this.prevTransitionProps)}\n      </View>\n    );\n  }\n\n  private handleLayout = (event: LayoutChangeEvent) => {\n    const { height, width } = event.nativeEvent.layout;\n    if (\n      this.state.layout.initWidth === width &&\n      this.state.layout.initHeight === height\n    ) {\n      return;\n    }\n    const layout: TransitionerLayout = {\n      ...this.state.layout,\n      initHeight: height,\n      initWidth: width,\n      isMeasured: true,\n    };\n\n    layout.height.setValue(height);\n    layout.width.setValue(width);\n\n    const nextState = {\n      ...this.state,\n      layout,\n    };\n\n    this.transitionProps = buildTransitionProps(this.props, nextState);\n    this.setState(nextState);\n  };\n\n  private handleTransitionEnd = () => {\n    if (!this.isComponentMounted) {\n      return;\n    }\n    const prevTransitionProps = this.prevTransitionProps;\n    this.prevTransitionProps = undefined;\n\n    const scenes = filterStale(this.state.scenes);\n\n    const nextState = {\n      ...this.state,\n      scenes,\n    };\n\n    this.transitionProps = buildTransitionProps(this.props, nextState);\n\n    this.setState(nextState, async () => {\n      if (this.props.onTransitionEnd) {\n        const result = this.props.onTransitionEnd(\n          this.transitionProps,\n          prevTransitionProps\n        );\n\n        if (result instanceof Promise) {\n          await result;\n        }\n      }\n\n      if (this.queuedTransition) {\n        let { prevProps } = this.queuedTransition;\n        this.queuedTransition = null;\n        this.startTransition(prevProps, this.props);\n      } else {\n        this.isTransitionRunning = false;\n      }\n    });\n  };\n}\n\nfunction buildTransitionProps(props: Props, state: State): TransitionProps {\n  const { navigation } = props;\n\n  const { layout, position, scenes } = state;\n\n  const scene = scenes.find(isSceneActive);\n\n  if (!scene) {\n    throw new Error('Could not find active scene');\n  }\n\n  return {\n    layout,\n    navigation,\n    position,\n    scenes,\n    scene,\n    index: scene.index,\n  };\n}\n\nfunction isSceneNotStale(scene: Scene) {\n  return !scene.isStale;\n}\n\nfunction filterStale(scenes: Scene[]) {\n  const filtered = scenes.filter(isSceneNotStale);\n  if (filtered.length === scenes.length) {\n    return scenes;\n  }\n  return filtered;\n}\n\nfunction isSceneActive(scene: Scene) {\n  return scene.isActive;\n}\n\nconst styles = StyleSheet.create({\n  main: {\n    flex: 1,\n  },\n});\n\nexport default Transitioner;\n"]},"metadata":{},"sourceType":"module"}