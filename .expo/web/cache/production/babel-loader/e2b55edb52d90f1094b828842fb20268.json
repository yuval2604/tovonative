{"ast":null,"code":"'use strict';import ListViewDataSource from\"../ListView/ListViewDataSource\";var SwipeableListViewDataSource=function(){function SwipeableListViewDataSource(params){var _this=this;this._dataSource=new ListViewDataSource({getRowData:params.getRowData,getSectionHeaderData:params.getSectionHeaderData,rowHasChanged:function rowHasChanged(row1,row2){return row1.id!==_this._previousOpenRowID&&row2.id===_this._openRowID||row1.id===_this._previousOpenRowID&&row2.id!==_this._openRowID||params.rowHasChanged(row1,row2);},sectionHeaderHasChanged:params.sectionHeaderHasChanged});}var _proto=SwipeableListViewDataSource.prototype;_proto.cloneWithRowsAndSections=function cloneWithRowsAndSections(dataBlob,sectionIdentities,rowIdentities){this._dataSource=this._dataSource.cloneWithRowsAndSections(dataBlob,sectionIdentities,rowIdentities);this._dataBlob=dataBlob;this.rowIdentities=this._dataSource.rowIdentities;this.sectionIdentities=this._dataSource.sectionIdentities;return this;};_proto.getDataSource=function getDataSource(){return this._dataSource;};_proto.getOpenRowID=function getOpenRowID(){return this._openRowID;};_proto.getFirstRowID=function getFirstRowID(){if(this.rowIdentities){return this.rowIdentities[0]&&this.rowIdentities[0][0];}return Object.keys(this._dataBlob)[0];};_proto.getLastRowID=function getLastRowID(){if(this.rowIdentities&&this.rowIdentities.length){var lastSection=this.rowIdentities[this.rowIdentities.length-1];if(lastSection&&lastSection.length){return lastSection[lastSection.length-1];}}return Object.keys(this._dataBlob)[this._dataBlob.length-1];};_proto.setOpenRowID=function setOpenRowID(rowID){this._previousOpenRowID=this._openRowID;this._openRowID=rowID;this._dataSource=this._dataSource.cloneWithRowsAndSections(this._dataBlob,this.sectionIdentities,this.rowIdentities);return this;};return SwipeableListViewDataSource;}();export default SwipeableListViewDataSource;","map":{"version":3,"sources":["/Users/yuvalbeiser/Downloads/codecanyon-B1UUUVLW-harrier-react-native-ecommerce-ui-kit-template/eCommerce2/node_modules/react-native-web/dist/vendor/react-native/SwipeableListView/SwipeableListViewDataSource.js"],"names":["ListViewDataSource","SwipeableListViewDataSource","params","_this","_dataSource","getRowData","getSectionHeaderData","rowHasChanged","row1","row2","id","_previousOpenRowID","_openRowID","sectionHeaderHasChanged","_proto","prototype","cloneWithRowsAndSections","dataBlob","sectionIdentities","rowIdentities","_dataBlob","getDataSource","getOpenRowID","getFirstRowID","Object","keys","getLastRowID","length","lastSection","setOpenRowID","rowID"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule SwipeableListViewDataSource\n */\n'use strict';\n\nimport ListViewDataSource from '../ListView/ListViewDataSource';\n/**\n * Data source wrapper around ListViewDataSource to allow for tracking of\n * which row is swiped open and close opened row(s) when another row is swiped\n * open.\n *\n * See https://github.com/facebook/react-native/pull/5602 for why\n * ListViewDataSource is not subclassed.\n */\n\nvar SwipeableListViewDataSource =\n/*#__PURE__*/\nfunction () {\n  function SwipeableListViewDataSource(params) {\n    var _this = this;\n\n    this._dataSource = new ListViewDataSource({\n      getRowData: params.getRowData,\n      getSectionHeaderData: params.getSectionHeaderData,\n      rowHasChanged: function rowHasChanged(row1, row2) {\n        /**\n         * Row needs to be re-rendered if its swiped open/close status is\n         * changed, or its data blob changed.\n         */\n        return row1.id !== _this._previousOpenRowID && row2.id === _this._openRowID || row1.id === _this._previousOpenRowID && row2.id !== _this._openRowID || params.rowHasChanged(row1, row2);\n      },\n      sectionHeaderHasChanged: params.sectionHeaderHasChanged\n    });\n  }\n\n  var _proto = SwipeableListViewDataSource.prototype;\n\n  _proto.cloneWithRowsAndSections = function cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities) {\n    this._dataSource = this._dataSource.cloneWithRowsAndSections(dataBlob, sectionIdentities, rowIdentities);\n    this._dataBlob = dataBlob;\n    this.rowIdentities = this._dataSource.rowIdentities;\n    this.sectionIdentities = this._dataSource.sectionIdentities;\n    return this;\n  } // For the actual ListView to use\n  ;\n\n  _proto.getDataSource = function getDataSource() {\n    return this._dataSource;\n  };\n\n  _proto.getOpenRowID = function getOpenRowID() {\n    return this._openRowID;\n  };\n\n  _proto.getFirstRowID = function getFirstRowID() {\n    /**\n     * If rowIdentities is specified, find the first data row from there since\n     * we don't want to attempt to bounce section headers. If unspecified, find\n     * the first data row from _dataBlob.\n     */\n    if (this.rowIdentities) {\n      return this.rowIdentities[0] && this.rowIdentities[0][0];\n    }\n\n    return Object.keys(this._dataBlob)[0];\n  };\n\n  _proto.getLastRowID = function getLastRowID() {\n    if (this.rowIdentities && this.rowIdentities.length) {\n      var lastSection = this.rowIdentities[this.rowIdentities.length - 1];\n\n      if (lastSection && lastSection.length) {\n        return lastSection[lastSection.length - 1];\n      }\n    }\n\n    return Object.keys(this._dataBlob)[this._dataBlob.length - 1];\n  };\n\n  _proto.setOpenRowID = function setOpenRowID(rowID) {\n    this._previousOpenRowID = this._openRowID;\n    this._openRowID = rowID;\n    this._dataSource = this._dataSource.cloneWithRowsAndSections(this._dataBlob, this.sectionIdentities, this.rowIdentities);\n    return this;\n  };\n\n  return SwipeableListViewDataSource;\n}();\n\nexport default SwipeableListViewDataSource;"]},"metadata":{},"sourceType":"module"}