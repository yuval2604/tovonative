{"ast":null,"code":"var hasOwnProperty=Object.prototype.hasOwnProperty;function is(x,y){if(x===y){return x!==0||y!==0||1/x===1/y;}else{return x!==x&&y!==y;}}function shallowEqual(objA,objB){if(is(objA,objB)){return true;}if(typeof objA!=='object'||objA===null||typeof objB!=='object'||objB===null){return false;}var keysA=Object.keys(objA);var keysB=Object.keys(objB);if(keysA.length!==keysB.length){return false;}for(var i=0;i<keysA.length;i++){if(!hasOwnProperty.call(objB,keysA[i])||!is(objA[keysA[i]],objB[keysA[i]])){return false;}}return true;}export default shallowEqual;","map":{"version":3,"sources":["shallowEqual.tsx"],"names":["hasOwnProperty","Object","x","y","is","objA","objB","keysA","keysB","i"],"mappings":"AAAA,GAAMA,CAAAA,cAAc,CAAGC,MAAM,CAANA,SAAAA,CAAvB,cAAA,CAMA,QAAA,CAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAA4B,CAE1B,GAAIC,CAAC,GAAL,CAAA,CAAa,CAIX,MAAOA,CAAAA,CAAC,GAADA,CAAAA,EAAWC,CAAC,GAAZD,CAAAA,EAAsB,EAAA,CAAA,GAAU,EAAvC,CAAA,CAJF,CAAA,IAKO,CAEL,MAAOA,CAAAA,CAAC,GAADA,CAAAA,EAAWC,CAAC,GAAnB,CAAA,CAEH,CAOD,SAAA,CAAA,YAAA,CAAA,IAAA,CAAA,IAAA,CAA4C,CAC1C,GAAIC,EAAE,CAAA,IAAA,CAAN,IAAM,CAAN,CAAoB,CAClB,MAAA,KAAA,CAEF,IACE,MAAA,CAAA,IAAA,GAAA,QAAA,EACAC,IAAI,GADJ,IAAA,EAEA,MAAA,CAAA,IAAA,GAFA,QAAA,EAGAC,IAAI,GAJN,IAAA,CAKE,CACA,MAAA,MAAA,CAGF,IAAMC,CAAAA,KAAK,CAAGN,MAAM,CAANA,IAAAA,CAAd,IAAcA,CAAd,CACA,GAAMO,CAAAA,KAAK,CAAGP,MAAM,CAANA,IAAAA,CAAd,IAAcA,CAAd,CAEA,GAAIM,KAAK,CAALA,MAAAA,GAAiBC,KAAK,CAA1B,MAAA,CAAmC,CACjC,MAAA,MAAA,CAIF,KAAK,GAAIC,CAAAA,CAAC,CAAV,CAAA,CAAgBA,CAAC,CAAGF,KAAK,CAAzB,MAAA,CAAkCE,CAAlC,EAAA,CAAuC,CACrC,GACE,CAACT,cAAc,CAAdA,IAAAA,CAAAA,IAAAA,CAA0BO,KAAK,CAAhC,CAAgC,CAA/BP,CAAD,EACA,CAACI,EAAE,CAACC,IAAI,CAACE,KAAK,CAAX,CAAW,CAAN,CAAL,CAAiBD,IAAI,CAACC,KAAK,CAFhC,CAEgC,CAAN,CAArB,CAFL,CAGE,CACA,MAAA,MAAA,CAEH,CAED,OAAA,KAAA,CAGF,eAAA,CAAA,YAAA","sourcesContent":["const hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x: any, y: any) {\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    // Added the nonzero y check to make Flow happy, but it is redundant\n    return x !== 0 || y !== 0 || 1 / x === 1 / y;\n  } else {\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y;\n  }\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA: any, objB: any) {\n  if (is(objA, objB)) {\n    return true;\n  }\n  if (\n    typeof objA !== 'object' ||\n    objA === null ||\n    typeof objB !== 'object' ||\n    objB === null\n  ) {\n    return false;\n  }\n\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (let i = 0; i < keysA.length; i++) {\n    if (\n      !hasOwnProperty.call(objB, keysA[i]) ||\n      !is(objA[keysA[i]], objB[keysA[i]])\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport default shallowEqual;\n"]},"metadata":{},"sourceType":"module"}