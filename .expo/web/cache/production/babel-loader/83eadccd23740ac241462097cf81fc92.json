{"ast":null,"code":"import _extends from\"@babel/runtime/helpers/extends\";import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import _possibleConstructorReturn from\"@babel/runtime/helpers/possibleConstructorReturn\";import _getPrototypeOf from\"@babel/runtime/helpers/getPrototypeOf\";import _inherits from\"@babel/runtime/helpers/inherits\";var _jsxFileName=\"/Users/brentvatne/coding/react-navigation-stack/src/views/StackView/createPointerEventsContainer.tsx\";import*as React from'react';var MIN_POSITION_OFFSET=0.01;export default function createPointerEventsContainer(Component){var Container=function(_React$Component){_inherits(Container,_React$Component);function Container(){var _getPrototypeOf2;var _this;_classCallCheck(this,Container);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Container)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.pointerEvents=_this.computePointerEvents();_this.component=null;_this.handleComponentRef=function(component){_this.component=component;if(component&&typeof component.setNativeProps!=='function'){throw new Error('Component must implement method `setNativeProps`');}};_this.handlePositionChange=function(){if(_this.component){var pointerEvents=_this.computePointerEvents();if(_this.pointerEvents!==pointerEvents){_this.pointerEvents=pointerEvents;_this.component.setNativeProps({pointerEvents:pointerEvents});}}};return _this;}_createClass(Container,[{key:\"componentWillUnmount\",value:function componentWillUnmount(){this.positionListener&&this.positionListener.remove();}},{key:\"bindPosition\",value:function bindPosition(){this.positionListener&&this.positionListener.remove();this.positionListener=new AnimatedValueSubscription(this.props.realPosition,this.handlePositionChange);}},{key:\"computePointerEvents\",value:function computePointerEvents(){var _this$props=this.props,navigation=_this$props.navigation,realPosition=_this$props.realPosition,scene=_this$props.scene;if(scene.isStale||navigation.state.index!==scene.index){return scene.index>navigation.state.index?'box-only':'none';}var offset=realPosition.__getAnimatedValue()-navigation.state.index;if(Math.abs(offset)>MIN_POSITION_OFFSET){return'box-only';}return'auto';}},{key:\"render\",value:function render(){this.bindPosition();this.pointerEvents=this.computePointerEvents();return React.createElement(Component,_extends({},this.props,{pointerEvents:this.pointerEvents,onComponentRef:this.handleComponentRef,__source:{fileName:_jsxFileName,lineNumber:95}}));}}]);return Container;}(React.Component);return Container;}var AnimatedValueSubscription=function(){function AnimatedValueSubscription(value,callback){_classCallCheck(this,AnimatedValueSubscription);this.value=value;this.token=value.addListener(callback);}_createClass(AnimatedValueSubscription,[{key:\"remove\",value:function remove(){this.value.removeListener(this.token);}}]);return AnimatedValueSubscription;}();","map":{"version":3,"sources":["createPointerEventsContainer.tsx"],"names":["MIN_POSITION_OFFSET","Container","React","component","pointerEvents","navigation","realPosition","scene","offset","Math","AnimatedValueSubscription","value"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, View } from 'react-native';\nimport { NavigationProp, Scene } from '../../types';\n\nconst MIN_POSITION_OFFSET = 0.01;\n\nexport type PointerEvents = 'box-only' | 'none' | 'auto';\n\nexport type InputProps = {\n  scene: Scene;\n  navigation: NavigationProp;\n  realPosition: Animated.Value;\n};\n\nexport type InjectedProps = {\n  pointerEvents: PointerEvents;\n  onComponentRef: (ref: View | null) => void;\n};\n\n/**\n * Create a higher-order component that automatically computes the\n * `pointerEvents` property for a component whenever navigation position\n * changes.\n */\nexport default function createPointerEventsContainer<\n  Props extends InjectedProps & InputProps\n>(\n  Component: React.ComponentType<Props>\n): React.ComponentType<Pick<Props, Exclude<keyof Props, keyof InjectedProps>>> {\n  class Container extends React.Component<Props> {\n    private pointerEvents = this.computePointerEvents();\n    private component: View | null = null;\n    private positionListener: AnimatedValueSubscription | undefined;\n\n    componentWillUnmount() {\n      this.positionListener && this.positionListener.remove();\n    }\n\n    private handleComponentRef = (component: View | null) => {\n      this.component = component;\n\n      if (component && typeof component.setNativeProps !== 'function') {\n        throw new Error('Component must implement method `setNativeProps`');\n      }\n    };\n\n    private bindPosition() {\n      this.positionListener && this.positionListener.remove();\n      this.positionListener = new AnimatedValueSubscription(\n        this.props.realPosition,\n        this.handlePositionChange\n      );\n    }\n\n    private handlePositionChange = (/* { value } */) => {\n      // This should log each frame when releasing the gesture or when pressing\n      // the back button! If not, something has gone wrong with the animated\n      // value subscription\n      // console.log(value);\n\n      if (this.component) {\n        const pointerEvents = this.computePointerEvents();\n        if (this.pointerEvents !== pointerEvents) {\n          this.pointerEvents = pointerEvents;\n          this.component.setNativeProps({ pointerEvents });\n        }\n      }\n    };\n\n    private computePointerEvents() {\n      const { navigation, realPosition, scene } = this.props;\n\n      if (scene.isStale || navigation.state.index !== scene.index) {\n        // The scene isn't focused.\n        return scene.index > navigation.state.index ? 'box-only' : 'none';\n      }\n\n      // @ts-ignore\n      const offset = realPosition.__getAnimatedValue() - navigation.state.index;\n      if (Math.abs(offset) > MIN_POSITION_OFFSET) {\n        // The positon is still away from scene's index.\n        // Scene's children should not receive touches until the position\n        // is close enough to scene's index.\n        return 'box-only';\n      }\n\n      return 'auto';\n    }\n\n    render() {\n      this.bindPosition();\n      this.pointerEvents = this.computePointerEvents();\n\n      return (\n        <Component\n          {...this.props}\n          pointerEvents={this.pointerEvents}\n          onComponentRef={this.handleComponentRef}\n        />\n      );\n    }\n  }\n\n  return Container as any;\n}\n\nclass AnimatedValueSubscription {\n  private value: Animated.Value;\n  private token: string;\n\n  constructor(value: Animated.Value, callback: Animated.ValueListenerCallback) {\n    this.value = value;\n    this.token = value.addListener(callback);\n  }\n\n  remove() {\n    this.value.removeListener(this.token);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}