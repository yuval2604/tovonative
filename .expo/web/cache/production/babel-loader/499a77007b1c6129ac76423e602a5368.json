{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.Spinner=undefined;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _jsxFileName='src/basic/Spinner.js';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=require('react');var _react2=_interopRequireDefault(_react);var _propTypes=require('prop-types');var _propTypes2=_interopRequireDefault(_propTypes);var _reactNative=require(\"react-native-web/dist/index\");var _nativeBaseShoutemTheme=require('native-base-shoutem-theme');var _platform=require(\"../theme/variables/platform\");var _platform2=_interopRequireDefault(_platform);var _mapPropsToStyleNames=require(\"../utils/mapPropsToStyleNames\");var _mapPropsToStyleNames2=_interopRequireDefault(_mapPropsToStyleNames);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Spinner=function(_Component){_inherits(Spinner,_Component);function Spinner(){_classCallCheck(this,Spinner);return _possibleConstructorReturn(this,(Spinner.__proto__||Object.getPrototypeOf(Spinner)).apply(this,arguments));}_createClass(Spinner,[{key:'render',value:function render(){var _this2=this;var variables=this.context.theme?this.context.theme['@@shoutem.theme/themeStyle'].variables:_platform2.default;return _react2.default.createElement(_reactNative.ActivityIndicator,_extends({ref:function ref(c){return _this2._root=c;}},this.props,{color:this.props.color?this.props.color:this.props.inverse?variables.inverseSpinnerColor:variables.defaultSpinnerColor,size:this.props.size?this.props.size:'large',__source:{fileName:_jsxFileName,lineNumber:18}}));}}]);return Spinner;}(_react.Component);Spinner.contextTypes={theme:_propTypes2.default.object};Spinner.propTypes=_extends({},_reactNative.ActivityIndicator.propTypes,{color:_propTypes2.default.string,inverse:_propTypes2.default.bool});var StyledSpinner=(0,_nativeBaseShoutemTheme.connectStyle)('NativeBase.Spinner',{},_mapPropsToStyleNames2.default)(Spinner);exports.Spinner=StyledSpinner;","map":{"version":3,"sources":["../../../src/basic/Spinner.js"],"names":["Spinner","Component","contextTypes","theme","PropTypes","variables","variable","ActivityIndicator","color","inverse","StyledSpinner","mapPropsToStyleNames"],"mappings":"y1BAAA,GAAA,CAAA,MAAA,CAAA,OAAA,CAAA,OAAA,CAAA,C,2CACA,GAAA,CAAA,UAAA,CAAA,OAAA,CAAA,YAAA,CAAA,C,uCACA,U,0DACA,GAAA,CAAA,uBAAA,CAAA,OAAA,CAAA,2BAAA,CAAA,CAEA,GAAA,CAAA,SAAA,CAAA,OAAA,+BAAA,C,iDACA,GAAA,CAAA,qBAAA,CAAA,OAAA,iCAAA,C,y8BAEMA,IAAAA,CAAAA,O,mRAIK,CAAA,GAAA,CAAA,MAAA,CAAA,IAAA,CACP,GAAMK,CAAAA,SAAAA,CAAY,KAAA,OAAA,CAAA,KAAA,CACd,KAAA,OAAA,CAAA,KAAA,CAAA,4BAAA,EADc,SAAA,CAEdC,UAAAA,CAFJ,OAAA,CAGA,MACE,CAAA,OAAA,CAAA,OAAA,CAAA,aAAA,CAAC,YAAA,CAAD,iBAAA,CAAA,QAAA,CAAA,CACE,GAAA,CAAK,QAAA,CAAA,GAAA,CAAA,CAAA,CAAA,CAAA,MAAM,CAAA,MAAA,CAAA,KAAA,CAAN,CAAA,CADP,CAAA,CAAA,CAEM,KAFN,KAAA,CAAA,CAGE,KAAA,CACE,KAAA,KAAA,CAAA,KAAA,CACI,KAAA,KAAA,CADJ,KAAA,CAEI,KAAA,KAAA,CAAA,OAAA,CACAD,SAAAA,CADA,mBAAA,CAEAA,SAAAA,CARR,mBAAA,CAUE,IAAA,CAAM,KAAA,KAAA,CAAA,IAAA,CAAkB,KAAA,KAAA,CAAlB,IAAA,CAVR,OAAA,CAAA,QAAA,CAAA,CAAA,QAAA,CAAA,YAAA,CAAA,UAAA,CADF,EACE,CAAA,CAAA,CAAA,CADF,C,sBARkBJ,MAAAA,CAAAA,S,CAAhBD,CAAAA,O,CACGE,YADHF,CACkB,CACpBG,KAAAA,CAAOC,WAAAA,CAAAA,OAAAA,CADa,MAAA,CADlBJ,CAyBNA,OAAAA,CAAAA,SAAAA,CAAAA,QAAAA,CAAAA,EAAAA,CACKO,YAAAA,CAAAA,iBAAAA,CADLP,SAAAA,CAAAA,CAEEQ,KAAAA,CAAOJ,WAAAA,CAAAA,OAAAA,CAFTJ,MAAAA,CAGES,OAAAA,CAASL,WAAAA,CAAAA,OAAAA,CAHXJ,IAAAA,CAAAA,CAAAA,CAMA,GAAMU,CAAAA,aAAAA,CAAgB,CAAA,EAAA,uBAAA,CAAA,YAAA,EAAA,oBAAA,CAAA,EAAA,CAGpBC,sBAAAA,CAHoB,OAAA,EAAtB,OAAsB,CAAtB,C,QAM0BX,O,CAAjBU,a","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { ActivityIndicator } from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\n\nimport variable from '../theme/variables/platform';\nimport mapPropsToStyleNames from '../utils/mapPropsToStyleNames';\n\nclass Spinner extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n  render() {\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n    return (\n      <ActivityIndicator\n        ref={c => (this._root = c)}\n        {...this.props}\n        color={\n          this.props.color\n            ? this.props.color\n            : this.props.inverse\n            ? variables.inverseSpinnerColor\n            : variables.defaultSpinnerColor\n        }\n        size={this.props.size ? this.props.size : 'large'}\n      />\n    );\n  }\n}\n\nSpinner.propTypes = {\n  ...ActivityIndicator.propTypes,\n  color: PropTypes.string,\n  inverse: PropTypes.bool\n};\n\nconst StyledSpinner = connectStyle(\n  'NativeBase.Spinner',\n  {},\n  mapPropsToStyleNames\n)(Spinner);\n\nexport { StyledSpinner as Spinner };\n"]},"metadata":{},"sourceType":"script"}