{"ast":null,"code":"Object.defineProperty(exports,\"__esModule\",{value:true});exports.Icon=undefined;var _extends=Object.assign||function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source){if(Object.prototype.hasOwnProperty.call(source,key)){target[key]=source[key];}}}return target;};var _jsxFileName='src/basic/Icon/index.js';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _react=require('react');var _react2=_interopRequireDefault(_react);var _propTypes=require('prop-types');var _propTypes2=_interopRequireDefault(_propTypes);var _reactNative=require(\"react-native-web/dist/index\");var _nativeBaseShoutemTheme=require('native-base-shoutem-theme');var _platform=require(\"../../theme/variables/platform\");var _platform2=_interopRequireDefault(_platform);var _mapPropsToStyleNames=require(\"../../utils/mapPropsToStyleNames\");var _mapPropsToStyleNames2=_interopRequireDefault(_mapPropsToStyleNames);var _IconNB=require(\"../IconNB\");var _NBIcons=require(\"./NBIcons.json\");var _NBIcons2=_interopRequireDefault(_NBIcons);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");}return call&&(typeof call===\"object\"||typeof call===\"function\")?call:self;}function _inherits(subClass,superClass){if(typeof superClass!==\"function\"&&superClass!==null){throw new TypeError(\"Super expression must either be null or a function, not \"+typeof superClass);}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass;}var Icon=function(_Component){_inherits(Icon,_Component);function Icon(){_classCallCheck(this,Icon);return _possibleConstructorReturn(this,(Icon.__proto__||Object.getPrototypeOf(Icon)).apply(this,arguments));}_createClass(Icon,[{key:'getName',value:function getName(){var variables=this.context.theme?this.context.theme['@@shoutem.theme/themeStyle'].variables:_platform2.default;var platformStyle=variables.platformStyle;var platform=variables.platform;if((this.props.type||variables.iconFamily)==='Ionicons'){if(typeof _NBIcons2.default[this.props.name]!=='object'){return this.props.name;}else if(typeof _NBIcons2.default[this.props.name]==='object'){var name=void 0;if(platform==='ios'&&platformStyle!=='material'){name=this.props.active?_NBIcons2.default[this.props.name].ios.active:_NBIcons2.default[this.props.name].ios.default;}else{name=this.props.active?_NBIcons2.default[this.props.name].android.active:_NBIcons2.default[this.props.name].android.default;}return name;}}else{return this.props.name;}return null;}},{key:'getIconName',value:function getIconName(){if(_reactNative.Platform.OS==='ios'){if(this.props.ios){return this.props.ios;}return this.props.active?_NBIcons2.default[this.props.name].ios.active:_NBIcons2.default[this.props.name].ios.default;}else if(this.props.android){return this.props.android;}return this.props.active?_NBIcons2.default[this.props.name].android.active:_NBIcons2.default[this.props.name].android.default;}},{key:'render',value:function render(){var _this2=this;if(this.props.ios&&this.props.android){return _react2.default.createElement(_IconNB.IconNB,_extends({ref:function ref(c){return _this2._root=c;}},this.props,{name:_reactNative.Platform.OS==='ios'?this.props.ios:this.props.android,__source:{fileName:_jsxFileName,lineNumber:65}}));}else if(this.props.name&&(this.props.android||this.props.ios)){return _react2.default.createElement(_IconNB.IconNB,_extends({ref:function ref(c){return _this2._root=c;}},this.props,{name:this.getIconName(),__source:{fileName:_jsxFileName,lineNumber:73}}));}return _react2.default.createElement(_IconNB.IconNB,_extends({ref:function ref(c){return _this2._root=c;}},this.props,{name:this.getName(),__source:{fileName:_jsxFileName,lineNumber:81}}));}}]);return Icon;}(_react.Component);Icon.contextTypes={theme:_propTypes2.default.object};Icon.propTypes=_extends({},_IconNB.IconNB.propTypes,{style:_propTypes2.default.oneOfType([_propTypes2.default.object,_propTypes2.default.number,_propTypes2.default.array]),name:_propTypes2.default.string,ios:_propTypes2.default.string,android:_propTypes2.default.string,active:_propTypes2.default.bool,type:_propTypes2.default.string});var StyledIcon=(0,_nativeBaseShoutemTheme.connectStyle)('NativeBase.Icon',{},_mapPropsToStyleNames2.default)(Icon);exports.Icon=StyledIcon;","map":{"version":3,"sources":["../../../../src/basic/Icon/index.js"],"names":["Icon","Component","contextTypes","theme","PropTypes","variables","variable","platformStyle","platform","ic","name","Platform","IconNB","style","ios","android","active","type","StyledIcon","mapPropsToStyleNames"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Platform } from 'react-native';\nimport { connectStyle } from 'native-base-shoutem-theme';\n\nimport variable from '../../theme/variables/platform';\nimport mapPropsToStyleNames from '../../utils/mapPropsToStyleNames';\nimport { IconNB } from '../IconNB';\n\nimport ic from './NBIcons.json';\n\nclass Icon extends Component {\n  static contextTypes = {\n    theme: PropTypes.object\n  };\n\n  getName() {\n    const variables = this.context.theme\n      ? this.context.theme['@@shoutem.theme/themeStyle'].variables\n      : variable;\n    const platformStyle = variables.platformStyle;\n    const platform = variables.platform;\n\n    if ((this.props.type || variables.iconFamily) === 'Ionicons') {\n      if (typeof ic[this.props.name] !== 'object') {\n        return this.props.name;\n      } else if (typeof ic[this.props.name] === 'object') {\n        let name;\n        if (platform === 'ios' && platformStyle !== 'material') {\n          name = this.props.active\n            ? ic[this.props.name].ios.active\n            : ic[this.props.name].ios.default;\n        } else {\n          name = this.props.active\n            ? ic[this.props.name].android.active\n            : ic[this.props.name].android.default;\n        }\n        return name;\n      }\n    } else {\n      return this.props.name;\n    }\n    return null;\n  }\n\n  getIconName() {\n    if (Platform.OS === 'ios') {\n      if (this.props.ios) {\n        return this.props.ios;\n      }\n      return this.props.active\n        ? ic[this.props.name].ios.active\n        : ic[this.props.name].ios.default;\n    } else if (this.props.android) {\n      return this.props.android;\n    }\n    return this.props.active\n      ? ic[this.props.name].android.active\n      : ic[this.props.name].android.default;\n  }\n\n  render() {\n    if (this.props.ios && this.props.android) {\n      return (\n        <IconNB\n          ref={c => (this._root = c)}\n          {...this.props}\n          name={Platform.OS === 'ios' ? this.props.ios : this.props.android}\n        />\n      );\n    } else if (this.props.name && (this.props.android || this.props.ios)) {\n      return (\n        <IconNB\n          ref={c => (this._root = c)}\n          {...this.props}\n          name={this.getIconName()}\n        />\n      );\n    }\n    return (\n      <IconNB\n        ref={c => (this._root = c)}\n        {...this.props}\n        name={this.getName()}\n      />\n    );\n  }\n}\n\nIcon.propTypes = {\n  ...IconNB.propTypes,\n  style: PropTypes.oneOfType([\n    PropTypes.object,\n    PropTypes.number,\n    PropTypes.array\n  ]),\n  name: PropTypes.string,\n  ios: PropTypes.string,\n  android: PropTypes.string,\n  active: PropTypes.bool,\n  type: PropTypes.string\n};\n\nconst StyledIcon = connectStyle('NativeBase.Icon', {}, mapPropsToStyleNames)(\n  Icon\n);\n\nexport { StyledIcon as Icon };\n"]},"metadata":{},"sourceType":"script"}