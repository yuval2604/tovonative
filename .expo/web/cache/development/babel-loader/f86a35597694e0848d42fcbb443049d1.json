{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/yuvalbeiser/Downloads/codecanyon-B1UUUVLW-harrier-react-native-ecommerce-ui-kit-template/eCommerce2/node_modules/react-native-progress-steps/src/ProgressSteps/StepIcon.js\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport PropTypes from 'prop-types';\n\nvar StepIcon = function (_Component) {\n  _inherits(StepIcon, _Component);\n\n  function StepIcon() {\n    _classCallCheck(this, StepIcon);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StepIcon).apply(this, arguments));\n  }\n\n  _createClass(StepIcon, [{\n    key: \"render\",\n    value: function render() {\n      var styles;\n\n      if (this.props.isActiveStep) {\n        styles = {\n          circleStyle: {\n            width: 40,\n            height: 40,\n            borderRadius: 20,\n            backgroundColor: this.props.activeStepIconColor,\n            borderColor: this.props.activeStepIconBorderColor,\n            borderWidth: 5,\n            bottom: 2\n          },\n          circleText: {\n            alignSelf: 'center',\n            top: 20 / 3\n          },\n          labelText: {\n            textAlign: 'center',\n            flexWrap: 'wrap',\n            width: 100,\n            paddingTop: 2,\n            fontFamily: this.props.labelFontFamily,\n            color: this.props.activeLabelColor\n          },\n          leftBar: {\n            position: 'absolute',\n            top: 40 / 2.22,\n            left: 0,\n            right: 40 + 8,\n            borderTopStyle: this.props.borderStyle,\n            borderTopWidth: this.props.borderWidth,\n            borderTopColor: this.props.completedProgressBarColor,\n            marginRight: 40 / 2 + 2\n          },\n          rightBar: {\n            position: 'absolute',\n            top: 40 / 2.22,\n            right: 0,\n            left: 40 + 8,\n            borderTopStyle: this.props.borderStyle,\n            borderTopWidth: this.props.borderWidth,\n            borderTopColor: this.props.progressBarColor,\n            marginLeft: 40 / 2 + 2\n          },\n          stepNum: {\n            color: this.props.activeStepNumColor\n          }\n        };\n      } else if (this.props.isCompletedStep) {\n        styles = {\n          circleStyle: {\n            width: 36,\n            height: 36,\n            borderRadius: 18,\n            backgroundColor: this.props.completedStepIconColor\n          },\n          circleText: {\n            alignSelf: 'center',\n            top: 18 / 2\n          },\n          labelText: {\n            textAlign: 'center',\n            flexWrap: 'wrap',\n            width: 100,\n            paddingTop: 2,\n            fontFamily: this.props.labelFontFamily,\n            color: this.props.labelColor,\n            marginTop: 4\n          },\n          leftBar: {\n            position: 'absolute',\n            top: 36 / 2,\n            left: 0,\n            right: 36 + 8,\n            borderTopStyle: this.props.borderStyle,\n            borderTopWidth: this.props.borderWidth,\n            borderTopColor: this.props.completedProgressBarColor,\n            marginRight: 36 / 2 + 4\n          },\n          rightBar: {\n            position: 'absolute',\n            top: 36 / 2,\n            right: 0,\n            left: 36 + 8,\n            borderTopStyle: this.props.borderStyle,\n            borderTopWidth: this.props.borderWidth,\n            borderTopColor: this.props.completedProgressBarColor,\n            marginLeft: 36 / 2 + 4\n          },\n          stepNum: {\n            color: this.props.completedStepNumColor\n          }\n        };\n      } else {\n        styles = {\n          circleStyle: {\n            width: 36,\n            height: 36,\n            borderRadius: 18,\n            backgroundColor: this.props.disabledStepIconColor\n          },\n          circleText: {\n            alignSelf: 'center',\n            top: 18 / 2\n          },\n          labelText: {\n            textAlign: 'center',\n            flexWrap: 'wrap',\n            width: 100,\n            paddingTop: 2,\n            fontFamily: this.props.labelFontFamily,\n            color: this.props.labelColor,\n            marginTop: 4\n          },\n          leftBar: {\n            position: 'absolute',\n            top: 36 / 2,\n            left: 0,\n            right: 36 + 8,\n            borderTopStyle: this.props.borderStyle,\n            borderTopWidth: this.props.borderWidth,\n            borderTopColor: this.props.progressBarColor,\n            marginRight: 36 / 2 + 4\n          },\n          rightBar: {\n            position: 'absolute',\n            top: 36 / 2,\n            right: 0,\n            left: 36 + 8,\n            borderTopStyle: this.props.borderStyle,\n            borderTopWidth: this.props.borderWidth,\n            borderTopColor: this.props.progressBarColor,\n            marginLeft: 36 / 2 + 4\n          },\n          stepNum: {\n            color: this.props.disabledStepNumColor\n          }\n        };\n      }\n\n      return React.createElement(View, {\n        style: {\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        }\n      }, React.createElement(View, {\n        style: styles.circleStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        }\n      }, React.createElement(Text, {\n        style: styles.circleText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        }\n      }, this.props.isCompletedStep ? React.createElement(Text, {\n        style: {\n          color: this.props.completedCheckColor\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        }\n      }, \"\\u2713\") : React.createElement(Text, {\n        style: styles.stepNum,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        }\n      }, this.props.stepNum))), React.createElement(Text, {\n        style: styles.labelText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        }\n      }, this.props.label), !this.props.isFirstStep && React.createElement(View, {\n        style: styles.leftBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        }\n      }), !this.props.isLastStep && React.createElement(View, {\n        style: styles.rightBar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        }\n      }));\n    }\n  }]);\n\n  return StepIcon;\n}(Component);\n\nStepIcon.propTypes = {\n  stepCount: PropTypes.number.isRequired,\n  stepNum: PropTypes.number.isRequired,\n  label: PropTypes.string.isRequired,\n  isFirstStep: PropTypes.bool.isRequired,\n  isLastStep: PropTypes.bool.isRequired,\n  borderWidth: PropTypes.number,\n  borderStyle: PropTypes.string,\n  activeStepIconBorderColor: PropTypes.string,\n  progressBarColor: PropTypes.string,\n  completedProgressBarColor: PropTypes.string,\n  activeStepIconColor: PropTypes.string,\n  disabledStepIconColor: PropTypes.string,\n  completedStepIconColor: PropTypes.string,\n  labelFontFamily: PropTypes.string,\n  labelColor: PropTypes.string,\n  activeLabelColor: PropTypes.string,\n  activeStepNumColor: PropTypes.string,\n  completedStepNumColor: PropTypes.string,\n  disabledStepNumColor: PropTypes.string,\n  completedCheckColor: PropTypes.string\n};\nStepIcon.defaultProps = {\n  borderWidth: 6,\n  borderStyle: 'solid',\n  activeStepIconBorderColor: '#4BB543',\n  progressBarColor: '#ebebe4',\n  completedProgressBarColor: '#4BB543',\n  activeStepIconColor: 'transparent',\n  completedStepIconColor: '#4BB543',\n  disabledStepIconColor: '#ebebe4',\n  labelColor: 'lightgray',\n  activeLabelColor: '#4BB543',\n  activeStepNumColor: 'black',\n  completedStepNumColor: 'black',\n  disabledStepNumColor: 'white',\n  completedCheckColor: 'white'\n};\nexport default StepIcon;","map":{"version":3,"sources":["/Users/yuvalbeiser/Downloads/codecanyon-B1UUUVLW-harrier-react-native-ecommerce-ui-kit-template/eCommerce2/node_modules/react-native-progress-steps/src/ProgressSteps/StepIcon.js"],"names":["React","Component","PropTypes","StepIcon","styles","props","isActiveStep","circleStyle","width","height","borderRadius","backgroundColor","activeStepIconColor","borderColor","activeStepIconBorderColor","borderWidth","bottom","circleText","alignSelf","top","labelText","textAlign","flexWrap","paddingTop","fontFamily","labelFontFamily","color","activeLabelColor","leftBar","position","left","right","borderTopStyle","borderStyle","borderTopWidth","borderTopColor","completedProgressBarColor","marginRight","rightBar","progressBarColor","marginLeft","stepNum","activeStepNumColor","isCompletedStep","completedStepIconColor","labelColor","marginTop","completedStepNumColor","disabledStepIconColor","disabledStepNumColor","flexDirection","alignItems","completedCheckColor","label","isFirstStep","isLastStep","propTypes","stepCount","number","isRequired","string","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, Text, TouchableOpacity } from 'react-native';\nimport PropTypes from 'prop-types';\n\nclass StepIcon extends Component {\n  render() {\n    let styles;\n\n    if (this.props.isActiveStep) {\n      styles = {\n        circleStyle: {\n          width: 40,\n          height: 40,\n          borderRadius: 20,\n          backgroundColor: this.props.activeStepIconColor,\n          borderColor: this.props.activeStepIconBorderColor,\n          borderWidth: 5,\n          bottom: 2\n        },\n        circleText: {\n          alignSelf: 'center',\n          top: 20 / 3\n        },\n        labelText: {\n          textAlign: 'center',\n          flexWrap: 'wrap',\n          width: 100,\n          paddingTop: 2,\n          fontFamily: this.props.labelFontFamily,\n          color: this.props.activeLabelColor\n        },\n        leftBar: {\n          position: 'absolute',\n          top: 40 / 2.22,\n          left: 0,\n          right: 40 + 8,\n          borderTopStyle: this.props.borderStyle,\n          borderTopWidth: this.props.borderWidth,\n          borderTopColor: this.props.completedProgressBarColor,\n          marginRight: 40 / 2 + 2\n        },\n        rightBar: {\n          position: 'absolute',\n          top: 40 / 2.22,\n          right: 0,\n          left: 40 + 8,\n          borderTopStyle: this.props.borderStyle,\n          borderTopWidth: this.props.borderWidth,\n          borderTopColor: this.props.progressBarColor,\n          marginLeft: 40 / 2 + 2\n        },\n        stepNum: {\n          color: this.props.activeStepNumColor\n        }\n      };\n    } else if (this.props.isCompletedStep) {\n      styles = {\n        circleStyle: {\n          width: 36,\n          height: 36,\n          borderRadius: 18,\n          backgroundColor: this.props.completedStepIconColor\n        },\n        circleText: {\n          alignSelf: 'center',\n          top: 18 / 2\n        },\n        labelText: {\n          textAlign: 'center',\n          flexWrap: 'wrap',\n          width: 100,\n          paddingTop: 2,\n          fontFamily: this.props.labelFontFamily,\n          color: this.props.labelColor,\n          marginTop: 4\n        },\n        leftBar: {\n          position: 'absolute',\n          top: 36 / 2,\n          left: 0,\n          right: 36 + 8,\n          borderTopStyle: this.props.borderStyle,\n          borderTopWidth: this.props.borderWidth,\n          borderTopColor: this.props.completedProgressBarColor,\n          marginRight: 36 / 2 + 4\n        },\n        rightBar: {\n          position: 'absolute',\n          top: 36 / 2,\n          right: 0,\n          left: 36 + 8,\n          borderTopStyle: this.props.borderStyle,\n          borderTopWidth: this.props.borderWidth,\n          borderTopColor: this.props.completedProgressBarColor,\n          marginLeft: 36 / 2 + 4\n        },\n        stepNum: {\n          color: this.props.completedStepNumColor\n        }\n      };\n    } else {\n      styles = {\n        circleStyle: {\n          width: 36,\n          height: 36,\n          borderRadius: 18,\n          backgroundColor: this.props.disabledStepIconColor\n        },\n        circleText: {\n          alignSelf: 'center',\n          top: 18 / 2\n        },\n        labelText: {\n          textAlign: 'center',\n          flexWrap: 'wrap',\n          width: 100,\n          paddingTop: 2,\n          fontFamily: this.props.labelFontFamily,\n          color: this.props.labelColor,\n          marginTop: 4\n        },\n        leftBar: {\n          position: 'absolute',\n          top: 36 / 2,\n          left: 0,\n          right: 36 + 8,\n          borderTopStyle: this.props.borderStyle,\n          borderTopWidth: this.props.borderWidth,\n          borderTopColor: this.props.progressBarColor,\n          marginRight: 36 / 2 + 4\n        },\n        rightBar: {\n          position: 'absolute',\n          top: 36 / 2,\n          right: 0,\n          left: 36 + 8,\n          borderTopStyle: this.props.borderStyle,\n          borderTopWidth: this.props.borderWidth,\n          borderTopColor: this.props.progressBarColor,\n          marginLeft: 36 / 2 + 4\n        },\n        stepNum: {\n          color: this.props.disabledStepNumColor\n        }\n      };\n    }\n\n    return (\n      <View style={{ flexDirection: 'column', alignItems: 'center' }}>\n        <View style={styles.circleStyle}>\n          <Text style={styles.circleText}>\n            {this.props.isCompletedStep ? (\n              <Text style={{ color: this.props.completedCheckColor }}>&#10003;</Text>\n            ) : (\n              <Text style={styles.stepNum}>{this.props.stepNum}</Text>\n            )}\n          </Text>\n        </View>\n        <Text style={styles.labelText}>{this.props.label}</Text>\n        {!this.props.isFirstStep && <View style={styles.leftBar} />}\n        {!this.props.isLastStep && <View style={styles.rightBar} />}\n      </View>\n    );\n  }\n}\n\nStepIcon.propTypes = {\n  stepCount: PropTypes.number.isRequired,\n  stepNum: PropTypes.number.isRequired,\n  label: PropTypes.string.isRequired,\n  isFirstStep: PropTypes.bool.isRequired,\n  isLastStep: PropTypes.bool.isRequired,\n\n  borderWidth: PropTypes.number,\n  borderStyle: PropTypes.string,\n  activeStepIconBorderColor: PropTypes.string,\n\n  progressBarColor: PropTypes.string,\n  completedProgressBarColor: PropTypes.string,\n\n  activeStepIconColor: PropTypes.string,\n  disabledStepIconColor: PropTypes.string,\n  completedStepIconColor: PropTypes.string,\n\n  labelFontFamily: PropTypes.string,\n  labelColor: PropTypes.string,\n  activeLabelColor: PropTypes.string,\n\n  activeStepNumColor: PropTypes.string,\n  completedStepNumColor: PropTypes.string,\n  disabledStepNumColor: PropTypes.string,\n\n  completedCheckColor: PropTypes.string\n};\n\nStepIcon.defaultProps = {\n  borderWidth: 6,\n  borderStyle: 'solid',\n  activeStepIconBorderColor: '#4BB543',\n\n  progressBarColor: '#ebebe4',\n  completedProgressBarColor: '#4BB543',\n\n  activeStepIconColor: 'transparent',\n  completedStepIconColor: '#4BB543',\n  disabledStepIconColor: '#ebebe4',\n\n  labelColor: 'lightgray',\n  activeLabelColor: '#4BB543',\n\n  activeStepNumColor: 'black',\n  completedStepNumColor: 'black',\n  disabledStepNumColor: 'white',\n\n  completedCheckColor: 'white'\n};\n\nexport default StepIcon;\n"]},"metadata":{},"sourceType":"module"}